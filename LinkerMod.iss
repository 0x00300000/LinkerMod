; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=LinkerMod
AppVersion=DevHead
DefaultDirName={pf}\My Program
; DefaultDirName={code:GetInstallationDir}
; DisableDirPage=Yes
DefaultGroupName=My Program
UninstallDisplayIcon={app}\LinkerMod.exe
Compression=lzma2
SolidCompression=yes
OutputDir=./build/

[Languages]
Name: english; MessagesFile: compiler:Default.isl

; Inlude the Inno Downloader scripts
#include ReadReg(HKEY_LOCAL_MACHINE,'Software\Sherlock Software\InnoTools\Downloader','ScriptPath','');

[Files]                              
; Source: "build\Release\game_mod.dll"; DestDir: "{app}"
; Source: "README.md"; DestDir: "{app}"; Flags: isreadme

[Icons]
; Name: "{group}\My Program"; Filename: "{app}\LinkerMod.exe"

[Components]
Name: "GameMod"; Description: "Game Mod"; Types: full compact custom; Flags: fixed

; exlusive flag makes them radio buttons
Name: "LinkerMod"; Description: "Mod Tools"; Types: full custom
Name: "LinkerMod\AssetUtil";	Description: "Asset Util"; Types: full;			Flags: 
Name: "LinkerMod\AssetViewer";	Description: "AssetViewer Mod"; Types: full;	Flags: 
Name: "LinkerMod\CoD2Map";		Description: "CoD2Map Mod"; Types: full;		Flags: 
Name: "LinkerMod\CoD2Rad";		Description: "CoD2Rad Mod"; Types: full;		Flags: 
Name: "LinkerMod\Linker";		Description: "Linker Mod"; Types: full;			Flags: 
Name: "LinkerMod\Radiant";		Description: "Radiant Mod"; Types: full;		Flags: 

[Files]
Source: "test.dll"; DestDir: "{app}"
Source: "build\Release\installer.dll";	DestDir: "{app}"
;Flags: dontcopy
Source: "build\Release\proxy.dll";			DestDir: "{app}\bin";
Source: "build\Release\game_mod.dll";		DestDir: "{app}\bin"; Components: GameMod
Source: "build\Release\asset_util.exe";		DestDir: "{app}\bin"; Components: LinkerMod\AssetUtil
Source: "build\Release\asset_viewer.dll";	DestDir: "{app}\bin"; Components: LinkerMod\AssetViewer
Source: "build\Release\cod2map.dll";		DestDir: "{app}\bin"; Components: LinkerMod\CoD2Map
Source: "build\Release\cod2rad.dll";		DestDir: "{app}\bin"; Components: LinkerMod\CoD2Rad
Source: "build\Release\linker_pc.dll";		DestDir: "{app}\bin"; Components: LinkerMod\Linker
Source: "build\Release\radiant_mod.dll";	DestDir: "{app}\bin"; Components: LinkerMod\Radiant

[Code]
(* Note: These *MUST* have the module exports definition files	*)
(*       Using __declspec(dllexport) does *NOT* work 			*)
procedure MyFunc(hWnd: Integer; lpText, lpCaption: String; uType: Cardinal);
external 'MyDllFunc@files:test.dll stdcall';

function  TestFunc( buffer:PChar): Cardinal;
external 'TestFunc@files:installer.dll stdcall';

function GetString(): String;
var str: String;
	size: Cardinal;
	tmp: PChar;
begin 
	// Note on passing PChars using RemObjects Pascal Script:
 	// '' pass a nil PChar    (null pointer)
  	// #0 pass an empty PChar (pointer to an empty string)
	size := TestFunc('');
	SetLength(str, size+1);
	TestFunc(str);
	MsgBox(str, mbInformation, MB_OK);
	Result := str;
end;

// Test
var progress:TOutputProgressWizardPage;

procedure InitializeWizard;
var
	a: string;
	downloadPage:TWizardpage;
begin
	itd_init;

	// GetString();
	
	 {Create our own progress page for the initial download of a small
		textfile from the server which says what the latest version is}
		progress := CreateOutputProgressPage(ITD_GetString(ITDS_Update_Caption), ITD_GetString(ITDS_Update_Description));

	// Stuff
	//Create the ITD GUI so that we have it if we decide to download a new intaller version
	downloadPage:=itd_downloadafter(wpWelcome);
end;

function GetInstallationDir(Param: string): string;
begin
  Result := '{pf}\My Program';
end;

function NextButtonClick(curPageID:integer):boolean;
var
 list, line:TStringList;
 newavail:boolean;
 i:integer;
 ourVersion:string;
 checkedSuccessfully:boolean;
 text:string;
begin
 result:=true;
 if curPageID=wpWelcome then begin

	 


			wizardform.show;
			progress.Show;
			progress.SetText(ITD_GetString(ITDS_Update_Checking),'');
			progress.SetProgress(2,10);
			try
				newavail:=false;

				checkedSuccessfully:=false;
				GetVersionNumbersString(expandconstant('{srcexe}'), ourVersion);

				if itd_downloadfile('https://api.github.com/repos/Nukem9/LinkerMod/releases',expandconstant('{tmp}\latestver.txt'))=ITDERR_SUCCESS then begin
				//'http://www.sherlocksoftware.org/innotools/latestver.txt',expandconstant('{tmp}\latestver.txt'))=ITDERR_SUCCESS then begin
					{ Now read the version from that file and see if it is newer.
						The file has a really simple format:

						2.0,"http://www.sherlocksoftware.org/innotools/example3%202.0.exe"

						The installer version, a comma, and the URL where the new version can be downloaded.
					}
					list:=TStringList.create;
					try
						list.loadfromfile(expandconstant('{tmp}\latestver.txt'));

						if list.count>0 then begin
							line:=TStringList.create;
							try
								line.commatext:=list[0]; //Break down the line into its components

								if line.count>=2 then begin
								checkedSuccessfully:=true;
								
								end;
							finally
								line.free;
							end;
						end;
					finally
						list.free;
					end;
				end;

				if not checkedSuccessfully then begin
					text:=ITD_GetString(ITDS_Update_Failed);
			StringChangeEx(text, '%1', ourVersion, true);
					MsgBox(text, mbInformation, MB_OK);
				end;
			finally
				progress.Hide;
			end;

	end;
 end;
