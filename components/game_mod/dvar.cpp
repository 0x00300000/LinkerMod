#include "stdafx.h"

dvar_s* gm_build_date = NULL;
dvar_s* gm_version = NULL;

dvar_s* r_d3d9ex = NULL;
dvar_s* r_noborder = NULL;
dvar_s* r_showTess = NULL;
dvar_s* sm_quality = NULL;
dvar_s* con_extcon = NULL;
dvar_s* con_inputMaxMatchesShown = NULL;
dvar_s* cg_drawViewpos = NULL;
dvar_s* scr_useFastFileOnly = NULL;
dvar_s* scr_suppressErrors = NULL;
dvar_s* perk_weapRateEnhanced = NULL;

dvar_s* com_waitForStreamer = NULL;
dvar_s* com_developer_print = NULL;

dvar_s* sv_showCommands = NULL;

dvar_s* dw_cacheTicket = NULL;

dvar_s* radiant_live = NULL;
dvar_s* radiant_livePort = NULL;
dvar_s* radiant_liveDebug = NULL;

dvar_s* r_renderTweaks = NULL;
dvar_s* r_renderLit = NULL;
dvar_s* r_renderStandardPostFx = NULL;
dvar_s* r_renderDistortion = NULL;
dvar_s* r_renderEmissive = NULL;
dvar_s* r_renderCorona = NULL;
dvar_s* r_renderSuperflare = NULL;
dvar_s* r_renderSun = NULL;
dvar_s* r_renderReflected = NULL;
dvar_s* r_renderCloakHDR = NULL;
dvar_s* r_streamCheckAabb = NULL;

bool com_cfg_readOnly_default = false;
dvar_s* com_cfg_readOnly = NULL;

const char* r_showTessNames[] =
{
	"off",
	"tech",
	"techset",
	"material",
	"vertexshader",
	"pixelshader",
	NULL
};

void R_RegisterCustomDvars()
{
	// DirectX9 extensions
	r_d3d9ex = Dvar_RegisterInt("r_d3d9ex", 0, 0, 1, DVAR_ARCHIVE, "Enable DirectX 9Ex improvements");

	// Borderless window toggle
	r_noborder = Dvar_RegisterInt("r_noborder", 0, 0, 1, DVAR_ARCHIVE, "Enable borderless windowed mode");

	//this can go up to 13 - but anything > 11 has artifacts
	sm_quality = Dvar_RegisterInt("sm_quality", 10, 5, 13, DVAR_ARCHIVE | 0x2000, "Exponent for shadow map resolution (2^n) - requires restart - anything over 11 has potential for artifacts");
	
	//
	// Patch ShadowMap SampleSize
	//
	BYTE smResPower = sm_quality->current.integer; //13 is max
	DWORD sampleSize = 1 << smResPower; //default is 1024
	PatchMemory(0x0071F93F, (PBYTE)&sampleSize, 4);
	sampleSize >>= 1;
	smResPower--;
	PatchMemory(0x0071F954, (PBYTE)&sampleSize, 4);

	//
	// For SpotLamp Lightmaps
	//
	PatchMemory(0x0071F976, (PBYTE)&sampleSize, 4);
	PatchMemory(0x0073534F, (PBYTE)&sampleSize, 4);
	PatchMemory(0x00735361, (PBYTE)&smResPower, 1);

	r_showTess = Dvar_RegisterEnum("r_showTess", r_showTessNames, 0, 0x80u, "Show details for each surface");
	com_cfg_readOnly = Dvar_RegisterInt("com_cfg_readOnly", com_cfg_readOnly_default ? 1 : 0, 0, 1, DVAR_AUTOEXEC, "Prevent writing to the config"); // Old flags were 0x2001
	
	static const char* com_dprintf_options[] =
	{
		"default",
		"always",
		"never",
		NULL
	};

	com_developer_print = Dvar_RegisterEnum("developer_print", com_dprintf_options, 0, 0x80, "Modify Com_DPrintf() behavior");
	sv_showCommands = Dvar_RegisterBool("sv_showCommands", 0, 0, "Print client commands in the log file");

	r_streamCheckAabb = Dvar_RegisterBool("r_streamCheckAabb", false, DVAR_CHEAT, "Enables runtime checking of the stream aabb tree");

	dw_cacheTicket = Dvar_RegisterBool("dw_cacheTicket", true, DVAR_ARCHIVE, "Cache the SteamAuth ticket to the disk");
}

void* rtn_R_RegisterDvars = (void*)0x006CA283;
void __declspec(naked) mfh_R_RegisterDvars()
{
	_asm
	{
		pushad
		call R_RegisterCustomDvars
		popad
		call Dvar_RegisterInt
		add esp, 0x48
		jmp rtn_R_RegisterDvars
	}
}

CG_RegisterDvars_t CG_RegisterDvars_o = NULL;
void __cdecl CG_RegisterDvars()
{
	CG_RegisterDvars_o();

	gm_build_date = Dvar_RegisterString("gm_build_date", __TIMESTAMP__, 0x10 | 0x8, "Compile time for game_mod");
	gm_version = Dvar_RegisterString("gm_version", DLL_VersionString(), 0x10 | 0x8, "Game_Mod version");
	
	con_extcon = Dvar_RegisterInt("con_extcon", 0, 0, 1, 1, "Enable external console window");
	con_inputMaxMatchesShown = Dvar_RegisterInt("con_inputMaxMatchesShown", 24, 1, 64, 1, "Maximum number of suggestions in the console autocomplete preview");
	
	cg_drawViewpos = Dvar_RegisterInt("cg_drawViewpos", 0, 0, 1, 1, "Draw the current player origin and view angles");
	scr_useFastFileOnly = Dvar_RegisterInt("scr_useFastFileOnly", 0, 0, 1, 0x2, "Disable the loading of raw script files from the current mod's directory");

	scr_suppressErrors = Dvar_RegisterBool("scr_suppressErrors", false, 0x2, "Suppress fatal script errors");

	perk_weapRateEnhanced = Dvar_RegisterInt("perk_weapRateEnhanced", 0, 0, 1, 0x80, "Double tap will shoot 2x the bullets for every shot");

	radiant_live = Dvar_RegisterInt("radiant_live", 0, 0, 1, 0x0, "Enable live Radiant updates in the game");
	radiant_livePort = Dvar_RegisterInt("radiant_livePort", 3700, 0, 65535, 0x0, "Network port for Radiant");
	radiant_liveDebug = Dvar_RegisterInt("radiant_liveDebug", 0, 0, 1, 0x0, "Debugging prints for Radiant commands");

	// Must be set at launch time to function correctly
	r_renderTweaks = Dvar_RegisterBool("r_renderTweaks", false, 0x2, "Allow renderer tweaks");

	r_renderLit = Dvar_RegisterBool("r_renderLit", true, 0x2, "");
	r_renderStandardPostFx = Dvar_RegisterBool("r_renderStandardPostFx", true, 0x2, "");
	r_renderDistortion = Dvar_RegisterBool("r_renderDistortion", true, 0x2, "");
	r_renderEmissive = Dvar_RegisterBool("r_renderEmissive", true, 0x2, "");
	r_renderCorona = Dvar_RegisterBool("r_renderCorona", true, 0x2, "");
	r_renderSuperflare = Dvar_RegisterBool("r_renderSuperflare", true, 0x2, "");
	r_renderSun = Dvar_RegisterBool("r_renderSun", true, 0x2, "");
	r_renderReflected = Dvar_RegisterBool("r_renderReflected", true, 0x2, "");
	r_renderCloakHDR = Dvar_RegisterBool("r_renderCloakHDR", true, 0x2, "");

	com_waitForStreamer = Dvar_RegisterInt("waitForStreamer", 1, 0, 2, DVAR_NOFLAG, "1) wait for initial lowmips, 2) wait for full initial texture load.");

	// Set the max number of suggestions to show in the console autocomplete preview
	PatchMemory(0x00B72F7C, (PBYTE)&con_inputMaxMatchesShown->current.value, 4);

	// Remap "debug_show_viewpos" to "cg_drawViewpos"
	PatchMemory(0x005BF103, (PBYTE)&cg_drawViewpos->name, 4);
}

dvar_s *Dvar_SetFromStringByNameFromSource(const char *dvarName, const char *string, DvarSetSource source, unsigned int flags)
{
	return ((dvar_s *(__cdecl *)(const char *, const char *, DvarSetSource, unsigned int))0x00426820)(dvarName, string, source, flags);
}

void Dvar_SetFromStringByName(const char *dvarName, const char *string)
{
	// Do not allow the default FOV to be set. Generally sent with CG_DeployServerCommand.
	if (dvarName && string)
	{
		if (!_stricmp(dvarName, "cg_fov") && !_stricmp(string, "65"))
			return;

		if (!_stricmp(dvarName, "cg_default_fov") && !_stricmp(string, "65"))
			return;
	}

	Dvar_SetFromStringByNameFromSource(dvarName, string, DVAR_SOURCE_INTERNAL, 0);
}

void Dvar_ClearModified(dvar_s *dvar)
{
	dvar->modified = 0;
}

void Patch_DvarDescriptions() {
	const char* p = nullptr;

#define DVAR_PATCH_DESCRIPTION(DVAR, DESC_HOOK_ADDR, DESC)	\
	p = DESC;												\
	PatchPush(DESC_HOOK_ADDR, (PBYTE)&p);

	DVAR_PATCH_DESCRIPTION("acousticSpikeMaxRange", 0x004e9206, "The maximum range from the player in world space that objects will be shown on the acoustic spike");
	DVAR_PATCH_DESCRIPTION("acousticSpikeMinRadius", 0x004e926f, "The minimum radius from the center of the sensor that objects will appear.");
	DVAR_PATCH_DESCRIPTION("acousticSpikeMinRange", 0x004e923d, "The minimum range from the player in world space that objects will be shown on the acoustic spike");
	DVAR_PATCH_DESCRIPTION("acousticSpikeRingSize", 0x004e92d7, "Max size of the ping ring visual for a sensor");
	DVAR_PATCH_DESCRIPTION("acousticSpikeSize", 0x004e92a2, "Scale the acoustic sensor");
	DVAR_PATCH_DESCRIPTION("ai_angularYawAccelRate", 0x007e2a23, "yaw acceleration rate");
	DVAR_PATCH_DESCRIPTION("ai_angularYawDecelFactor", 0x007e2a5b, "yaw deceleration factor (decel rate = factor * accel rate)");
	DVAR_PATCH_DESCRIPTION("ai_corpseCount", 0x007e0f9d, "Maximum number of AI corpses");
	DVAR_PATCH_DESCRIPTION("ai_debugAnimDeltas", 0x007e25b2, "Display animation delta debug information");
	DVAR_PATCH_DESCRIPTION("ai_debugClaimedNodes", 0x007e2756, "Enable debugging information claimed status of nodes");
	DVAR_PATCH_DESCRIPTION("ai_debugCoverEntityNum", 0x007e208c, "Display debug info for cover");
	DVAR_PATCH_DESCRIPTION("ai_debugEntIndex", 0x007e27b5, "Entity index of an entity to debug");
	DVAR_PATCH_DESCRIPTION("ai_debugFindPath", 0x007e2522, "Display AI 'find path' debugging information");
	DVAR_PATCH_DESCRIPTION("ai_debugFindPathWidth", 0x007e2568, "Display paths with the given width");
	DVAR_PATCH_DESCRIPTION("ai_eventDistBadPlace", 0x007e24d4, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistBullet", 0x007e242c, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistBulletRunning", 0x007e2464, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistDeath", 0x007e22dc, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistExplosion", 0x007e2314, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistFootstep", 0x007e21c4, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistFootstepLite", 0x007e21fc, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistGrenadePing", 0x007e234c, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistGunShot", 0x007e23bc, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistNewEnemy", 0x007e2234, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistPain", 0x007e226c, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistProjImpact", 0x007e249c, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistProjPing", 0x007e2384, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistReact", 0x007e229e, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_eventDistSilencedShot", 0x007e23f4, "Distance used for AI event");
	DVAR_PATCH_DESCRIPTION("ai_foliageSeeThroughDist", 0x007e12d5, "Maximum distance AI ignore foliage for sight trace to targets");
	DVAR_PATCH_DESCRIPTION("ai_friendlySuppressionDist", 0x007e117b, "Max distance at which AI suppress teammates");
	DVAR_PATCH_DESCRIPTION("ai_maxAttackerCount", 0x007e1b95, "Max number of AI's that will attack one player");
	DVAR_PATCH_DESCRIPTION("ai_meleeDamage", 0x007e1b73, "The amount of damage dealt by AI's melee attack");
	DVAR_PATCH_DESCRIPTION("ai_meleeHeight", 0x007e1b44, "The height of the AI's melee attack");
	DVAR_PATCH_DESCRIPTION("ai_meleeRange", 0x007e1ad4, "The maximum range of the AI's melee attack");
	DVAR_PATCH_DESCRIPTION("ai_meleeWidth", 0x007e1b0c, "The width of the AI's melee attack");
	DVAR_PATCH_DESCRIPTION("ai_moveOrientMode", 0x007e2138, "Debug AI Orient Mode");
	DVAR_PATCH_DESCRIPTION("ai_noPathToEnemyGiveupTime", 0x007e1bba, "Time the AI will continue to attack if the player goes off the path grid.");
	DVAR_PATCH_DESCRIPTION("ai_pathMomentum", 0x007e0fe0, "Momentum factor for continuing motion in previous direction. 0 for no momentum carry over");
	DVAR_PATCH_DESCRIPTION("ai_pathNegotiationOverlapCost", 0x007e1018, "The distance AI would travel around to avoid going to a negotiation being used. Multiplied by number of users of the negotiation");
	DVAR_PATCH_DESCRIPTION("ai_playerFarAccuracy", 0x007e1240, "Accuracy for AI far away from the player");
	DVAR_PATCH_DESCRIPTION("ai_playerFarRange", 0x007e1278, "Minimum range for AI to use 'far' accuracy");
	DVAR_PATCH_DESCRIPTION("ai_playerNearAccuracy", 0x007e11d4, "Accuracy for an AI near to a player");
	DVAR_PATCH_DESCRIPTION("ai_playerNearRange", 0x007e120c, "Maximum range for AI to use 'near' accuracy");
	DVAR_PATCH_DESCRIPTION("ai_showNearestNode", 0x007e1ec8, "Show nodes closest to AI");
	DVAR_PATCH_DESCRIPTION("ai_showNodes", 0x007e1e71, "Show AI navigation node debug information");
	DVAR_PATCH_DESCRIPTION("ai_showNodesDist", 0x007e1e99, "Maximum distance from the camera at which AI nodes are shown");
	DVAR_PATCH_DESCRIPTION("ai_showPaths", 0x007e2503, "Show AI navigation paths");
	DVAR_PATCH_DESCRIPTION("ai_showVisData", 0x007e1f09, "Display debug information for visibility data");
	DVAR_PATCH_DESCRIPTION("ai_showVisDataDist", 0x007e1f31, "Maximum distance for visibility data debugging information to be shown");
	DVAR_PATCH_DESCRIPTION("ai_showVolume", 0x007e2793, "Draw the goal volume and fixed node safe volume for an AI");
	DVAR_PATCH_DESCRIPTION("ai_slowdownMaxYawDiff", 0x007e2974, "max yaw diff used for slowdown cal");
	DVAR_PATCH_DESCRIPTION("ai_slowdownMinRate", 0x007e29a8, "anim rate at ai_slowdownMaxYawDiff");
	DVAR_PATCH_DESCRIPTION("ai_slowdownMinYawDiff", 0x007e2942, "min yaw diff before slowdown kicks in");
	DVAR_PATCH_DESCRIPTION("ai_slowdownRateBlendFactor", 0x007e29d6, "percent of desired rate that goes into final rate");
	DVAR_PATCH_DESCRIPTION("ai_threatUpdateInterval", 0x007e12a7, "AI target threat update interval in milliseconds");
	DVAR_PATCH_DESCRIPTION("ai_turnRate", 0x007e28b9, "turn rate for AI");
	DVAR_PATCH_DESCRIPTION("aim_accel_turnrate_lerp", 0x007556f4, "The acceleration of the turnrates");
	DVAR_PATCH_DESCRIPTION("aim_aimAssistRangeScale", 0x00755526, "Scales the weapon's aim assist range");
	DVAR_PATCH_DESCRIPTION("aim_assist_min_target_distance", 0x00755de6, "Aim assist will not work on targets beyond this distance");
	DVAR_PATCH_DESCRIPTION("aim_autoAimRangeScale", 0x00755555, "Scales the weapon's auto aim range");
	DVAR_PATCH_DESCRIPTION("aim_autoaim_lerp", 0x00755912, "The rate in degrees per second that the auto aim will converge to its target");
	DVAR_PATCH_DESCRIPTION("aim_autoaim_region_height", 0x007559b8, "The height of the auto aim region in virtual screen coordinates (0 - 480)");
	DVAR_PATCH_DESCRIPTION("aim_autoaim_region_width", 0x00755980, "The width of the auto aim region in virtual screen coordinates (0 - 640)");
	DVAR_PATCH_DESCRIPTION("aim_autobayonet_range", 0x00755b06, "The range of the auto bayonet");
	DVAR_PATCH_DESCRIPTION("aim_automelee_lerp", 0x00755a26, "The rate in degrees per second that the auto melee will converge to its target");
	DVAR_PATCH_DESCRIPTION("aim_automelee_range", 0x00755ace, "The range of the auto melee");
	DVAR_PATCH_DESCRIPTION("aim_automelee_region_height", 0x00755a96, "The height of the auto melee region in virtual screen coordinates (0 - 480)");
	DVAR_PATCH_DESCRIPTION("aim_automelee_region_width", 0x00755a5e, "The width of the auto melee region in virtual screen coordinates (0 - 640)");
	DVAR_PATCH_DESCRIPTION("aim_input_graph_index", 0x007555b6, "Which input graph to use");
	DVAR_PATCH_DESCRIPTION("aim_lockon_deflection", 0x00755ba6, "The amount of stick deflection for the lockon to activate");
	DVAR_PATCH_DESCRIPTION("aim_lockon_pitch_strength", 0x00755c6a, "The amount of aim assistance given by the target lock on (pitch)");
	DVAR_PATCH_DESCRIPTION("aim_lockon_region_height", 0x00755d08, "The height of the auto aim region in virtual screen coordinates(0-480)");
	DVAR_PATCH_DESCRIPTION("aim_lockon_region_width", 0x00755cd0, "The width of the auto aim region in virtual screen coordinates(0-640)");
	DVAR_PATCH_DESCRIPTION("aim_lockon_strength", 0x00755c08, "The amount of aim assistance given by the target lock on (yaw)");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_pitch_scale", 0x0075583e, "The vertical aim assist slowdown ratio from the hip");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_pitch_scale_ads", 0x00755872, "The vertical aim assist slowdown ratio when aiming down the sight");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_region_extended_height", 0x0075580a, "The screen height of the extended aim assist slowdown region");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_region_extended_width", 0x007557d1, "The screen width of the extended aim slowdown region");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_region_height", 0x0075579a, "The screen height of the aim assist slowdown region");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_region_width", 0x00755762, "The screen width of the aim slowdown region");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_yaw_scale", 0x007558a6, "The horizontal aim assist slowdown ratio from the hip");
	DVAR_PATCH_DESCRIPTION("aim_slowdown_yaw_scale_ads", 0x007558da, "The horizontal aim assist slowdown ratio when aiming down the sight");
	DVAR_PATCH_DESCRIPTION("aim_target_aim_tag_fast_update_interval", 0x00757b50, "How often the aim target tag is updated instead of pulled from cache inside of the \"fast\" zone.");
	DVAR_PATCH_DESCRIPTION("aim_target_aim_tag_slow_update_interval", 0x00757b72, "How often the aim target tag is updated instead of pulled from cache inside of the \"fast\" zone.");
	DVAR_PATCH_DESCRIPTION("aim_target_frustum_expand_fast_updates", 0x00757aad, "The frustum expansion to determine if a target is in the fast interval tag update zone. Positive is inwards.");
	DVAR_PATCH_DESCRIPTION("aim_target_frustum_expand_on_screen", 0x00757a71, "The frustum expansion to determine if a target is on screen. Positive is inwards.");
	DVAR_PATCH_DESCRIPTION("aim_target_frustum_min_distance", 0x00757ae9, "If target is inside this distance frustum culling is not applied.");
	DVAR_PATCH_DESCRIPTION("aim_target_sentient_half_height", 0x00757a39, "The radius used to calculate frustum target center for a sentient(actor or player)");
	DVAR_PATCH_DESCRIPTION("aim_target_sentient_radius", 0x00757a06, "The radius used to calculate target bounds for a sentient(actor or player)");
	DVAR_PATCH_DESCRIPTION("aim_turnrate_pitch", 0x007555de, "The vertical turn rate for aim assist when firing from the hip");
	DVAR_PATCH_DESCRIPTION("aim_turnrate_pitch_ads", 0x00755616, "The turn rate up and down for aim assist when aiming down the sight");
	DVAR_PATCH_DESCRIPTION("aim_turnrate_yaw", 0x0075564e, "The horizontal turn rate for aim assist when firing from the hip");
	DVAR_PATCH_DESCRIPTION("aim_turnrate_yaw_ads", 0x00755686, "The horizontal turn rate for aim assist when aiming down the sight");
	DVAR_PATCH_DESCRIPTION("aim_view_sensitivity_override", 0x00755b3e, "override value for view sensitivity");
	DVAR_PATCH_DESCRIPTION("band_12players", 0x0082c2a8, "12 player bandwidth req'd");
	DVAR_PATCH_DESCRIPTION("band_18players", 0x0082c2ca, "18 player bandwidth req'd");
	DVAR_PATCH_DESCRIPTION("band_2players", 0x0082c21d, "2 player bandwidth req'd");
	DVAR_PATCH_DESCRIPTION("band_4players", 0x0082c23f, "4 player bandwidth req'd");
	DVAR_PATCH_DESCRIPTION("band_6players", 0x0082c261, "8 player bandwidth req'd");
	DVAR_PATCH_DESCRIPTION("band_8players", 0x0082c286, "8 player bandwidth req'd");
	DVAR_PATCH_DESCRIPTION("band_demosystem", 0x0082c1f8, "demo system bandwidth req'd");
	DVAR_PATCH_DESCRIPTION("bandwidth_retry_interval", 0x0046cecb, "Interval at which Bandwidth test will be retried");
	DVAR_PATCH_DESCRIPTION("bg_aimSpreadMoveSpeedThreshold", 0x0065f356, "When player is moving faster than this speed, the aim spread will increase");
	DVAR_PATCH_DESCRIPTION("bg_blendTimeOverride", 0x0065f05b, "Force all player animations to have this blendtime");
	DVAR_PATCH_DESCRIPTION("bg_bobMax", 0x0065f00a, "The maximum allowed bob amplitude");
	DVAR_PATCH_DESCRIPTION("bg_fallDamageMaxHeight", 0x0065ebcf, "The height that a player will take maximum damage when falling");
	DVAR_PATCH_DESCRIPTION("bg_fallDamageMinHeight", 0x0065eb97, "The height that a player will start to take minimum damage if they fall");
	DVAR_PATCH_DESCRIPTION("bg_foliagesnd_fastinterval", 0x0065eb1f, "The time between each foliage sound when moving quickly");
	DVAR_PATCH_DESCRIPTION("bg_foliagesnd_maxspeed", 0x0065eaca, "The speed that a player must be going to make maximum noise while moving through foliage");
	DVAR_PATCH_DESCRIPTION("bg_foliagesnd_minspeed", 0x0065ea93, "The speed that a player must be going to make minimum noise while moving through foliage");
	DVAR_PATCH_DESCRIPTION("bg_foliagesnd_resetinterval", 0x0065eb47, "The time interval before foliage sounds are reset after the player has stopped moving");
	DVAR_PATCH_DESCRIPTION("bg_foliagesnd_slowinterval", 0x0065eafa, "The time between each foliage sound when moving slowly");
	DVAR_PATCH_DESCRIPTION("bg_forceDurationOverride", 0x0065f039, "Force all player animations to have this duration");
	DVAR_PATCH_DESCRIPTION("bg_gravity", 0x00660750, "Gravity in inches per second per second");
	DVAR_PATCH_DESCRIPTION("bg_gunXOffset", 0x00660f12, "This will offset where the bullets come out of the gun");
	DVAR_PATCH_DESCRIPTION("bg_ladder_yawcap", 0x0065ea23, "The maximum angle that a player can look around while on a ladder");
	DVAR_PATCH_DESCRIPTION("bg_legYawCrouchTolerance", 0x0065ed5b, "The amount the player's leg yaw can differ from his torso before moving to match");
	DVAR_PATCH_DESCRIPTION("bg_legYawProneTolerance", 0x0065ed98, "The amount the player's leg yaw can differ from his torso before moving to match while prone");
	DVAR_PATCH_DESCRIPTION("bg_legYawTolerance", 0x0065ed23, "The amount the player's leg yaw can differ from his torso before moving to match");
	DVAR_PATCH_DESCRIPTION("bg_lowGravity", 0x00660783, "Low gravity for slow or floaty objects, in inches per second per second");
	DVAR_PATCH_DESCRIPTION("bg_maxGrenadeIndicatorSpeed", 0x0065f38e, "Maximum speed of grenade that will show up in indicator and can be thrown back.");
	DVAR_PATCH_DESCRIPTION("bg_maxWeaponAnimScale", 0x00660edd, "The amount which weapon timers can cause player animations to scale their playback speed by");
	DVAR_PATCH_DESCRIPTION("bg_plantInWaterDepth", 0x00660e78, "Min distance a penetrated bullet must travel before it'll trigger the effects");
	DVAR_PATCH_DESCRIPTION("bg_proneSwingSpeed", 0x0065eceb, "The rate at which the player's legs swing around when turning and prone");
	DVAR_PATCH_DESCRIPTION("bg_prone_yawcap", 0x0065ea5b, "The maximum angle that a player can look around quickly while prone");
	DVAR_PATCH_DESCRIPTION("bg_shock_lookControl_fadeTime", 0x0066050a, "The time for the shellshock player control to fade in seconds");
	DVAR_PATCH_DESCRIPTION("bg_shock_lookControl_maxpitchspeed", 0x00660462, "Maximum pitch movement rate while shellshocked in degrees per second");
	DVAR_PATCH_DESCRIPTION("bg_shock_lookControl_maxyawspeed", 0x0066049a, "Maximum yaw movement rate while shell shocked in degrees per second");
	DVAR_PATCH_DESCRIPTION("bg_shock_lookControl_mousesensitivityscale", 0x006604d2, "Sensitivity scale to apply to a shellshocked player");
	DVAR_PATCH_DESCRIPTION("bg_shock_movement", 0x00660542, "Affect player's movement speed during shellshock");
	DVAR_PATCH_DESCRIPTION("bg_shock_screenBlurBlendFadeTime", 0x00660122, "The amount of time in seconds for the shellshock effect to fade");
	DVAR_PATCH_DESCRIPTION("bg_shock_screenBlurBlendTime", 0x006600e6, "The amount of time in seconds for the shellshock effect to blend");
	DVAR_PATCH_DESCRIPTION("bg_shock_screenFlashShotFadeTime", 0x0066018c, "In seconds, how soon from the end of the effect to start blending out the screengrab layer.");
	DVAR_PATCH_DESCRIPTION("bg_shock_screenFlashWhiteFadeTime", 0x0066015a, "In seconds, how soon from the end of the effect to start blending out the whiteout layer.");
	DVAR_PATCH_DESCRIPTION("bg_shock_screenType", 0x006600bd, "Shell shock screen effect type");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundDryLevel", 0x00660387, "Shell shock sound dry level");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundEnd", 0x0066007e, "Shellshock end sound alias");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundEndAbort", 0x0066009c, "Shellshock aborted end sound alias");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundFadeInTime", 0x00660285, "Shell shock sound fade in time in seconds");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundFadeOutTime", 0x006602c1, "Shell shock sound fade out time in seconds");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundLoop", 0x00660042, "Shellshock loop alias");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundLoopEndDelay", 0x00660331, "Sound loop end offset time from the end of the shellshock in seconds");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundLoopFadeTime", 0x006602f9, "Shell shock sound loop fade time in seconds");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundLoopSilent", 0x00660060, "The sound that gets blended with the shellshock loop alias");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundModEndDelay", 0x006603ed, "The delay from the end of the shell shock to the end of the sound modification");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundRoomType", 0x00660364, "sound room");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundSnapshot", 0x00660420, "sound snapshot");
	DVAR_PATCH_DESCRIPTION("bg_shock_soundWetLevel", 0x006603b5, "Shell shock sound wet level");
	DVAR_PATCH_DESCRIPTION("bg_shock_viewKickFadeTime", 0x0066022e, "The time for the shellshock kick effect to fade");
	DVAR_PATCH_DESCRIPTION("bg_shock_viewKickPeriod", 0x006601b8, "The period of the shellshock view kick effect");
	DVAR_PATCH_DESCRIPTION("bg_shock_viewKickRadius", 0x006601f6, "Shell shock kick radius");
	DVAR_PATCH_DESCRIPTION("bg_shock_visionset_inTime", 0x006605ad, "Vision set in transition time (in seconds)");
	DVAR_PATCH_DESCRIPTION("bg_shock_visionset_name", 0x00660586, "Vision set that will be transitioned to when this shellshock plays");
	DVAR_PATCH_DESCRIPTION("bg_shock_visionset_outTime", 0x006605df, "Vision set out transition time (in seconds)");
	DVAR_PATCH_DESCRIPTION("bg_slopeFrames", 0x00660f77, "The number of frames to use to determine slope run animations");
	DVAR_PATCH_DESCRIPTION("bg_swingSpeed", 0x0065ecb3, "The rate at which the player's legs swing around when strafing(multi-player only)");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeBase", 0x0065edc7, "The base speed-based view bob amplitude");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeDtp", 0x0065ee36, "The multiplier to apply to the player's speed to get the bob amplitude while diving to prone");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeDucked", 0x0065ef20, "The multiplier to apply to the player's speed to get the bob amplitude while ducking");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeDuckedAds", 0x0065ef58, "The multiplier to apply to the player's speed to get the view bob amplitude while ducking ADS");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeProne", 0x0065ef90, "The multiplier to apply to the player's speed to get the bob amplitude while prone");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeRoll", 0x0065efd2, "The amplitude applied to the roll for view bobbing");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeSprinting", 0x0065edf8, "The multiplier to apply to the player's speed to get the bob amplitude while sprinting");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeStanding", 0x0065eeb0, "The multiplier to apply to the player's speed to get the bob amplitude while standing");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeStandingAds", 0x0065eee8, "The multiplier to apply to the player's speed to get the view bob amplitude while standing and ADS");
	DVAR_PATCH_DESCRIPTION("bg_viewBobAmplitudeSwimming", 0x0065ee72, "The multiplier to apply to the player's speed to get the bob amplitude while swimming");
	DVAR_PATCH_DESCRIPTION("bg_viewKickMax", 0x0065e6e9, "The maximum view kick");
	DVAR_PATCH_DESCRIPTION("bg_viewKickMin", 0x0065e71b, "The minimum view kick");
	DVAR_PATCH_DESCRIPTION("bg_viewKickRandom", 0x0065e74f, "The random direction scale view kick");
	DVAR_PATCH_DESCRIPTION("bg_viewKickScale", 0x0065e6b6, "The scale to apply to the damage done to caluclate damage view kick");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeBase", 0x0065f082, "The base speed-based weapon bob amplitude");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeDtp", 0x0065f0f1, "The multiplier to apply to the player's speed to get the weapon bob amplitude while diving to prone");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeDucked", 0x0065f1a3, "The multiplier to apply to the player's speed to get the weapon bob amplitude while ducking");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeProne", 0x0065f1e1, "The multiplier to apply to the player's speed to get the weapon bob amplitude while prone");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeRoll", 0x0065f223, "The amplitude applied to the roll for weapon bobbing");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeSprinting", 0x0065f0b3, "The multiplier to apply to the player's speed to get the weapon bob amplitude while sprinting");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeStanding", 0x0065f165, "The multiplier to apply to the player's speed to get the weapon bob amplitude while standing");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobAmplitudeSwimming", 0x0065f12d, "The multiplier to apply to the player's speed to get the weapon bob amplitude while swimming");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobFrequencySwimming", 0x0065f2ca, "Controls the speed of the camera bob while swimming");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobHeavyWeaponScalar", 0x0065f303, "Scalar applied to bob angles for heavy weapons (minigun)");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobLag", 0x0065f28f, "The lag that will be applied the weapon bob cycle");
	DVAR_PATCH_DESCRIPTION("bg_weaponBobMax", 0x0065f25b, "The maximum allowed weapon/viewmodel bob amplitude");
	DVAR_PATCH_DESCRIPTION("bg_weaponleftbone", 0x00660f46, "Left hand weapon bone name");
	DVAR_PATCH_DESCRIPTION("bg_weaponrightbone", 0x00660f5c, "Right handed weapon bone name");
	DVAR_PATCH_DESCRIPTION("bullet_penetrationMinFxDist", 0x00660a5f, "Min distance a penetrated bullet must travel before it'll trigger the effects");
	DVAR_PATCH_DESCRIPTION("bulletrange", 0x006985e2, "Defines the how far the bulllets will go.");
	DVAR_PATCH_DESCRIPTION("category", 0x00590c5b, "The category number");
	DVAR_PATCH_DESCRIPTION("categoryPlaylist", 0x00590c7d, "The playlist index in the category");
	DVAR_PATCH_DESCRIPTION("cg_MaxDownedPulseRate", 0x004a6c31, "The amount of alpha to fade per second, at most for downed allies");
	DVAR_PATCH_DESCRIPTION("cg_MinDownedPulseRate", 0x004a6bf5, "The amount of alpha to fade per second, at minimum for downed allies");
	DVAR_PATCH_DESCRIPTION("cg_ScoresPing_BgColor", 0x005c75ae, "Background color of ping");
	DVAR_PATCH_DESCRIPTION("cg_ScoresPing_HighColor", 0x005c750b, "Color for high ping");
	DVAR_PATCH_DESCRIPTION("cg_ScoresPing_Interval", 0x005c74e7, "Number of milliseconds each bar represents");
	DVAR_PATCH_DESCRIPTION("cg_ScoresPing_LowColor", 0x005c7575, "Color for low ping");
	DVAR_PATCH_DESCRIPTION("cg_ScoresPing_MaxBars", 0x005c74d0, "Number of bars to show in ping graph");
	DVAR_PATCH_DESCRIPTION("cg_ScoresPing_MedColor", 0x005c7540, "Color for medium ping");
	DVAR_PATCH_DESCRIPTION("cg_adsZScaleMax", 0x004a601a, "The scale factor for shrinky dinks");
	DVAR_PATCH_DESCRIPTION("cg_adsZoomToggleStyle", 0x004a39ea, "Style of zoom toggle - 0=oscillate, 1=rotate");
	DVAR_PATCH_DESCRIPTION("cg_bulletlength", 0x004a54e8, "The length of a non-tracer round");
	DVAR_PATCH_DESCRIPTION("cg_bulletwidth", 0x004a54b0, "The width of the non-tracer round");
	DVAR_PATCH_DESCRIPTION("cg_cameraVehicleExitTweenTime", 0x004a6f73, "Time(secs) to tween from gunner/vehicle camera to normal player camera");
	DVAR_PATCH_DESCRIPTION("cg_cameraWaterClip", 0x004a6d2a, "Min distance between camera and water surface. To prevent camera seeing water edge-on. Set to -1 to disable");
	DVAR_PATCH_DESCRIPTION("cg_centertime", 0x004a4d98, "The time for a center printed message to fade");
	DVAR_PATCH_DESCRIPTION("cg_chatHeight", 0x004a5623, "The font height of a chat message");
	DVAR_PATCH_DESCRIPTION("cg_chatTime", 0x004a5601, "The amount of time that a chat message is visible");
	DVAR_PATCH_DESCRIPTION("cg_connectionIconSize", 0x004a5b0d, "Size of the connection icon");
	DVAR_PATCH_DESCRIPTION("cg_corpseHighlightFadeTime", 0x004a6056, "Time (in seconds) that corpse highlights fade out");
	DVAR_PATCH_DESCRIPTION("cg_crosshairAlpha", 0x004a47d3, "The alpha value of the crosshair");
	DVAR_PATCH_DESCRIPTION("cg_crosshairAlphaMin", 0x004a4801, "The minimum alpha value of the crosshair when it fades in");
	DVAR_PATCH_DESCRIPTION("cg_cursorHints", 0x004a38b6, R"(Draw cursor hints where:
 0: no hints
	1:	sin size pulse
	2:	one way size pulse
	3:	alpha pulse
	4:	static image)");
	DVAR_PATCH_DESCRIPTION("cg_debugInfoCornerOffset", 0x004a3cd5, "Offset from top-right corner, for cg_drawFPS, etc");
	DVAR_PATCH_DESCRIPTION("cg_debugMounting", 0x00660aa9, "Render debug lines that show where mountable weapons are trying to be placed");
	DVAR_PATCH_DESCRIPTION("cg_drawCrosshairNamesPosX", 0x004a3f44, "Virtual screen space position of the crosshair name");
	DVAR_PATCH_DESCRIPTION("cg_drawCrosshairNamesPosY", 0x004a3f69, "Virtual screen space position of the crosshair name");
	DVAR_PATCH_DESCRIPTION("cg_drawFPS", 0x004a3c38, "Draw frames per second");
	DVAR_PATCH_DESCRIPTION("cg_drawFPSScale", 0x004a3c5e, "Draw FPS size scale");
	DVAR_PATCH_DESCRIPTION("cg_drawMaterial", 0x004a3e2d, "Draw debugging information for materials");
	DVAR_PATCH_DESCRIPTION("cg_drawModelAxis", 0x004a3e4d, "Draw debugging axis for a bone of the model under the crosshair");
	DVAR_PATCH_DESCRIPTION("cg_drawTalk", 0x0052f01b, "Controls which icons CG_TALKER ownerdraw draws");
	DVAR_PATCH_DESCRIPTION("cg_drawVersionX", 0x004a3d5f, "X offset for the version string");
	DVAR_PATCH_DESCRIPTION("cg_drawVersionY", 0x004a3d94, "Y offset for the version string");
	DVAR_PATCH_DESCRIPTION("cg_dumpAnims", 0x004a57c4, "Output animation info for the given entity id");
	DVAR_PATCH_DESCRIPTION("cg_enemyNameFadeIn", 0x004a5dd7, "Time in milliseconds to fade in enemy names");
	DVAR_PATCH_DESCRIPTION("cg_enemyNameFadeOut", 0x004a5e1b, "Time in milliseconds to fade out enemy names");
	DVAR_PATCH_DESCRIPTION("cg_errordecay", 0x004a4e06, "Decay for predicted error");
	DVAR_PATCH_DESCRIPTION("cg_fakefireWizbyChance", 0x004a568f, "The probability that a fake fire shot plays a wizby to local players round");
	DVAR_PATCH_DESCRIPTION("cg_firstPersonTracerChance", 0x004a5011, "The probability that a bullet is a tracer round for your bullets");
	DVAR_PATCH_DESCRIPTION("cg_flareVisionSetFadeDuration", 0x004a61e6, "Duration of fade back to normal vision set when you look away from the flare");
	DVAR_PATCH_DESCRIPTION("cg_footprintsDebug", 0x004a4f72, "Debug footprint drawing code (0 means no debugging)");
	DVAR_PATCH_DESCRIPTION("cg_footprintsDistortWater", 0x004a4f50, "Distort water on footprint (0 means no distortion)");
	DVAR_PATCH_DESCRIPTION("cg_fov", 0x004a391b, "The field of view angle in degrees");
	DVAR_PATCH_DESCRIPTION("cg_fovCompMax", 0x004a3a9a, "The maximum field of view to compensate for gun placement");
	DVAR_PATCH_DESCRIPTION("cg_fovExtraCam", 0x004a3a62, "The field of view angle in degrees for the extra cam");
	DVAR_PATCH_DESCRIPTION("cg_fovMin", 0x004a3a2a, "The minimum possible field of view");
	DVAR_PATCH_DESCRIPTION("cg_fovScale", 0x004a39bb, "Scale applied to the field of view");
	DVAR_PATCH_DESCRIPTION("cg_fov_default", 0x004a3953, "User default field of view angle in degrees");
	DVAR_PATCH_DESCRIPTION("cg_fov_default_thirdperson", 0x004a3986, "User default 3rd person field of view angle in degrees");
	DVAR_PATCH_DESCRIPTION("cg_friendlyNameFadeIn", 0x004a5dfc, "Time in milliseconds to fade in friendly names");
	DVAR_PATCH_DESCRIPTION("cg_friendlyNameFadeOut", 0x004a5e3d, "Time in milliseconds to fade out friendly names");
	DVAR_PATCH_DESCRIPTION("cg_fuelHudVersion", 0x004df7ea, "Determines what version of the hud to show");
	DVAR_PATCH_DESCRIPTION("cg_gameBoldMessageWidth", 0x004a5992, "The maximum character width of the bold game messages");
	DVAR_PATCH_DESCRIPTION("cg_gameMessageWidth", 0x004a596d, "The maximum character width of the game messages");
	DVAR_PATCH_DESCRIPTION("cg_gun_fovcomp_x", 0x004a48a5, "x position FOV offset compensation of the viewmodel");
	DVAR_PATCH_DESCRIPTION("cg_gun_fovcomp_y", 0x004a48de, "y position FOV offset compensation of the viewmodel");
	DVAR_PATCH_DESCRIPTION("cg_gun_fovcomp_z", 0x004a4913, "z position FOV offset compensation of the viewmodel");
	DVAR_PATCH_DESCRIPTION("cg_gun_move_f", 0x004a49f0, "Weapon movement forward due to player movement");
	DVAR_PATCH_DESCRIPTION("cg_gun_move_minspeed", 0x004a4c20, "The minimum weapon movement rate");
	DVAR_PATCH_DESCRIPTION("cg_gun_move_r", 0x004a4a28, "Weapon movement right due to player movement");
	DVAR_PATCH_DESCRIPTION("cg_gun_move_rate", 0x004a4be8, "The base weapon movement rate");
	DVAR_PATCH_DESCRIPTION("cg_gun_move_u", 0x004a4a60, "Weapon movement up due to player movement");
	DVAR_PATCH_DESCRIPTION("cg_gun_ofs_f", 0x004a4a98, "Forward weapon offset when prone/ducked");
	DVAR_PATCH_DESCRIPTION("cg_gun_ofs_r", 0x004a4aca, "Right weapon offset when prone/ducked");
	DVAR_PATCH_DESCRIPTION("cg_gun_ofs_u", 0x004a4b08, "Up weapon offset when prone/ducked");
	DVAR_PATCH_DESCRIPTION("cg_gun_x", 0x004a4948, "x position of the viewmodel");
	DVAR_PATCH_DESCRIPTION("cg_gun_y", 0x004a4980, "y position of the viewmodel");
	DVAR_PATCH_DESCRIPTION("cg_gun_z", 0x004a49b8, "z position of the viewmodel");
	DVAR_PATCH_DESCRIPTION("cg_headIconMinScreenRadius", 0x004a5b82, "The minumum radius of a head icon on the screen");
	DVAR_PATCH_DESCRIPTION("cg_hintFadeTime", 0x004a38f3, "Time in milliseconds for the cursor hint to fade");
	DVAR_PATCH_DESCRIPTION("cg_hudChatPosition", 0x004a43de, "Position of the HUD chat box");
	DVAR_PATCH_DESCRIPTION("cg_hudDamageIconHeight", 0x004a407a, "The height of the damage icon");
	DVAR_PATCH_DESCRIPTION("cg_hudDamageIconOffset", 0x004a40af, "The offset from the center of the damage icon");
	DVAR_PATCH_DESCRIPTION("cg_hudDamageIconTime", 0x004a40db, "The amount of time for the damage icon to stay on screen after damage is taken");
	DVAR_PATCH_DESCRIPTION("cg_hudDamageIconWidth", 0x004a4045, "The width of the damage icon");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIconHeight", 0x004a4210, "The height of the grenade indicator icon");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIconMaxHeight", 0x004a418e, "The minimum height difference between a player and a grenade for the grenade to be shown on the grenade indicator");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIconMaxRangeFlash", 0x004a4156, "The minimum distance that a flashbang has to be from a player in order to be shown on the grenade indicator");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIconMaxRangeFrag", 0x004a411e, "The minimum distance that a grenade has to be from a player in order to be shown on the grenade indicator");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIconOffset", 0x004a41db, "The offset from the center of the screen for a grenade icon");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIconWidth", 0x004a4245, "The width of the grenade indicator icon");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIndicatorStartColor", 0x004a62f7, "");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadeIndicatorTargetColor", 0x004a62c0, "");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadePointerHeight", 0x004a4292, "The height of the grenade indicator pointer");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadePointerPivot", 0x004a42fc, "The pivot point of th grenade indicator pointer");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadePointerPulseFreq", 0x004a433b, "The number of times per second that the grenade indicator flashes in Hertz");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadePointerPulseMax", 0x004a4374, "The maximum alpha of the grenade indicator pulse. Values higher than 1 will cause the indicator to remain at full brightness for longer");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadePointerPulseMin", 0x004a43a5, "The minimum alpha of the grenade indicator pulse. Values lower than 0 will cause the indicator to remain at full transparency for longer");
	DVAR_PATCH_DESCRIPTION("cg_hudGrenadePointerWidth", 0x004a42c1, "The width of the grenade indicator pointer");
	DVAR_PATCH_DESCRIPTION("cg_hudMapBorderWidth", 0x0056bf6b, "The size of the full map's border, filled by the CG_PLAYER_FULLMAP_BORDER ownerdraw");
	DVAR_PATCH_DESCRIPTION("cg_hudMapFriendlyHeight", 0x0056becc, "The size of the friendly icon on the full map");
	DVAR_PATCH_DESCRIPTION("cg_hudMapFriendlyWidth", 0x0056be97, "The size of the friendly icon on the full map");
	DVAR_PATCH_DESCRIPTION("cg_hudMapPlayerHeight", 0x0056bf36, "The size of the player's icon on the full map");
	DVAR_PATCH_DESCRIPTION("cg_hudMapPlayerWidth", 0x0056bf01, "The size of the player's icon on the full map");
	DVAR_PATCH_DESCRIPTION("cg_hudMapRadarLineThickness", 0x0056be5b, "Thickness, relative to the map width, of the radar texture that sweeps across the full screen map");
	DVAR_PATCH_DESCRIPTION("cg_hudProneY", 0x004a4627, "Virtual screen y coordinate of the prone blocked message");
	DVAR_PATCH_DESCRIPTION("cg_hudSayPosition", 0x004a441c, "Position of the HUD say box");
	DVAR_PATCH_DESCRIPTION("cg_hudStanceFlash", 0x004a3ffc, "The background color of the flash when the stance changes");
	DVAR_PATCH_DESCRIPTION("cg_infraredBlurTime", 0x004a6b17, "Time [in millisecs] that the infrared blur lasts.");
	DVAR_PATCH_DESCRIPTION("cg_infraredHighlightOffset", 0x004a60bf, "Offset to the player highlight when using infrared scope");
	DVAR_PATCH_DESCRIPTION("cg_infraredHighlightScale", 0x004a608e, "Scale of the player highlight when using infrared scope");
	DVAR_PATCH_DESCRIPTION("cg_invalidCmdHintBlinkInterval", 0x004a6162, "Blink rate of an invalid command hint");
	DVAR_PATCH_DESCRIPTION("cg_invalidCmdHintDuration", 0x004a6140, "Duration of an invalid command hint");
	DVAR_PATCH_DESCRIPTION("cg_laserEndOffset", 0x004a5214, "How far from the point of collision the end of the beam is.");
	DVAR_PATCH_DESCRIPTION("cg_laserFlarePct", 0x004a5250, "Percentage laser widens over distance from viewer.");
	DVAR_PATCH_DESCRIPTION("cg_laserLightBeginOffset", 0x004a519c, "How far from the true beginning of the beam the light at the beginning is.");
	DVAR_PATCH_DESCRIPTION("cg_laserLightBodyTweak", 0x004a5124, "Amount to add to length of beam for light when laser hits a body (for hitboxes).");
	DVAR_PATCH_DESCRIPTION("cg_laserLightEndOffset", 0x004a51d8, "How far from the true end of the beam the light at the end is.");
	DVAR_PATCH_DESCRIPTION("cg_laserLightRadius", 0x004a5160, "The radius of the light at the far end of a laser beam");
	DVAR_PATCH_DESCRIPTION("cg_laserRadius", 0x004a50d0, "The size (radius) of a laser beam");
	DVAR_PATCH_DESCRIPTION("cg_laserRange", 0x004a5060, "The maximum range of a laser beam");
	DVAR_PATCH_DESCRIPTION("cg_laserRangePlayer", 0x004a5098, "The maximum range of the player's laser beam");
	DVAR_PATCH_DESCRIPTION("cg_mapLocationSelectionCursorSpeed", 0x004a465c, "Speed of the cursor when selecting a location on the map");
	DVAR_PATCH_DESCRIPTION("cg_mapLocationSelectionRotationSpeed", 0x004a468c, "Rotation speed of the cursor when selecting a location on the map");
	DVAR_PATCH_DESCRIPTION("cg_motionblur_duration", 0x004a6b82, "Sets radial motion blur duration");
	DVAR_PATCH_DESCRIPTION("cg_motionblur_fadeout", 0x004a6ba2, "Sets fade time for radial motion blur");
	DVAR_PATCH_DESCRIPTION("cg_overheadIconSize", 0x004a5cc0, "The maximum size to show overhead icons like 'rank'");
	DVAR_PATCH_DESCRIPTION("cg_overheadNamesFarDist", 0x004a5c21, "The far distance at which name sizes are scaled by cg_overheadNamesFarScale");
	DVAR_PATCH_DESCRIPTION("cg_overheadNamesFarScale", 0x004a5c56, "The amount to scale overhead name sizes at cg_overheadNamesFarDist");
	DVAR_PATCH_DESCRIPTION("cg_overheadNamesFont", 0x004a5d50, "Font for overhead names ( see menudefinition.h )");
	DVAR_PATCH_DESCRIPTION("cg_overheadNamesGlow", 0x004a5d26, "Glow color for overhead names");
	DVAR_PATCH_DESCRIPTION("cg_overheadNamesMaxDist", 0x004a5bb7, "The maximum distance for showing friendly player names");
	DVAR_PATCH_DESCRIPTION("cg_overheadNamesNearDist", 0x004a5bec, "The near distance at which names are full size");
	DVAR_PATCH_DESCRIPTION("cg_overheadNamesSize", 0x004a5c8b, "The maximum size to show overhead names");
	DVAR_PATCH_DESCRIPTION("cg_overheadRankSize", 0x004a5cf5, "The size to show rank text");
	DVAR_PATCH_DESCRIPTION("cg_playerFrustumHalfHeight", 0x004a6ee8, "The radius used to calculate frustum target center for a player. Used for fast \"is on screen\" tests");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardBannerHeight", 0x005c75f8, "Banner height of the scoreboard");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardFont", 0x005c77da, "Scoreboard font enum ( see menudefinition.h )");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardHeaderFontScale", 0x005c77ff, "Scoreboard header font scale");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardHeight", 0x005c770b, "Height of the scoreboard");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardItemHeight", 0x005c7617, "Item height of each item");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardMyColor", 0x005c7741, "The local player's font color when shown in scoreboard");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardPingHeight", 0x005c766c, "Height of the ping graph as a % of the scoreboard row height");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardPingWidth", 0x005c763b, "Width of the ping graph as a % of the scoreboard");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardRankFontScale", 0x005c7779, "Scale of rank font");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardScrollStep", 0x005c75dc, "Scroll step amount for the scoreboard");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardSplitscreenWidth", 0x005c76d6, "Width of the scoreboard in splitscreen");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardTextOffset", 0x005c77ae, "Scoreboard text offset");
	DVAR_PATCH_DESCRIPTION("cg_scoreboardWidth", 0x005c76a1, "Width of the scoreboard");
	DVAR_PATCH_DESCRIPTION("cg_scriptIconSize", 0x004a5ade, "Size of Icons defined by script");
	DVAR_PATCH_DESCRIPTION("cg_showmiss", 0x004a4efe, "Show prediction errors");
	DVAR_PATCH_DESCRIPTION("cg_sprintMeterDisabledColor", 0x0052efd7, "The color of the sprint meter when the sprint meter is disabled");
	DVAR_PATCH_DESCRIPTION("cg_sprintMeterEmptyColor", 0x0052ef88, "The color of the sprint meter when the sprint meter is empty");
	DVAR_PATCH_DESCRIPTION("cg_sprintMeterFullColor", 0x0052ef4b, "The color of the sprint meter when the sprint meter is full");
	DVAR_PATCH_DESCRIPTION("cg_subtitleMinTime", 0x004a58f4, "The minimum time that the subtitles are displayed on screen in seconds");
	DVAR_PATCH_DESCRIPTION("cg_subtitleWidthStandard", 0x004a5920, "The width of the subtitles in non wide-screen");
	DVAR_PATCH_DESCRIPTION("cg_subtitleWidthWidescreen", 0x004a5945, "The width of the subtitles in wide-screen ");
	DVAR_PATCH_DESCRIPTION("cg_thirdPerson", 0x004a55bf, "Use third person view");
	DVAR_PATCH_DESCRIPTION("cg_thirdPersonAngle", 0x004a5558, "The angle of the camera from the player in third person view");
	DVAR_PATCH_DESCRIPTION("cg_thirdPersonFocusDist", 0x004a5590, "The distance infront of the player to aim the 3rd person camera at");
	DVAR_PATCH_DESCRIPTION("cg_thirdPersonMode", 0x004a55de, "How the camera behaves in third person");
	DVAR_PATCH_DESCRIPTION("cg_thirdPersonRange", 0x004a5520, "The range of the camera from the player in third person view");
	DVAR_PATCH_DESCRIPTION("cg_timedDamageDuration", 0x004a6bca, "Sets the time to display a damage friendly indicator");
	DVAR_PATCH_DESCRIPTION("cg_tracerNoDrawTime", 0x004a5373, "Delay in milliseconds before a tracer will start rendering");
	DVAR_PATCH_DESCRIPTION("cg_tracerScale", 0x004a539e, "Scale the tracer at a distance, so it's still visible");
	DVAR_PATCH_DESCRIPTION("cg_tracerScaleDistRange", 0x004a5408, "The range at which a tracer is scaled to its maximum amount");
	DVAR_PATCH_DESCRIPTION("cg_tracerScaleMinDist", 0x004a53d0, "The minimum distance to scale a tracer");
	DVAR_PATCH_DESCRIPTION("cg_tracerScrewDist", 0x004a543f, "The length a tracer goes as it completes a full corkscrew revolution");
	DVAR_PATCH_DESCRIPTION("cg_tracerScrewRadius", 0x004a5478, "The radius of a tracer's corkscrew motion");
	DVAR_PATCH_DESCRIPTION("cg_tracerSpeed", 0x004a530c, "The speed of a tracer round in units per second");
	DVAR_PATCH_DESCRIPTION("cg_tracerchance", 0x004a529c, "The probability that a bullet is a tracer round");
	DVAR_PATCH_DESCRIPTION("cg_tracerlength", 0x004a5344, "The length of a tracer round");
	DVAR_PATCH_DESCRIPTION("cg_tracerwidth", 0x004a52d4, "The width of the tracer round");
	DVAR_PATCH_DESCRIPTION("cg_ufo_scaler", 0x0065ec77, "The speed at which ufo camera moves");
	DVAR_PATCH_DESCRIPTION("cg_viewVehicleInfluenceGunner", 0x004a3acb, "The influence on the view from being a vehicle gunner");
	DVAR_PATCH_DESCRIPTION("cg_viewVehicleInfluenceGunnerFiring", 0x004a3b01, "The influence on the view from being a vehicle gunner while firing");
	DVAR_PATCH_DESCRIPTION("cg_viewZSmoothingMax", 0x004a6242, "Threshhold for the maximum smoothing distance we'll do");
	DVAR_PATCH_DESCRIPTION("cg_viewZSmoothingMin", 0x004a6211, "Threshhold for the minimum smoothing distance it must move to smooth");
	DVAR_PATCH_DESCRIPTION("cg_viewZSmoothingTime", 0x004a6277, "Amount of time to spread the smoothing over");
	DVAR_PATCH_DESCRIPTION("cg_visionSetLerpMaxDecreasePerFrame", 0x004a61ba, "Maximum jump of customlerp between 2 frames, used for smoothing for flare visionset");
	DVAR_PATCH_DESCRIPTION("cg_visionSetLerpMaxIncreasePerFrame", 0x004a6189, "Maximum jump of customlerp between 2 frames, used for smoothing for flare visionset");
	DVAR_PATCH_DESCRIPTION("cg_voiceIconSize", 0x004a5b41, "Size of the 'voice' icon");
	DVAR_PATCH_DESCRIPTION("cg_waterTrailRippleFrequency", 0x004a4fac, "How often (in ms) will play the waist ripple fx for actors in water");
	DVAR_PATCH_DESCRIPTION("cg_waterTrailRippleVariance", 0x004a4fd1, "How late (in ms) the waist ripple fx can be played");
	DVAR_PATCH_DESCRIPTION("cg_weaponCycleDelay", 0x004a47af, "The delay after cycling to a new weapon to prevent holding down the cycle weapon button from cycling too fast");
	DVAR_PATCH_DESCRIPTION("cg_youInKillCamSize", 0x004a5aa9, "Size of the 'you' Icon in the kill cam");
	DVAR_PATCH_DESCRIPTION("cl_analog_attack_threshold", 0x004bbc7d, "The threshold before firing");
	DVAR_PATCH_DESCRIPTION("cl_anglespeedkey", 0x00590fe1, "Multiplier for max angle speed for game pad and keyboard");
	DVAR_PATCH_DESCRIPTION("cl_avidemo", 0x00590f2f, "AVI demo frames per second");
	DVAR_PATCH_DESCRIPTION("cl_connectTimeout", 0x00590e4a, "Timeout time in seconds while connecting to a server");
	DVAR_PATCH_DESCRIPTION("cl_connectionAttempts", 0x00590e76, "Maximum number of connection attempts before aborting");
	DVAR_PATCH_DESCRIPTION("cl_dblTapMaxDelayTime", 0x004bbd6f, "The maximum amount of time (ms) between button presses to be considered a double tap");
	DVAR_PATCH_DESCRIPTION("cl_dblTapMaxHoldTime", 0x004bbd4a, "The maximum amount of time (ms) the player can hold the button to be considered a double tap");
	DVAR_PATCH_DESCRIPTION("cl_demoFFSpeed", 0x00591270, "Timedemo playback speed");
	DVAR_PATCH_DESCRIPTION("cl_demoLiveStreaming", 0x005912ae, "Saves current server time to a file for live streaming");
	DVAR_PATCH_DESCRIPTION("cl_demoSkipToTime", 0x0059128f, "Demo skip to servertime");
	DVAR_PATCH_DESCRIPTION("cl_dtpHoldTime", 0x004bbcca, "The time to hold the stance button while sprinting before the player dives to prone");
	DVAR_PATCH_DESCRIPTION("cl_inputTimeScaleFrac", 0x004bbd0c, "Set how much of the time scale to use in the view angles turn rate");
	DVAR_PATCH_DESCRIPTION("cl_maxPing", 0x0059140f, "Maximum ping for the client");
	DVAR_PATCH_DESCRIPTION("cl_maxpackets", 0x0059100d, "Maximum number of packets sent per frame");
	DVAR_PATCH_DESCRIPTION("cl_motdString", 0x005913dc, "Message of the day");
	DVAR_PATCH_DESCRIPTION("cl_mouseAccel", 0x00591087, "Mouse acceleration");
	DVAR_PATCH_DESCRIPTION("cl_packetdup", 0x00591029, "Enable packet duplication");
	DVAR_PATCH_DESCRIPTION("cl_paused", 0x004a56d9, "Pause the game");
	DVAR_PATCH_DESCRIPTION("cl_paused", 0x0082bffe, "Pause the game");
	DVAR_PATCH_DESCRIPTION("cl_pitchspeed", 0x00590fa8, "Max pitch speed in degrees for game pad");
	DVAR_PATCH_DESCRIPTION("cl_serverStatusResendTime", 0x00591128, "Time in milliseconds to resend a server status message");
	DVAR_PATCH_DESCRIPTION("cl_shownet", 0x00590e95, "Display network debugging information");
	DVAR_PATCH_DESCRIPTION("cl_stanceHoldTime", 0x004bbca8, "The time to hold the stance button before the player goes prone");
	DVAR_PATCH_DESCRIPTION("cl_timeout", 0x00590e15, "Seconds with no received packets until a timeout occurs");
	DVAR_PATCH_DESCRIPTION("cl_yawspeed", 0x00590f6f, "Max yaw speed in degrees for game pad and keyboard");
	DVAR_PATCH_DESCRIPTION("clanMessageLastFetchTime", 0x004e1644, "Time in milliseconds of the last clan message file fetch operation");
	DVAR_PATCH_DESCRIPTION("clanName", 0x0046d02b, "Your clan abbreviation");
	DVAR_PATCH_DESCRIPTION("clancard_clanid", 0x0046cff8, "Clan id for the clancard to be displayed.");
	DVAR_PATCH_DESCRIPTION("codMessageLastFetchTime", 0x004e1685, "Time in milliseconds of the last cod message file fetch operation");
	DVAR_PATCH_DESCRIPTION("com_desiredMenu", 0x0082c121, "Target menu to navigate to when possible");
	DVAR_PATCH_DESCRIPTION("com_errorMessage", 0x004a7810, "Most recent error message");
	DVAR_PATCH_DESCRIPTION("com_errorTitle", 0x004a7826, "Title of the most recent error message");
	DVAR_PATCH_DESCRIPTION("com_first_time", 0x0082bbe8, "non zero if the profile has never run the game before (only accurate after the iis)");
	DVAR_PATCH_DESCRIPTION("com_first_time_pc", 0x0082bc07, "non zero if the profile has never run the game before (only accurate after the iis)");
	DVAR_PATCH_DESCRIPTION("com_freemoveScale", 0x0082bb80, "Scale how fast you move in com_freemove mode");
	DVAR_PATCH_DESCRIPTION("com_maxFrameTime", 0x0082bf75, "Time slows down if a frame takes longer than this many milliseconds");
	DVAR_PATCH_DESCRIPTION("com_maxclients", 0x0082bb60, "Maximum amount of clients on the server");
	DVAR_PATCH_DESCRIPTION("com_maxfps", 0x0082bc45, "Cap frames per second");
	DVAR_PATCH_DESCRIPTION("com_timescale", 0x0082beec, "Scale time of each frame");
	DVAR_PATCH_DESCRIPTION("com_voip_disable_threshold", 0x0082c0b4, "Message size at which voip becomes disabled");
	DVAR_PATCH_DESCRIPTION("com_voip_resume_time", 0x0082c07d, "Time at which voip can resume");
	DVAR_PATCH_DESCRIPTION("compassCoords", 0x0056b2f9, R"(x = North-South coord base value, 
y = East-West coord base value, 
z = scale (game units per coord unit))");
	DVAR_PATCH_DESCRIPTION("compassECoordCutoff", 0x0056b342, "Left cutoff for the scrolling east-west coords");
	DVAR_PATCH_DESCRIPTION("compassEnemyFootstepMaxRange", 0x0056baae, "The maximum distance at which an enemy may appear on the compass due to 'footsteps'");
	DVAR_PATCH_DESCRIPTION("compassEnemyFootstepMaxZ", 0x0056bae6, "The maximum vertical distance enemy may be from the player and appear on the compass due to 'footsteps'");
	DVAR_PATCH_DESCRIPTION("compassEnemyFootstepMinSpeed", 0x0056bb1e, "The minimum speed an enemy must be moving to appear on the compass due to 'footsteps'");
	DVAR_PATCH_DESCRIPTION("compassFriendlyHeight", 0x0056b25a, "The size of the friendly icon on the compass");
	DVAR_PATCH_DESCRIPTION("compassFriendlyWidth", 0x0056b225, "The size of the friendly icon on the compass");
	DVAR_PATCH_DESCRIPTION("compassGridAlign", 0x0056bcc5, "Position of letter and number in grid.");
	DVAR_PATCH_DESCRIPTION("compassGridCols", 0x0056bca9, "Grid column count.");
	DVAR_PATCH_DESCRIPTION("compassGridRows", 0x0056bc8a, "Grid row count.");
	DVAR_PATCH_DESCRIPTION("compassLocalRadarRadius", 0x0056b5a8, "Maximum radius of the local radar");
	DVAR_PATCH_DESCRIPTION("compassLocalRadarUpdateTime", 0x0056b56c, "Time between local radar updates");
	DVAR_PATCH_DESCRIPTION("compassMaxRange", 0x0056b130, "The maximum range from the player in world space that objects will be shown on the compass");
	DVAR_PATCH_DESCRIPTION("compassMaxRange", 0x007e0c54, "The maximum range from the player in world space that objects will be shown on the compass");
	DVAR_PATCH_DESCRIPTION("compassMinRadius", 0x0056b19f, "The minimum radius from the center of the compass that objects will appear.");
	DVAR_PATCH_DESCRIPTION("compassMinRange", 0x0056b16c, "The minimum range from the player in world space that objects will appear on the compass");
	DVAR_PATCH_DESCRIPTION("compassObjectiveArrowHeight", 0x0056b683, "The size of the objective arrow on the compass");
	DVAR_PATCH_DESCRIPTION("compassObjectiveArrowOffset", 0x0056b6b8, "The offset of the objective arrow inward from the edge of the compass map");
	DVAR_PATCH_DESCRIPTION("compassObjectiveArrowRotateDist", 0x0056b6ed, "Distance from the corner of the compass map at which the objective arrow rotates to 45 degrees");
	DVAR_PATCH_DESCRIPTION("compassObjectiveArrowWidth", 0x0056b648, "The size of the objective arrow on the compass");
	DVAR_PATCH_DESCRIPTION("compassObjectiveDetailDist", 0x0056b9cb, "When an objective is closer than this distance (in meters), the icon will not be drawn on the tickertape.");
	DVAR_PATCH_DESCRIPTION("compassObjectiveHeight", 0x0056b619, "The size of the objective on the compass");
	DVAR_PATCH_DESCRIPTION("compassObjectiveIconHeight", 0x0056b8b4, "The size of the objective on the full map");
	DVAR_PATCH_DESCRIPTION("compassObjectiveIconHeightZombie", 0x0056b91e, "The size of the objective on the full map");
	DVAR_PATCH_DESCRIPTION("compassObjectiveIconWidth", 0x0056b87f, "The size of the objective on the full map");
	DVAR_PATCH_DESCRIPTION("compassObjectiveIconWidthZombie", 0x0056b8ee, "The size of the objective on the full map");
	DVAR_PATCH_DESCRIPTION("compassObjectiveMaxHeight", 0x0056ba39, "The maximum height that an objective is considered to be on this level");
	DVAR_PATCH_DESCRIPTION("compassObjectiveMaxRange", 0x0056b722, "The maximum range at which an objective is visible on the compass");
	DVAR_PATCH_DESCRIPTION("compassObjectiveMinAlpha", 0x0056b753, "The minimum alpha for an objective at the edge of the compass");
	DVAR_PATCH_DESCRIPTION("compassObjectiveMinDistRange", 0x0056b98f, "The distance that objective transition effects play over, centered on compassObjectiveNearbyDist.");
	DVAR_PATCH_DESCRIPTION("compassObjectiveMinHeight", 0x0056ba03, "The minimum height that an objective is considered to be on this level");
	DVAR_PATCH_DESCRIPTION("compassObjectiveNearbyDist", 0x0056b953, "When an objective is closer than this distance (in meters), an \"Objective Nearby\" type of indicator is shown.");
	DVAR_PATCH_DESCRIPTION("compassObjectiveNumRings", 0x0056b779, "The number of rings when a new objective appears");
	DVAR_PATCH_DESCRIPTION("compassObjectiveRingSize", 0x0056b7c0, "The maximum objective ring sige when a new objective appears on the compass");
	DVAR_PATCH_DESCRIPTION("compassObjectiveRingTime", 0x0056b795, "The amount of time between each ring when an objective appears");
	DVAR_PATCH_DESCRIPTION("compassObjectiveTextHeight", 0x0056b82e, "Objective text height");
	DVAR_PATCH_DESCRIPTION("compassObjectiveTextScale", 0x0056b7f5, "Scale to apply to hud objectives");
	DVAR_PATCH_DESCRIPTION("compassObjectiveWidth", 0x0056b5e4, "The size of the objective on the compass");
	DVAR_PATCH_DESCRIPTION("compassPartialType", 0x0056ba6e, "The style of compass to use 2d or 3d");
	DVAR_PATCH_DESCRIPTION("compassPlayerHeight", 0x0056b2c4, "The size of the player's icon on the compass");
	DVAR_PATCH_DESCRIPTION("compassPlayerWidth", 0x0056b28f, "The size of the player's icon on the compass");
	DVAR_PATCH_DESCRIPTION("compassRadarLineThickness", 0x0056b530, "Thickness, relative to the compass size, of the radar texture that sweeps across the map");
	DVAR_PATCH_DESCRIPTION("compassRadarPingFadeTime", 0x0056b3c4, "How long an enemy is visible on the compass after it is detected by radar");
	DVAR_PATCH_DESCRIPTION("compassRadarUpdateFastTime", 0x0056b43c, "Time between radar updates for fast update killstreak");
	DVAR_PATCH_DESCRIPTION("compassRadarUpdateTime", 0x0056b400, "Time between radar updates");
	DVAR_PATCH_DESCRIPTION("compassSatellitePingFadeTime", 0x0056b4aa, "How long an enemy is visible on the compass after it is detected by Satellite");
	DVAR_PATCH_DESCRIPTION("compassSatelliteScanTime", 0x0056b502, "Time taken for Satellite t scans");
	DVAR_PATCH_DESCRIPTION("compassSatelliteStaticImageFadeTime", 0x0056b478, "How long the static image is visible on the compass after it is detected by Satellite");
	DVAR_PATCH_DESCRIPTION("compassScaleDiff", 0x0056bd03, "Difference from original compass max range in world space.");
	DVAR_PATCH_DESCRIPTION("compassScaleDuration", 0x0056bce1, "The amount of time to take scaling the compass map.");
	DVAR_PATCH_DESCRIPTION("compassScaleTimer", 0x0056bd25, "Time scaling started.");
	DVAR_PATCH_DESCRIPTION("compassSize", 0x0056b0ff, "Scale the compass");
	DVAR_PATCH_DESCRIPTION("compassSoundPingFadeTime", 0x0056b1d2, "The time in seconds for the sound overlay on the compass to fade");
	DVAR_PATCH_DESCRIPTION("compassStaticImageUpdateTime", 0x0056b4dd, "Time between static image updates");
	DVAR_PATCH_DESCRIPTION("compassTickertapeStretch", 0x0056b38b, "How far the tickertape should stretch from its center.");
	DVAR_PATCH_DESCRIPTION("con_default_console_filter", 0x0047c313, "Default channel filter for the console destination.");
	DVAR_PATCH_DESCRIPTION("con_errormessagetime", 0x0062fd28, "Onscreen time for error messages in seconds");
	DVAR_PATCH_DESCRIPTION("con_inputBoxColor", 0x0062f948, "Color of the console input box");
	DVAR_PATCH_DESCRIPTION("con_inputHintBoxColor", 0x0062f986, "Color of the console input hint box");
	DVAR_PATCH_DESCRIPTION("con_miniconlines", 0x0062fd84, "Number of lines in the minicon message window");
	DVAR_PATCH_DESCRIPTION("con_minicontime", 0x0062fd58, "Onscreen time for minicon messages in seconds");
	DVAR_PATCH_DESCRIPTION("con_outputBarColor", 0x0062f9c9, "Color of the console output slider bar");
	DVAR_PATCH_DESCRIPTION("con_outputSliderColor", 0x0062fa0c, "Color of the console slider");
	DVAR_PATCH_DESCRIPTION("con_outputWindowColor", 0x0062fa55, "Color of the console output");
	DVAR_PATCH_DESCRIPTION("con_typewriterColorBase", 0x0062fe20, "Base color of typewritten objective text.");
	DVAR_PATCH_DESCRIPTION("con_typewriterColorGlowCheckpoint", 0x0062ff1f, "Color of typewritten objective text.");
	DVAR_PATCH_DESCRIPTION("con_typewriterColorGlowCompleted", 0x0062fe9b, "Color of typewritten objective text.");
	DVAR_PATCH_DESCRIPTION("con_typewriterColorGlowFailed", 0x0062fee0, "Color of typewritten objective text.");
	DVAR_PATCH_DESCRIPTION("con_typewriterColorGlowUpdated", 0x0062fe59, "Color of typewritten objective text.");
	DVAR_PATCH_DESCRIPTION("con_typewriterDecayDuration", 0x0062fdfa, "Time (in milliseconds) to spend disolving the line away.");
	DVAR_PATCH_DESCRIPTION("con_typewriterDecayStartTime", 0x0062fdd9, "Time (in milliseconds) to spend between the build and disolve phases.");
	DVAR_PATCH_DESCRIPTION("con_typewriterPrintSpeed", 0x0062fdbb, "Time (in milliseconds) to print each letter in the line.");
	DVAR_PATCH_DESCRIPTION("counterDownloadInterval", 0x006493e2, "Number of minutes before all the global counters are downloaded");
	DVAR_PATCH_DESCRIPTION("counterUploadInterval", 0x006493c8, "Number of minutes before all the global counters are uploaded");
	DVAR_PATCH_DESCRIPTION("debugRenderCollisionDistance", 0x00475c8e, "Distance to render debug brushes and patches");
	DVAR_PATCH_DESCRIPTION("debugRenderMask", 0x00475c66, "Mask for collision rendering");
	DVAR_PATCH_DESCRIPTION("debug_trace", 0x00475bd9, "Does a trace and draws the hit point");
	DVAR_PATCH_DESCRIPTION("defaultDamageDuration", 0x005c4c8f, "default duration in milliseconds that damage should continue to get delivered");
	DVAR_PATCH_DESCRIPTION("defaultDamageInterval", 0x005c4cc4, "default interval in milliseconds that damage should continue to get delivered");
	DVAR_PATCH_DESCRIPTION("defaultHitDamage", 0x005c4c5a, "default initial damage delivered by getting hit by a flame ball");
	DVAR_PATCH_DESCRIPTION("developer", 0x004a5848, "Turn on Development systems");
	DVAR_PATCH_DESCRIPTION("developer", 0x006ce14d, "Turn on Development systems");
	DVAR_PATCH_DESCRIPTION("developer", 0x0082be60, "Turn on Development systems");
	DVAR_PATCH_DESCRIPTION("disconnected_ctrls", 0x0082bbab, "String representing the disconnected controllers");
	DVAR_PATCH_DESCRIPTION("dive2swim", 0x006610a4, "Use to contorl the dive force applied to the player when pressing B in water.");
	DVAR_PATCH_DESCRIPTION("dive_recharge", 0x006610d7, "Use to space out the dive to swim button presses.");
	DVAR_PATCH_DESCRIPTION("dog_MeleeDamage", 0x00660c8d, "Controls the damage done when dogs attack.");
	DVAR_PATCH_DESCRIPTION("dog_turn180_angle", 0x00660cf3, "If the dog needs to turn at this angle or greater, he'll execute the 180-degree turn animation");
	DVAR_PATCH_DESCRIPTION("dog_turn90_angle", 0x00660cbb, "If the dog needs to turn at this angle or greater, he'll execute the 90-degree turn animation");
	DVAR_PATCH_DESCRIPTION("dog_turn_min_goal_dist", 0x00660d2b, "If the dog is at this distance or less to it's goal, it won't execute any turn animations");
	DVAR_PATCH_DESCRIPTION("dtp_exhaustion_window", 0x0056301d, "Determines how long the player has to sprint before the dtp move can trigger");
	DVAR_PATCH_DESCRIPTION("dtp_fall_damage_max_height", 0x00562fe5, "If the player dives to prone from more than this dvar value, he will receive kill damage");
	DVAR_PATCH_DESCRIPTION("dtp_fall_damage_min_height", 0x00562fad, "If the player dive to prone from less than this dvar value, he will not receive any kill damage");
	DVAR_PATCH_DESCRIPTION("dtp_max_apex_duration", 0x005630f6, "Determines the max time in milliseconds the dtp will spend at the apex of the jump");
	DVAR_PATCH_DESCRIPTION("dtp_max_slide_addition", 0x00562f07, "Additional slide time should the player land on a mantle-able surface");
	DVAR_PATCH_DESCRIPTION("dtp_max_slide_duration", 0x00562ecf, "Determines the max time the slide portion of the dtp move will take");
	DVAR_PATCH_DESCRIPTION("dtp_min_speed", 0x00563059, "Minimum player speed required to start a DTP or sustain a DTP");
	DVAR_PATCH_DESCRIPTION("dtp_new_trajectory_multiplier", 0x005630c7, "New dive to prone trajectory modifier");
	DVAR_PATCH_DESCRIPTION("dtp_post_move_pause", 0x00562f75, "Duration of the post move pause");
	DVAR_PATCH_DESCRIPTION("dtp_startup_delay", 0x00562f39, "Determines how long the player has to sprint before the dtp move can trigger");
	DVAR_PATCH_DESCRIPTION("dwFileFetchTryIntervalBase", 0x004e15e4, "Delay in seconds after file fetch fails to the next retry. Exponential growth each retry.");
	DVAR_PATCH_DESCRIPTION("dwFileFetchTryIntervalMax", 0x004e1603, "Max delay in seconds between file fetch tries.");
	DVAR_PATCH_DESCRIPTION("dwFileFetchTryMaxAttempts", 0x004e1625, "Max retry attempts before stopping altogether.");
	DVAR_PATCH_DESCRIPTION("dw_numaccounts", 0x0046cc67, "Number of online accounts registered for the license");
	DVAR_PATCH_DESCRIPTION("dw_popup", 0x0046ccb8, "Online services popup");
	DVAR_PATCH_DESCRIPTION("dynEntPieces_angularVelocity", 0x0042c091, "Initial breakable pieces angular velocity");
	DVAR_PATCH_DESCRIPTION("dynEntPieces_impactForce", 0x0042c0d1, "Force applied when breakable is destroyed");
	DVAR_PATCH_DESCRIPTION("dynEntPieces_velocity", 0x0042c056, "Initial breakable pieces velocity");
	DVAR_PATCH_DESCRIPTION("dynEnt_bulletForce", 0x004822f6, "Force applied from bullet hit");
	DVAR_PATCH_DESCRIPTION("dynEnt_damageRadiusScale", 0x005aa5f2, "Scale applied to radius for radius damage");
	DVAR_PATCH_DESCRIPTION("dynEnt_explodeForce", 0x00482329, "Force applied from explosion hit");
	DVAR_PATCH_DESCRIPTION("dynEnt_explodeMaxEnts", 0x00482400, "The maximum number of dynents that can be awakened by one explosion");
	DVAR_PATCH_DESCRIPTION("dynEnt_explodeMinForce", 0x004823d1, "Force below which dynents won't even bother waking up");
	DVAR_PATCH_DESCRIPTION("dynEnt_explodeSpinScale", 0x00482399, "Scale of the random offset from the center of mass for explosion forces.");
	DVAR_PATCH_DESCRIPTION("dynEnt_explodeUpbias", 0x00482361, "Upward bias applied to force directions from explosion hits");
	DVAR_PATCH_DESCRIPTION("dynEnt_spawnedLimit", 0x00482422, "The max number of extra dynents (not placed on Radiant, spawned from script, or destructibles)");
	DVAR_PATCH_DESCRIPTION("emblem_scroll_delay_first", 0x008366f7, "First repeat delay for emblem editor");
	DVAR_PATCH_DESCRIPTION("emblem_scroll_delay_rest", 0x00836719, "Repeat delay for emblem editor");
	DVAR_PATCH_DESCRIPTION("enable_moving_paths", 0x00475db3, "enable moving paths");
	DVAR_PATCH_DESCRIPTION("enable_new_prone_check", 0x00475dce, "enable new prone check");
	DVAR_PATCH_DESCRIPTION("eventMessageLastFetchTime", 0x004e1663, "Time in milliseconds of the last event message file fetch operation");
	DVAR_PATCH_DESCRIPTION("facepaintLodDist", 0x005e249c, "Distance to stop drawing the player facepaint.");
	DVAR_PATCH_DESCRIPTION("fire_audio_random_max_duration", 0x00519a00, "This is the max duration in msec in between player fire hurt sounds, a random msec from 0 to this is added to the repeat time");
	DVAR_PATCH_DESCRIPTION("fire_audio_repeat_duration", 0x005199e0, "The duration in msec in between player fire hurt sounds");
	DVAR_PATCH_DESCRIPTION("fire_burn_time", 0x00519a25, "the duration in ms that a burn cell will persist");
	DVAR_PATCH_DESCRIPTION("fire_world_damage", 0x00519a4d, "the amount of damage to apply from a damage volume caused by world fire");
	DVAR_PATCH_DESCRIPTION("fire_world_damage_duration", 0x00519aac, "the number of seconds over which world fire damage is applied");
	DVAR_PATCH_DESCRIPTION("fire_world_damage_rate", 0x00519a78, "the number of seconds interval over which wolrd fire damage is applied");
	DVAR_PATCH_DESCRIPTION("fixedtime", 0x0082bf53, "Use a fixed time rate for each frame");
	DVAR_PATCH_DESCRIPTION("flameVar_editingFlameTable", 0x005c4cf0, "This is the most recent flametable that has been put up for editing, mostly included to help artists");
	DVAR_PATCH_DESCRIPTION("flameVar_lastFlameTable", 0x005c4d0b, "This is the previous flametable that was put up for editing, mostly included to help artists");
	DVAR_PATCH_DESCRIPTION("flame_debug_render", 0x005c4c17, "Turn on/off Flamethrower debug rendering");
	DVAR_PATCH_DESCRIPTION("flame_kick_offset", 0x005c4d2f, "Origin offset for flamethrower view model while firing.");
	DVAR_PATCH_DESCRIPTION("flame_kick_recover_speed", 0x005c4db3, "Speed at which the flamethrower view model transitions back from flame_kick_offset.");
	DVAR_PATCH_DESCRIPTION("flame_kick_speed", 0x005c4d7b, "Speed at which the flamethrower view model transitions to flame_kick_offset.");
	DVAR_PATCH_DESCRIPTION("footstep_sounds_cutoff", 0x00660ff2, "Footstep sounds distance cuttoff");
	DVAR_PATCH_DESCRIPTION("freeBuffersDelay", 0x0055b98f, "Frames delay until vertex & index buffers are freed");
	DVAR_PATCH_DESCRIPTION("friction", 0x0065ec07, "Player friction");
	DVAR_PATCH_DESCRIPTION("fs_basegame", 0x0085f7d0, "Base game name");
	DVAR_PATCH_DESCRIPTION("fs_basepath", 0x0085f7b1, "Base game path");
	DVAR_PATCH_DESCRIPTION("fs_cdpath", 0x0085f792, "CD path");
	DVAR_PATCH_DESCRIPTION("fs_debug", 0x0085f760, "Output debugging information for the file system");
	DVAR_PATCH_DESCRIPTION("fs_game", 0x0085f7eb, "Game data directory. Must be "" or a sub directory of 'mods/'.");
	DVAR_PATCH_DESCRIPTION("fs_homepath", 0x0085f863, "Game home path");
	DVAR_PATCH_DESCRIPTION("fs_userDocuments", 0x0085f889, "user documents path(screenshots).");
	DVAR_PATCH_DESCRIPTION("fs_usermapdir", 0x0085f809, "Usermap data directory.");
	DVAR_PATCH_DESCRIPTION("fx_debugBolt", 0x0048687b, "Debug effects bolt");
	DVAR_PATCH_DESCRIPTION("fx_mark_profile", 0x00486916, "Turn on FX profiling for marks (specify which local client, with '1' being the first.)");
	DVAR_PATCH_DESCRIPTION("fx_marks_range", 0x004869cf, "marks will be made only within this range to camera");
	DVAR_PATCH_DESCRIPTION("fx_priority_debug", 0x00486953, "Turn on priority debug (specify which local client, with '1' being the first.)");
	DVAR_PATCH_DESCRIPTION("fx_profile", 0x004868f7, "Turn on FX profiling (specify which local client, with '1' being the first.)");
	DVAR_PATCH_DESCRIPTION("fx_visMinTraceDist", 0x004868c8, "Minimum visibility trace size");
	DVAR_PATCH_DESCRIPTION("fxfrustumCutoff", 0x0069861a, "Hit effects that are more than <this value> outside of the frustum will be culled.");
	DVAR_PATCH_DESCRIPTION("g_ScoresColor_Allies", 0x004a6877, "Allies team color on scoreboard");
	DVAR_PATCH_DESCRIPTION("g_ScoresColor_Axis", 0x004a68b9, "Axis team color on scoreboard");
	DVAR_PATCH_DESCRIPTION("g_ScoresColor_EnemyTeam", 0x004a67bd, "Enemy team color on scoreboard");
	DVAR_PATCH_DESCRIPTION("g_ScoresColor_Free", 0x004a6833, "Free Team color on scoreboard");
	DVAR_PATCH_DESCRIPTION("g_ScoresColor_MyTeam", 0x004a6781, "Player team color on scoreboard");
	DVAR_PATCH_DESCRIPTION("g_ScoresColor_Spectator", 0x004a67ff, "Spectator team color on scoreboard");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_Allies", 0x004a6937, "Allies team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_Axis", 0x004a6979, "Axis team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_EnemyTeam", 0x004a69f7, "Enemy team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_EnemyTeam", 0x005718dc, "Enemy team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_EnemyTeamAlt", 0x004a6a69, "Enemy team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_Free", 0x004a6ad7, "Free Team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_MyTeam", 0x004a69bb, "Player team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_MyTeam", 0x005718a0, "Player team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_MyTeamAlt", 0x004a6a33, "Player team color");
	DVAR_PATCH_DESCRIPTION("g_TeamColor_Spectator", 0x004a6aa1, "Spectator team color");
	DVAR_PATCH_DESCRIPTION("g_TeamName_Allies", 0x004a68f6, "Allied team name");
	DVAR_PATCH_DESCRIPTION("g_TeamName_Axis", 0x004a6914, "Axis team name");
	DVAR_PATCH_DESCRIPTION("g_aiEventDump", 0x007e288e, "Print AI events happening for this entity");
	DVAR_PATCH_DESCRIPTION("g_banIPs", 0x00571662, "IP addresses to ban from playing");
	DVAR_PATCH_DESCRIPTION("g_clonePlayerMaxVelocity", 0x005717d2, R"(Maximum velocity in each axis of a cloned player
(for death animations))");
	DVAR_PATCH_DESCRIPTION("g_connectpaths", 0x004b8a40, "Connect paths");
	DVAR_PATCH_DESCRIPTION("g_debugBullets", 0x007e1c3e, "Show debug information for bullets");
	DVAR_PATCH_DESCRIPTION("g_debugLocDamage", 0x007e1689, "Turn on debugging information for locational damage (2 = show results of bullet trace pose only)");
	DVAR_PATCH_DESCRIPTION("g_debugLocHit", 0x007e16cd, "Display locational damage info for an entity when the entity is hit");
	DVAR_PATCH_DESCRIPTION("g_debugLocHitTime", 0x007e16ec, "Time duration of g_debugLocHit lines");
	DVAR_PATCH_DESCRIPTION("g_dropForwardSpeed", 0x005716fe, "Forward speed of a dropped item");
	DVAR_PATCH_DESCRIPTION("g_dropHorzSpeedRand", 0x0057179d, "Random component of the initial horizontal speed of a dropped item");
	DVAR_PATCH_DESCRIPTION("g_dropUpSpeedBase", 0x00571733, "Base component of the initial vertical speed of a dropped item");
	DVAR_PATCH_DESCRIPTION("g_dropUpSpeedRand", 0x00571768, "Random component of the initial vertical speed of a dropped item");
	DVAR_PATCH_DESCRIPTION("g_dumpAnims", 0x007e27f2, "Animation debugging info for the given character number");
	DVAR_PATCH_DESCRIPTION("g_entinfo", 0x007e1d21, "Display entity information");
	DVAR_PATCH_DESCRIPTION("g_entinfo_AItext", 0x007e1d69, "Type of text information for AI entinfo");
	DVAR_PATCH_DESCRIPTION("g_entinfo_maxdist", 0x007e1d8d, "Maximum distance of an entity from the camera at which to show entity information");
	DVAR_PATCH_DESCRIPTION("g_entinfo_scale", 0x007e1dc5, "Scale of the entity information text");
	DVAR_PATCH_DESCRIPTION("g_entinfo_type", 0x007e1d41, "Type of entities to display information");
	DVAR_PATCH_DESCRIPTION("g_friendlyNameDist", 0x007e171a, "Maximum range for seeing a friendly's name");
	DVAR_PATCH_DESCRIPTION("g_friendlyfireDist", 0x007e174c, "Maximum range for disabling fire at a friendly");
	DVAR_PATCH_DESCRIPTION("g_gametype", 0x00549ac3, "The current campaign");
	DVAR_PATCH_DESCRIPTION("g_gametype", 0x005715e0, "The current campaign");
	DVAR_PATCH_DESCRIPTION("g_gametype", 0x00698391, "The current campaign");
	DVAR_PATCH_DESCRIPTION("g_inactivity", 0x00571699, "Time delay before player is kicked for inactivity");
	DVAR_PATCH_DESCRIPTION("g_knockback", 0x007e0e84, "Maximum knockback");
	DVAR_PATCH_DESCRIPTION("g_log", 0x00571611, "Log file name");
	DVAR_PATCH_DESCRIPTION("g_mantleBlockTimeBuffer", 0x005719e1, "Time that the client think is delayed after mantling");
	DVAR_PATCH_DESCRIPTION("g_maxDroppedWeapons", 0x0057167d, "Maximum number of dropped weapons");
	DVAR_PATCH_DESCRIPTION("g_minGrenadeDamageSpeed", 0x007e0e24, "Minimum speed at which getting hit be a grenade will do damage (not the grenade explosion damage)");
	DVAR_PATCH_DESCRIPTION("g_motd", 0x005716bb, "The message of the day");
	DVAR_PATCH_DESCRIPTION("g_password", 0x00571647, "Password");
	DVAR_PATCH_DESCRIPTION("g_playerCollisionEjectSpeed", 0x005716d6, "Speed at which to push intersecting players away from each other");
	DVAR_PATCH_DESCRIPTION("g_speed", 0x007e0e53, "Player speed");
	DVAR_PATCH_DESCRIPTION("g_useholdspawndelay", 0x005719a7, "Time in milliseconds that the player is unable to 'use' after spawning");
	DVAR_PATCH_DESCRIPTION("g_useholdtime", 0x007e17b1, "Time to hold the 'use' button to activate use");
	DVAR_PATCH_DESCRIPTION("g_vehicleDrawPath", 0x007e1c5d, "Turn on debug information for vehicle paths");
	DVAR_PATCH_DESCRIPTION("g_voiceChatTalkingDuration", 0x00571879, R"(Time after the last talk packet was received that the player is considered by the
server to still be talking in milliseconds)");
	DVAR_PATCH_DESCRIPTION("g_voteAbstainWeight", 0x00571960, "How much an abstained vote counts as a 'no' vote");
	DVAR_PATCH_DESCRIPTION("glassCrackedDamageRateRange", 0x0040e775, "Range of the rate a cracked glass looses health points");
	DVAR_PATCH_DESCRIPTION("glassDamageMultiplier", 0x0040e73e, "Multiplier the damage applied to the glass (server).");
	DVAR_PATCH_DESCRIPTION("glassExtraVelocity", 0x0055b962, "Additional random extra angular velocity to the shards when shattering, and extra linear velocity when cracked glass times out.");
	DVAR_PATCH_DESCRIPTION("glassForceAttenuation", 0x0055b936, "Attenuation of the force as the shard is farther from the hit position.");
	DVAR_PATCH_DESCRIPTION("glassForceMultiplier", 0x0055b8cc, "Multiplier of the force to apply to shards.");
	DVAR_PATCH_DESCRIPTION("glassForceOriginMult", 0x0055b903, "Multiplier of the distance of the origin of the shards spread point - the smaller it is, closer to the glass then the shards will spread to the sides. The farther it is the shards will fly in the same direction.");
	DVAR_PATCH_DESCRIPTION("glassLowLodDist", 0x0055b9b2, "Adjusted (by fov) distance to switch to low glass lod");
	DVAR_PATCH_DESCRIPTION("glassMaxShardLife", 0x0055b9e9, "Maximum life time of a shard that is contolled by the glass physics");
	DVAR_PATCH_DESCRIPTION("gpad_button_deadzone", 0x004aced8, "Game pad button deadzone threshhold");
	DVAR_PATCH_DESCRIPTION("gpad_button_lstick_deflect_max", 0x004ace82, "Game pad maximum pad stick pressed value");
	DVAR_PATCH_DESCRIPTION("gpad_button_rstick_deflect_max", 0x004acead, "Game pad maximum pad stick pressed value");
	DVAR_PATCH_DESCRIPTION("gpad_buttonsConfig", 0x004ad039, "Game pad button configuration");
	DVAR_PATCH_DESCRIPTION("gpad_debug", 0x004ace60, "coder use only");
	DVAR_PATCH_DESCRIPTION("gpad_menu_scroll_delay_first", 0x004acff2, "Menu scroll key-repeat delay, for the first repeat, in milliseconds");
	DVAR_PATCH_DESCRIPTION("gpad_menu_scroll_delay_rest", 0x004ad017, "Menu scroll key-repeat delay, for repeats after the first, in milliseconds");
	DVAR_PATCH_DESCRIPTION("gpad_stick_deadzone_max", 0x004acf40, "Game pad maximum stick deadzone");
	DVAR_PATCH_DESCRIPTION("gpad_stick_deadzone_min", 0x004acf0c, "Game pad minimum stick deadzone");
	DVAR_PATCH_DESCRIPTION("gpad_stick_pressed", 0x004acf74, "Game pad stick pressed threshhold");
	DVAR_PATCH_DESCRIPTION("gpad_stick_pressed_hysteresis", 0x004acfa8, "Game pad stick pressed no-change-zone around gpad_stick_pressed to prevent bouncing");
	DVAR_PATCH_DESCRIPTION("gpad_sticksConfig", 0x004ad057, "Game pad stick configuration");
	DVAR_PATCH_DESCRIPTION("grenadeBounceRestitutionMax", 0x0053cdb5, "Cap to keep code from increasing bounce restitution too high.");
	DVAR_PATCH_DESCRIPTION("grenadeBumpFreq", 0x0053cbf9, "How likely (per server frame) a bump will occur");
	DVAR_PATCH_DESCRIPTION("grenadeBumpMag", 0x0053cc31, "Size of bumps (as a fraction of the grenade's current speed)");
	DVAR_PATCH_DESCRIPTION("grenadeBumpMax", 0x0053cc69, "Maximum upward speed of a bump (inches/sec)");
	DVAR_PATCH_DESCRIPTION("grenadeCurveMax", 0x0053cd7d, "Largest rolling curvature (will be random between +/- this value)");
	DVAR_PATCH_DESCRIPTION("grenadeFrictionHigh", 0x0053cb89, "The amount of friction (0 to 1) for fast-moving grenades");
	DVAR_PATCH_DESCRIPTION("grenadeFrictionLow", 0x0053cb55, "The amount of friction (0 to 1) for slower/rolling grenades");
	DVAR_PATCH_DESCRIPTION("grenadeFrictionMaxThresh", 0x0053cbc1, "The speed threshold that determines whether to use grenadeFrictionLow/High");
	DVAR_PATCH_DESCRIPTION("grenadeRestThreshold", 0x0053cb06, "The speed threshold below which grenades will come to rest");
	DVAR_PATCH_DESCRIPTION("grenadeWobbleFreq", 0x0053cca1, "Wobble cycles per inch of rolling distance (approx)");
	DVAR_PATCH_DESCRIPTION("grenadeWobbleFwdMag", 0x0053ccd9, "The forward rolling speed will oscillate +/- this amount");
	DVAR_PATCH_DESCRIPTION("grenadeWobbleSideDamp", 0x0053cd44, "The rate at which the amount of side-to-side wobbling decreases as overall grenade speed increases");
	DVAR_PATCH_DESCRIPTION("grenadeWobbleSideMag", 0x0053cd11, "The distance to wobble left and right");
	DVAR_PATCH_DESCRIPTION("heatMapLoadDelay", 0x004e16c3, "Time in milliseconds to delay the loading of the heatmap.");
	DVAR_PATCH_DESCRIPTION("highlightedPlayerClanTag", 0x0083630a, "Currently highlighted player clan tag.");
	DVAR_PATCH_DESCRIPTION("highlightedPlayerName", 0x008362ef, "Currently highlighted player name.");
	DVAR_PATCH_DESCRIPTION("highlightedPlayerXuid", 0x008362d4, "Currently highlighted player xuid.");
	DVAR_PATCH_DESCRIPTION("hudElemPausedBrightness", 0x0054a270, "Brightness of the hudelems when the game is paused.");
	DVAR_PATCH_DESCRIPTION("hud_deathQuoteFadeTime", 0x0052ed4b, "The time for the death quote to fade");
	DVAR_PATCH_DESCRIPTION("hud_fade_ammodisplay", 0x0052eb42, "The time for the ammo display to fade in seconds");
	DVAR_PATCH_DESCRIPTION("hud_fade_compass", 0x0052ebac, "The time for the compass to fade in seconds");
	DVAR_PATCH_DESCRIPTION("hud_fade_healthbar", 0x0052eb77, "The time for the health bar to fade in seconds");
	DVAR_PATCH_DESCRIPTION("hud_fade_offhand", 0x0052ec16, "The time for the offhand weapons to fade in seconds");
	DVAR_PATCH_DESCRIPTION("hud_fade_sprint", 0x0052ec45, "The time for the sprint meter to fade in seconds");
	DVAR_PATCH_DESCRIPTION("hud_fade_stance", 0x0052ebe1, "The time for the stance to fade in seconds");
	DVAR_PATCH_DESCRIPTION("hud_fadeout_speed", 0x0052eb12, "The speed that the HUD will fade at");
	DVAR_PATCH_DESCRIPTION("hud_flash_period_offhand", 0x0063d6f6, "Offhand weapons flash period on changing weapon");
	DVAR_PATCH_DESCRIPTION("hud_flash_time_offhand", 0x0063d6c6, "Offhand weapons flash duration on changing weapon");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseEnd_fromAlpha", 0x0052eecb, "Starting alpha of the final health overlay phase");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseEnd_pulseDuration", 0x0052ef24, "Time in milliseconds to fade out the health overlay after it is done flashing");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseEnd_toAlpha", 0x0052eefe, "Alpha multiplier to fade to before turning off the overlay (percentage of the pulse peak)");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseOne_pulseDuration", 0x0052ee00, "Pulse duration of the first health overlay phase");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseOne_toAlphaAdd", 0x0052edd4, "Alpha value to add to the first health overlay phase");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseThree_pulseDuration", 0x0052eea6, "Time in milliseconds to fade the alpha to hud_healthOverlay_phaseThree_toAlphaMultiplier");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseThree_toAlphaMultiplier", 0x0052ee7a, "Alpha multiplier for the third health overlay phase (percentage of the pulse peak)");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseTwo_pulseDuration", 0x0052ee53, "Time in milliseconds to fade the alpha to hud_healthOverlay_phaseTwo_toAlphaMultiplier");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_phaseTwo_toAlphaMultiplier", 0x0052ee27, "Alpha multiplier for the second health overlay phase (percentage of the pulse peak)");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_pulseStart", 0x0052ed72, "The percentage of full health at which the low-health warning overlay begins flashing");
	DVAR_PATCH_DESCRIPTION("hud_healthOverlay_pulseStop", 0x0052eda3, "The percentage of full health above which the health overlay fades out");
	DVAR_PATCH_DESCRIPTION("hud_health_pulserate_critical", 0x0052ed1b, "The pulse rate of the 'critical' pulse effect");
	DVAR_PATCH_DESCRIPTION("hud_health_pulserate_injured", 0x0052ece6, "The pulse rate of the 'injured' pulse effect");
	DVAR_PATCH_DESCRIPTION("hud_health_startpulse_critical", 0x0052ecb1, "The health level at which to start the 'critical' pulse effect");
	DVAR_PATCH_DESCRIPTION("hud_health_startpulse_injured", 0x0052ec80, "The health level at which to start the 'injured' pulse effect");
	DVAR_PATCH_DESCRIPTION("ik_actor_tracking_scale", 0x00497fef, "Adjust the amount of rotation that is applied during head/eye tracking");
	DVAR_PATCH_DESCRIPTION("ik_ai_hand_offset_vec", 0x00497f55, "Offset vector for hand tuning");
	DVAR_PATCH_DESCRIPTION("ik_ai_hand_rotation_vec", 0x00497f96, "Rotation vector for hand tuning");
	DVAR_PATCH_DESCRIPTION("ik_ai_hand_tuning", 0x00497f2c, "Turn on/off AI hand IK tuning. 1 = Use anim flag. 2 = Force on for all anims.");
	DVAR_PATCH_DESCRIPTION("ik_debug", 0x00497e06, "Set to one of the IK debug values in ik_types.h");
	DVAR_PATCH_DESCRIPTION("ik_enable_ai_terrain", 0x00497f0c, "Turn on/off AI terrain IK (0 = OFF, 1 = All, 2 = Heros)");
	DVAR_PATCH_DESCRIPTION("ik_pitch_limit_max", 0x0049805b, "Pitch angle at which headtracking is entirely constrained");
	DVAR_PATCH_DESCRIPTION("ik_pitch_limit_thresh", 0x00498022, "Pitch angle at which headtracking starts to be constrained");
	DVAR_PATCH_DESCRIPTION("ik_roll_limit_max", 0x004980cd, "Roll angle at which headtracking is entirely constrained");
	DVAR_PATCH_DESCRIPTION("ik_roll_limit_thresh", 0x0049808e, "Roll angle at which headtracking starts to be constrained");
	DVAR_PATCH_DESCRIPTION("ik_yaw_limit_max", 0x0049813f, "Yaw angle at which headtracking is entirely constrained");
	DVAR_PATCH_DESCRIPTION("ik_yaw_limit_thresh", 0x00498106, "Yaw angle at which headtracking starts to be constrained");
	DVAR_PATCH_DESCRIPTION("input_viewSensitivity", 0x00591373, "View Sensitivity");
	DVAR_PATCH_DESCRIPTION("inviteText", 0x0046ce9b, "Text to display for the game invite");
	DVAR_PATCH_DESCRIPTION("invite_waitPeriod", 0x0046cf8f, "time in msec you have to wait between sending invites to the same friend");
	DVAR_PATCH_DESCRIPTION("jump_height", 0x00579f26, "The maximum height of a player's jump");
	DVAR_PATCH_DESCRIPTION("jump_ladderPushVel", 0x00579fac, "The velocity of a jump off of a ladder");
	DVAR_PATCH_DESCRIPTION("jump_spreadAdd", 0x00579fe4, "The amount of spread scale to add as a side effect of jumping");
	DVAR_PATCH_DESCRIPTION("jump_stepSize", 0x00579f59, "The maximum step up to the top of a jump arc");
	DVAR_PATCH_DESCRIPTION("lb_LastFetchTime", 0x004d9c74, "Time in milliseconds you wait before fetching the leaderboard");
	DVAR_PATCH_DESCRIPTION("lb_escrowRefresh", 0x004d9cb0, "How often to check escrow for unclaimed funds");
	DVAR_PATCH_DESCRIPTION("lb_escrowTimeout", 0x004d9c90, "Time to wait before funds in escrow are returned to clients");
	DVAR_PATCH_DESCRIPTION("lb_filter", 0x004d9bcf, "Filter applied to the leaderboard display: ('none','friends')");
	DVAR_PATCH_DESCRIPTION("lb_maxrows", 0x004d9bea, "Maximum number of rows to fetch");
	DVAR_PATCH_DESCRIPTION("lb_minrefresh", 0x004d9bad, "Minimum time (in seconds) between leaderboard fetches");
	DVAR_PATCH_DESCRIPTION("lb_type", 0x004d9c0f, "Leaderboard type to display");
	DVAR_PATCH_DESCRIPTION("lb_typeByResetPeriod", 0x004d9c2a, "Reset period for Leaderboards ( 'all_time', 'monthly', weekly )");
	DVAR_PATCH_DESCRIPTION("loc_language", 0x005d3051, "Language");
	DVAR_PATCH_DESCRIPTION("loc_language", 0x00691121, "Language");
	DVAR_PATCH_DESCRIPTION("logfile", 0x0082beaf, "Write to log file - 0 = disabled, 1 = async file write, 2 = Sync every write");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningColor1", 0x004df62a, "Color 1 of 2 to oscilate between");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningColor2", 0x004df65d, "Color 2 of 2 to oscilate between");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningNoAmmoColor1", 0x004df791, "Like lowAmmoWarningColor1, but when no ammo.");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningNoAmmoColor2", 0x004df7c0, "lowAmmoWarningColor2, but when no ammo.");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningNoReloadColor1", 0x004df729, "Like lowAmmoWarningColor1, but when no ammo to reload with.");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningNoReloadColor2", 0x004df75e, "lowAmmoWarningColor2, but when no ammo to reload with.");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningPulseFreq", 0x004df68e, "Frequency of the pulse (oscilation between the 2 colors)");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningPulseMax", 0x004df6c3, "Min of oscilation range: 0 is color1 and 1.0 is color2. Can be < 0, and the wave will clip at 0.");
	DVAR_PATCH_DESCRIPTION("lowAmmoWarningPulseMin", 0x004df6f4, "Max of oscilation range: 0 is color1 and 1.0 is color2. Can be > 1.0, and the wave will clip at 1.0.");
	DVAR_PATCH_DESCRIPTION("m_forward", 0x005911d1, "Forward speed in units per second");
	DVAR_PATCH_DESCRIPTION("m_pitch", 0x00591167, "Default pitch");
	DVAR_PATCH_DESCRIPTION("m_side", 0x00591206, "Sideways motion in units per second");
	DVAR_PATCH_DESCRIPTION("m_yaw", 0x0059119c, "Default yaw");
	DVAR_PATCH_DESCRIPTION("mantle_check_angle", 0x004b469a, "The minimum angle from the player to a mantle surface to allow a mantle");
	DVAR_PATCH_DESCRIPTION("mantle_check_glass_extra_range", 0x004b46d2, "The extra distance to test if glass is ");
	DVAR_PATCH_DESCRIPTION("mantle_check_radius", 0x004b4662, "The player radius to test against while mantling");
	DVAR_PATCH_DESCRIPTION("mantle_check_range", 0x004b462a, "The minimum distance from a player to a mantle surface to allow a mantle");
	DVAR_PATCH_DESCRIPTION("mantle_view_yawcap", 0x004b470a, "The angle at which to restrict a sideways turn while mantling");
	DVAR_PATCH_DESCRIPTION("mantle_weapon_anim_height", 0x004b477a, "If the player is mantling at this height or higher, the mantle animation will play.");
	DVAR_PATCH_DESCRIPTION("mantle_weapon_height", 0x004b473c, "If the player is mantling at this height or lower, his weapon will remain equipped.");
	DVAR_PATCH_DESCRIPTION("mapname", 0x0040c913, "The current map name");
	DVAR_PATCH_DESCRIPTION("mapname", 0x00698404, "The current map name");
	DVAR_PATCH_DESCRIPTION("maxShardSplit", 0x0055b753, "Max number of shards that a glass can be split into");
	DVAR_PATCH_DESCRIPTION("maxStatsBackupInterval", 0x004e15aa, "Maximum number of days before performing stats backup to Demonware User Storage");
	DVAR_PATCH_DESCRIPTION("metPlayerListUpdateInterval", 0x0052289c, "Time in milliseconds since uploaded recent met player list.");
	DVAR_PATCH_DESCRIPTION("metPlayerListUploadInterval", 0x005228b9, "This dvar is used to make sure that recent met player list get updates only when it changes.");
	DVAR_PATCH_DESCRIPTION("minDelayForOtherPlayerStatsFetch", 0x004e16e8, "Delay in milliseconds to refetch the stats of a player.");
	DVAR_PATCH_DESCRIPTION("missileHellfireMaxSlope", 0x0053c526, "This limits how steeply the hellfire missile can turn upward when climbing");
	DVAR_PATCH_DESCRIPTION("missileHellfireUpAccel", 0x0053c559, "The rate at which the hellfire missile curves upward");
	DVAR_PATCH_DESCRIPTION("missileJavAccelClimb", 0x0053c74f, "Rocket acceleration when climbing.");
	DVAR_PATCH_DESCRIPTION("missileJavAccelDescend", 0x0053c787, "Rocket acceleration when descending towards target.");
	DVAR_PATCH_DESCRIPTION("missileJavClimbAngleDirect", 0x0053c605, "In direct-fire mode, the minimum angle between the rocket and target until the rocket stops climbing. Smaller angles make for higher climbs.");
	DVAR_PATCH_DESCRIPTION("missileJavClimbAngleTop", 0x0053c63d, "In top-fire mode, the minimum angle between the rocket and target until the rocket stops climbing. Smaller angles make for higher climbs.");
	DVAR_PATCH_DESCRIPTION("missileJavClimbCeilingDirect", 0x0053c66f, "In direct-fire mode, how high the missile needs to reach before it descends.");
	DVAR_PATCH_DESCRIPTION("missileJavClimbCeilingTop", 0x0053c6a7, "In top-fire mode, how high the missile needs to reach before it descends.");
	DVAR_PATCH_DESCRIPTION("missileJavClimbHeightDirect", 0x0053c595, "In direct-fire mode, how far above the target the rocket will aim for when climbing.");
	DVAR_PATCH_DESCRIPTION("missileJavClimbHeightTop", 0x0053c5cd, "In top-fire mode, how far above the target the rocket will aim for when climbing.");
	DVAR_PATCH_DESCRIPTION("missileJavClimbToOwner", 0x0053c863, "");
	DVAR_PATCH_DESCRIPTION("missileJavSpeedLimitClimb", 0x0053c7bf, "Rocket's speed limit when climbing.");
	DVAR_PATCH_DESCRIPTION("missileJavSpeedLimitDescend", 0x0053c7f7, "Rocket's speed limit when descending towards target.");
	DVAR_PATCH_DESCRIPTION("missileJavTurnDecel", 0x0053c82b, "");
	DVAR_PATCH_DESCRIPTION("missileJavTurnRateDirect", 0x0053c6df, "In direct-fire mode, how sharp the rocket can turn, in angles/sec.");
	DVAR_PATCH_DESCRIPTION("missileJavTurnRateTop", 0x0053c717, "In top-fire mode, how sharp the rocket can turn, in angles/sec.");
	DVAR_PATCH_DESCRIPTION("missileMolotovBlobNum", 0x0053c959, "The number of fire blobs a molotov should spawn on impact, these count against the server entities.");
	DVAR_PATCH_DESCRIPTION("missileMolotovBlobTime", 0x0053c981, "The life time of a molotov fire blob in seconds.");
	DVAR_PATCH_DESCRIPTION("missilePlantableSize", 0x0053c924, "Size of the bounding box used for plantable equipment collision.");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedBoost", 0x0053c9bd, "The multiplier that the TV guided missile recieves while boosting.");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedBoostSpeedDown", 0x0053ca15, "Speed decrease factor to return from full boost.");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedBoostSpeedUp", 0x0053c9f0, "Speed increase factor to get to full boost.");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedFlatteningRollAccel", 0x0053cab3, "Roll acceleration when the missile is flattening out after a turn.");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedMaxRollAngle", 0x0053ca43, "Max roll the missile will have when turning.");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedStickDeadzone", 0x0053c8ca, "defines the dead zone for stick movement (stick values range from -128..127");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedTurnRate", 0x0053c8f2, "max turn rate of a tv guided missile (multiplied by the stick deflection [0-1])");
	DVAR_PATCH_DESCRIPTION("missileTVGuidedTurningRollAccel", 0x0053ca7b, "Roll acceleration when the missile is turning.");
	DVAR_PATCH_DESCRIPTION("missileWaterMaxDepth", 0x0053c89b, "If a missile explodes deeper under water than this, they explosion effect/sound will not play.");
	DVAR_PATCH_DESCRIPTION("motd", 0x00591568, "Message of the day");
	DVAR_PATCH_DESCRIPTION("name", 0x00591431, "Player name");
	DVAR_PATCH_DESCRIPTION("narrowShardRatio", 0x0055ba55, "minimum ratio between a shard's local bbox edges or between the shard's bbox area vs the shard's area to cause the shard to be rejected");
	DVAR_PATCH_DESCRIPTION("net_ip", 0x0052e1b0, "Network IP Address");
	DVAR_PATCH_DESCRIPTION("net_port", 0x0052e1c6, "Network port");
	DVAR_PATCH_DESCRIPTION("net_profile", 0x004e5997, "Profile network performance");
	DVAR_PATCH_DESCRIPTION("net_showprofile", 0x004e59c0, "Show network profiling display");
	DVAR_PATCH_DESCRIPTION("net_socksPassword", 0x00868172, "Network socket password");
	DVAR_PATCH_DESCRIPTION("net_socksPort", 0x00868107, "Network socket port");
	DVAR_PATCH_DESCRIPTION("net_socksServer", 0x008680d5, "Network socket server");
	DVAR_PATCH_DESCRIPTION("net_socksUsername", 0x00868140, "Network socket username");
	DVAR_PATCH_DESCRIPTION("nextdemo", 0x005914b2, "The next demo to play");
	DVAR_PATCH_DESCRIPTION("nextmap", 0x00698b97, "Next map to play");
	DVAR_PATCH_DESCRIPTION("nightVisionFadeInOutTime", 0x0048c366, "How long the fade to/from black lasts when putting on or removing night vision goggles.");
	DVAR_PATCH_DESCRIPTION("nightVisionPowerOnTime", 0x0048c399, "How long the black-to-nightvision fade lasts when turning on the goggles.");
	DVAR_PATCH_DESCRIPTION("notice_onEscArg", 0x0083665e, "UI Notice EscArg");
	DVAR_PATCH_DESCRIPTION("party_maxplayers", 0x0069638e, "Maximum number of players");
	DVAR_PATCH_DESCRIPTION("party_minplayers", 0x006963f9, "Minimum number of players needed to start the game");
	DVAR_PATCH_DESCRIPTION("password", 0x004d1fa0, "password");
	DVAR_PATCH_DESCRIPTION("password", 0x0059149c, "password");
	DVAR_PATCH_DESCRIPTION("penetrationCount", 0x00698579, "Maximum number of private clients allowed on the server");
	DVAR_PATCH_DESCRIPTION("penetrationCount_allies", 0x006985ba, "Maximum number for TEAM_ALLIES");
	DVAR_PATCH_DESCRIPTION("penetrationCount_axis", 0x00698598, "Maximum number for TEAM_AXIS");
	DVAR_PATCH_DESCRIPTION("perk_armorPiercing", 0x00548b83, "Percent bullet damage is increased for helicopters, spy planes, and turrets.");
	DVAR_PATCH_DESCRIPTION("perk_bulletPenetrationMultiplier", 0x00548792, "Multiplier for extra bullet penetration");
	DVAR_PATCH_DESCRIPTION("perk_damageKickReduction", 0x005489cb, "The percentage decrease of view kick flinch when the player takes damage");
	DVAR_PATCH_DESCRIPTION("perk_deathStreakCountRequired", 0x0054893b, "Number of deaths required to obtain a deathstreak.");
	DVAR_PATCH_DESCRIPTION("perk_delayExplosiveTime", 0x0054889b, "Time in seconds to delay a proximity explosive");
	DVAR_PATCH_DESCRIPTION("perk_disarmExplosiveTime", 0x005488d4, "Time in seconds to disarm a proximity explosive");
	DVAR_PATCH_DESCRIPTION("perk_extraBreath", 0x0054875a, "Number of extra seconds a player can hold his breath");
	DVAR_PATCH_DESCRIPTION("perk_extraMoneyMultiplier", 0x00548864, "Multiplier for extra COD points.");
	DVAR_PATCH_DESCRIPTION("perk_fireproof", 0x00548b4b, "Percent to reduce flame damage done to the player.");
	DVAR_PATCH_DESCRIPTION("perk_flakJacket", 0x00548adb, "Percent of explosive damage done that will apply to player.");
	DVAR_PATCH_DESCRIPTION("perk_flakJacket_hardcore", 0x00548b13, "Percent of explosive damage done that will apply to player in hardcore.");
	DVAR_PATCH_DESCRIPTION("perk_grenadeDeath", 0x005487c1, "Name of the grenade weapon to drop");
	DVAR_PATCH_DESCRIPTION("perk_grenadeTossBackTimer", 0x00548817, "Minimum timer for a grenade. If the time left is less than this it will be bumped up. Tossback Perk");
	DVAR_PATCH_DESCRIPTION("perk_healthRegenMultiplier", 0x00548997, "Multiplier to the time which the player starts to regenerate health after damage");
	DVAR_PATCH_DESCRIPTION("perk_interactSpeedMultiplier", 0x00548a6b, "Multiplier for increasing use timers.");
	DVAR_PATCH_DESCRIPTION("perk_killstreakReduction", 0x0054883c, "Reduced number of kills required to obtain a killstreak.");
	DVAR_PATCH_DESCRIPTION("perk_mantleReduction", 0x00548a33, "The percentage decrease of mantle up time");
	DVAR_PATCH_DESCRIPTION("perk_shellShockReduction", 0x005489ff, "The percentage decrease of shellshock time");
	DVAR_PATCH_DESCRIPTION("perk_speedMultiplier", 0x0054890c, "Player speed multiplier");
	DVAR_PATCH_DESCRIPTION("perk_sprintMultiplier", 0x005487e8, "Multiplier for player_sprinttime");
	DVAR_PATCH_DESCRIPTION("perk_sprintRecoveryMultiplier", 0x0054895f, "Percent of sprint recovery time to use.");
	DVAR_PATCH_DESCRIPTION("perk_throwbackInnerRadius", 0x00548aa3, "The radius to a live grenade player must be within initially to do a throwback with the toss back perk on");
	DVAR_PATCH_DESCRIPTION("perk_weapAdsMultiplier", 0x005486e6, "Percentage of weapon ADS rate to use");
	DVAR_PATCH_DESCRIPTION("perk_weapMeleeMultiplier", 0x0054871e, "Percentage of weapon melee recovery rate to use");
	DVAR_PATCH_DESCRIPTION("perk_weapRateMultiplier", 0x0054867a, "Percentage of weapon firing rate to use");
	DVAR_PATCH_DESCRIPTION("perk_weapReloadMultiplier", 0x00548646, "Percentage of weapon reload time to use");
	DVAR_PATCH_DESCRIPTION("perk_weapSpreadMultiplier", 0x00548612, "Percentage of weapon spread to use");
	DVAR_PATCH_DESCRIPTION("perk_weapSwitchMultiplier", 0x005486ae, "Percentage of weapon switching rate to use");
	DVAR_PATCH_DESCRIPTION("phys_ai_collision_mode", 0x00475d4c, "phys ai collision mode");
	DVAR_PATCH_DESCRIPTION("phys_bulletSpinScale", 0x0047580f, "Scale of the effective offset from the center of mass for the bullet impacts.");
	DVAR_PATCH_DESCRIPTION("phys_bulletUpBias", 0x004757db, "Up Bias for the direction of the bullet impact.");
	DVAR_PATCH_DESCRIPTION("phys_buoyancyDistanceCutoff", 0x00475ac2, "Objects that are too far will sink.");
	DVAR_PATCH_DESCRIPTION("phys_buoyancyRippleFrequency", 0x00475b49, "How often (in ms) floating objects will play the ripple fx");
	DVAR_PATCH_DESCRIPTION("phys_buoyancyRippleVariance", 0x00475b6c, "How late (in ms) the ripple fx can be played");
	DVAR_PATCH_DESCRIPTION("phys_dragAngular", 0x004759e8, "The amount of angular drag, applied globally");
	DVAR_PATCH_DESCRIPTION("phys_dragLinear", 0x004759b4, "The amount of linear drag, applied globally");
	DVAR_PATCH_DESCRIPTION("phys_floatTimeVariance", 0x00475b29, "Variance in time (in ms) objects will float for");
	DVAR_PATCH_DESCRIPTION("phys_fluid", 0x00475de6, "Turn on and off the fluid simulation code");
	DVAR_PATCH_DESCRIPTION("phys_gravity", 0x004756d3, "Physics gravity in units/sec^2.");
	DVAR_PATCH_DESCRIPTION("phys_gravity_dir", 0x00475711, "Sets the gravity direction.");
	DVAR_PATCH_DESCRIPTION("phys_impact_distance_cutoff", 0x0068a7cb, "Disable effects that are further than distance_cutoff value. Uses the distance /in inches/ to the closes active player.");
	DVAR_PATCH_DESCRIPTION("phys_impact_intensity_limit", 0x0068a766, "Lower limit for the intensity of the impact sounds that the engine triggers.");
	DVAR_PATCH_DESCRIPTION("phys_impact_max_pfx_per_frame", 0x0068a862, "Maximum number of particle effects spawned on physics object impact. The value is per frame.");
	DVAR_PATCH_DESCRIPTION("phys_impact_max_sfx_per_frame", 0x0068a87e, "Maximum number of sound effects spawned on physics objects impact. The value is per frame.");
	DVAR_PATCH_DESCRIPTION("phys_impact_silence_window", 0x0068a796, "The length of the silence window. When a body triggers an impact sound it will not trigger new sounds for the duration of this silence window.");
	DVAR_PATCH_DESCRIPTION("phys_maxFloatTime", 0x00475a96, "Maximum time objects can float (in ms)");
	DVAR_PATCH_DESCRIPTION("phys_msecstep", 0x0047583e, "Physics simulation update increment in milliseconds");
	DVAR_PATCH_DESCRIPTION("phys_piecesSpawnDistanceCutoff", 0x00475afa, "Determine how far we can spawn destructible pieces.");
	DVAR_PATCH_DESCRIPTION("phys_player_collision_adjust_height", 0x00475d27, "adjust the height of the gjk player collision capsule");
	DVAR_PATCH_DESCRIPTION("phys_player_collision_mode", 0x00475d06, "phys player collision mode");
	DVAR_PATCH_DESCRIPTION("phys_ragdoll_joint_damp_scale", 0x00475980, "Sets the phys joint damp for ragdolls.");
	DVAR_PATCH_DESCRIPTION("phys_reeval_frequency", 0x0068a836, "Controls how often the engine reevalutes the piority of the physics object. If the object has low priority /its too far or smth/ we dont play effect.");
	DVAR_PATCH_DESCRIPTION("phys_vehicleDamageFroceScale", 0x00475789, "Physics vehicle damamge force scale.");
	DVAR_PATCH_DESCRIPTION("phys_vehicleFriction", 0x00475946, "Default vehicle friction with the world and other ents.");
	DVAR_PATCH_DESCRIPTION("phys_vehicleGravityMultiplier", 0x00475751, "Physics gravity multiplier for vehicles.");
	DVAR_PATCH_DESCRIPTION("phys_waterDragAngular", 0x00475a62, "The amount of angular drag for buoyant objects");
	DVAR_PATCH_DESCRIPTION("phys_waterDragLinear", 0x00475a2e, "The amount of linear drag for buoyant objects");
	DVAR_PATCH_DESCRIPTION("playerPushAmount", 0x0066110f, "If this value is set the player will get pushed away from AIs by the amount specified.");
	DVAR_PATCH_DESCRIPTION("player_AimBlend_Back_Low", 0x00660acd, "3rd person player view aim blend - lower back");
	DVAR_PATCH_DESCRIPTION("player_AimBlend_Back_Mid", 0x00660b12, "3rd person player view aim blend - mid back");
	DVAR_PATCH_DESCRIPTION("player_AimBlend_Back_Up", 0x00660b5b, "3rd person player view aim blend - upper back");
	DVAR_PATCH_DESCRIPTION("player_AimBlend_Head", 0x00660c22, "3rd person player view aim blend - head");
	DVAR_PATCH_DESCRIPTION("player_AimBlend_Neck", 0x00660be3, "3rd person player view aim blend - neck");
	DVAR_PATCH_DESCRIPTION("player_AimBlend_Pelvis", 0x00660ba4, "3rd person player view aim blend - pelvis");
	DVAR_PATCH_DESCRIPTION("player_AimBlend_Shoulder", 0x00660c5b, "3rd person player view aim blend - shoulder");
	DVAR_PATCH_DESCRIPTION("player_adsExitDelay", 0x0065f696, "Delay before exiting aim down sight");
	DVAR_PATCH_DESCRIPTION("player_animRunThreshhold", 0x0065f8df, "The speed at which the player will animate as though they are running");
	DVAR_PATCH_DESCRIPTION("player_animWalkThreshhold", 0x0065f917, "The speed at which the player will animate as though they are walking");
	DVAR_PATCH_DESCRIPTION("player_backSpeedScale", 0x0065fc0c, "The scale applied to the player speed when moving backwards");
	DVAR_PATCH_DESCRIPTION("player_bayonetLaunchZCap", 0x0065ff28, "Max Z velocity during bayonet charge.");
	DVAR_PATCH_DESCRIPTION("player_bayonetRange", 0x006606b9, "The maximum range of the player's bayonet attack");
	DVAR_PATCH_DESCRIPTION("player_bayonetTargetDist", 0x006606e8, "The distance to the enemy the player's will stop charging");
	DVAR_PATCH_DESCRIPTION("player_breath_fire_delay", 0x0065f432, "The amount of time subtracted from the player remaining breath time when a weapon is fired");
	DVAR_PATCH_DESCRIPTION("player_breath_gasp_lerp", 0x0065f4d4, "The interpolation rate for the target waver amplitude when gasping");
	DVAR_PATCH_DESCRIPTION("player_breath_gasp_scale", 0x0065f464, "Scale value to apply to the target waver during a gasp");
	DVAR_PATCH_DESCRIPTION("player_breath_gasp_time", 0x0065f3fe, "The amount of time a player will gasp once they can breath again");
	DVAR_PATCH_DESCRIPTION("player_breath_hold_lerp", 0x0065f49c, "The interpolation rate for the target waver amplitude when holding breath");
	DVAR_PATCH_DESCRIPTION("player_breath_hold_time", 0x0065f3c6, "The maximum time a player can hold his breath");
	DVAR_PATCH_DESCRIPTION("player_breath_snd_delay", 0x0065f544, "The delay before playing the breathe in sound");
	DVAR_PATCH_DESCRIPTION("player_breath_snd_lerp", 0x0065f50c, "The interpolation rate for the player hold breath sound");
	DVAR_PATCH_DESCRIPTION("player_burstFireCooldown", 0x00660713, "Seconds after a burst fire before weapons can be fired again.");
	DVAR_PATCH_DESCRIPTION("player_clipSizeMultiplier", 0x0065f725, "Changes the clip size of weapons with more than one bullet in their clip.");
	DVAR_PATCH_DESCRIPTION("player_dmgtimer_flinchTime", 0x0066001a, "Maximum time to play flinch animations");
	DVAR_PATCH_DESCRIPTION("player_dmgtimer_maxTime", 0x0065ff98, "The maximum time that the player is slowed due to damage");
	DVAR_PATCH_DESCRIPTION("player_dmgtimer_minScale", 0x0065ffcc, "The minimum scale value to slow the player by when damaged");
	DVAR_PATCH_DESCRIPTION("player_dmgtimer_stumbleTime", 0x0065fff5, "Maximum time to play stumble animations");
	DVAR_PATCH_DESCRIPTION("player_dmgtimer_timePerPoint", 0x0065ff60, "The time in milliseconds that the player is slowed down per point of damage");
	DVAR_PATCH_DESCRIPTION("player_enduranceSpeedScale", 0x0065fce8, "The scale applied to the player speed when they have endurance perk");
	DVAR_PATCH_DESCRIPTION("player_floatSpeed", 0x0065fadb, "The speed at which the player will float up to the top of the water");
	DVAR_PATCH_DESCRIPTION("player_footstepsThreshhold", 0x0065f9c3, "The minimum speed at which the player makes loud footstep noises");
	DVAR_PATCH_DESCRIPTION("player_knockbackMoveThreshhold", 0x0065fa33, "The speed threshold before a player is considered to be running forwards");
	DVAR_PATCH_DESCRIPTION("player_lastStandBleedoutTime", 0x0065f759, "The time taken by the player to completely bleedout when in last stand (pro version).");
	DVAR_PATCH_DESCRIPTION("player_lastStandBleedoutTimeNoRevive", 0x0065f791, "The time taken by the player to completely bleedout when in last stand (non-pro version).");
	DVAR_PATCH_DESCRIPTION("player_lastStandHealthOverlayTime", 0x0065f801, "The time at the end of last stand to apply health (red) overlay");
	DVAR_PATCH_DESCRIPTION("player_lean_rotate", 0x0065e883, "Amount to rotate the player 3rd person model when leaning(x:left, y:right)");
	DVAR_PATCH_DESCRIPTION("player_lean_rotate_crouch", 0x0065e9d3, "Amount to rotate the player 3rd person model when crouch leaning(x:left, y:right)");
	DVAR_PATCH_DESCRIPTION("player_lean_shift", 0x0065e7ff, "Amount to shift the player 3rd person model when leaning(x:left, y:right)");
	DVAR_PATCH_DESCRIPTION("player_lean_shift_crouch", 0x0065e841, "Amount to shift the player 3rd person model when crouch leaning(x:left, y:right)");
	DVAR_PATCH_DESCRIPTION("player_meleeHeight", 0x00660681, "The height of the player's melee attack");
	DVAR_PATCH_DESCRIPTION("player_meleeRange", 0x00660611, "The maximum range of the player's melee attack");
	DVAR_PATCH_DESCRIPTION("player_meleeWidth", 0x00660649, "The width of the player's melee attack");
	DVAR_PATCH_DESCRIPTION("player_moveThreshhold", 0x0065f981, R"(The speed at which the player is considered to be moving for the purposes of 
view model bob and multiplayer model movement)");
	DVAR_PATCH_DESCRIPTION("player_move_factor_on_torso", 0x0065f6bd, "The contribution movement direction has on player torso direction(multi-player only)");
	DVAR_PATCH_DESCRIPTION("player_revivePlayerListCycleTime", 0x0065f871, "The time for cycling through the list of players who are in last stand.");
	DVAR_PATCH_DESCRIPTION("player_reviveTriggerRadius", 0x0065f839, "The radius for the hint string and revive radius");
	DVAR_PATCH_DESCRIPTION("player_runThreshhold", 0x0065f9fb, "The speed threshold before a player is considered to be running forwards");
	DVAR_PATCH_DESCRIPTION("player_runbkThreshhold", 0x0065f94f, "The speed threshold before a player is considered to be running backwards");
	DVAR_PATCH_DESCRIPTION("player_sliding_friction", 0x0065fb2c, "Controls the friction during slide.");
	DVAR_PATCH_DESCRIPTION("player_sliding_velocity_cap", 0x0065fb9c, "Velocity threshold for the player slide.");
	DVAR_PATCH_DESCRIPTION("player_sliding_wishspeed", 0x0065fb64, "Controls how fast the player will slide.");
	DVAR_PATCH_DESCRIPTION("player_slopeAnimAngle", 0x0065fc78, "Angle at which the player will start animating differently when going up or down slopes");
	DVAR_PATCH_DESCRIPTION("player_spectateSpeedScale", 0x0065fcb4, "The scale applied to the player speed when spectating");
	DVAR_PATCH_DESCRIPTION("player_sprintCameraBob", 0x0065fe6b, "The speed the camera bobs while you sprint");
	DVAR_PATCH_DESCRIPTION("player_sprintForwardMinimum", 0x0065fd17, "The minimum forward deflection required to maintain a sprint");
	DVAR_PATCH_DESCRIPTION("player_sprintMinTime", 0x0065fdcd, "The minimum sprint time needed in order to start sprinting");
	DVAR_PATCH_DESCRIPTION("player_sprintRechargePause", 0x0065fe01, "The length of time the meter will pause before starting to recharge after a player sprints");
	DVAR_PATCH_DESCRIPTION("player_sprintSpeedScale", 0x0065fd42, "The scale applied to the player speed when sprinting");
	DVAR_PATCH_DESCRIPTION("player_sprintStrafeSpeedScale", 0x0065fe33, "The speed at which you can strafe while sprinting");
	DVAR_PATCH_DESCRIPTION("player_sprintThreshhold", 0x0065fa6b, "The speed threshhold before a player is considered to be sprinting");
	DVAR_PATCH_DESCRIPTION("player_sprintTime", 0x0065fd95, "The base length of time a player can sprint");
	DVAR_PATCH_DESCRIPTION("player_strafeAnimCosAngle", 0x0065fc3e, "Cosine of the angle which player starts using strafe animations");
	DVAR_PATCH_DESCRIPTION("player_strafeSpeedScale", 0x0065fbd4, "The scale applied to the player speed when strafing");
	DVAR_PATCH_DESCRIPTION("player_swimDamage", 0x00660822, "Damage the player will take each interval while out of breath in deep water.");
	DVAR_PATCH_DESCRIPTION("player_swimDamagerInterval", 0x0066084d, "Interval in which damage will be dealt while out of breath under water.");
	DVAR_PATCH_DESCRIPTION("player_swimTime", 0x006607f3, "Set the max time the player can swim underwater before taking damage.");
	DVAR_PATCH_DESCRIPTION("player_throwbackInnerRadius", 0x007e0db4, "The radius to a live grenade player must be within initially to do a throwback");
	DVAR_PATCH_DESCRIPTION("player_throwbackOuterRadius", 0x007e0dec, "The radius player is allow to throwback a grenade once the player has been in the inner radius");
	DVAR_PATCH_DESCRIPTION("player_topDownCamAngles", 0x0066093a, "Sets the pitch for the top down cam");
	DVAR_PATCH_DESCRIPTION("player_topDownCamCenterPos", 0x00660980, "Set a top down camera influence position, player_topDownCamMode must be set to 3 to use this dvar");
	DVAR_PATCH_DESCRIPTION("player_topDownCamMode", 0x006608cc, "Enabled the top down cam.");
	DVAR_PATCH_DESCRIPTION("player_topDownCamOffset", 0x006608f4, "Sets the camera position relative to the player for the top down cam");
	DVAR_PATCH_DESCRIPTION("player_topDownCursorDist", 0x006609d0, "Distance the virtual mouse cursor is from the player.");
	DVAR_PATCH_DESCRIPTION("player_topDownCursorPos", 0x00660a08, "Position of the virtual mouse cursor is from the player relative to the player.");
	DVAR_PATCH_DESCRIPTION("player_turnRateScale", 0x0065fea3, "Scales the rotation rate of the player's view.");
	DVAR_PATCH_DESCRIPTION("player_viewLockEnt", 0x00660878, "Set an entity that the player view will be locked too.");
	DVAR_PATCH_DESCRIPTION("player_viewRateScale", 0x006608a8, "Player view rate scale modifier when player doesn't have a weapon.");
	DVAR_PATCH_DESCRIPTION("player_view_pitch_down", 0x0065e7c3, "Maximum angle that the player can look down");
	DVAR_PATCH_DESCRIPTION("player_view_pitch_up", 0x0065e787, "Maximum angle that the player can look up");
	DVAR_PATCH_DESCRIPTION("player_waterSpeedScale", 0x0065faa3, "Water movement speed scalar. The larger the value, the faster the movement.");
	DVAR_PATCH_DESCRIPTION("playlist", 0x00590c3c, "The playlist number");
	DVAR_PATCH_DESCRIPTION("popInLetterFXTime", 0x0056bd81, "Time it takes for a letter to pop in. ");
	DVAR_PATCH_DESCRIPTION("primaryWeaponOffset", 0x0056eca3, "Primary Weapon Offset for CE and Presell");
	DVAR_PATCH_DESCRIPTION("protocol", 0x006983c7, "Protocol version");
	DVAR_PATCH_DESCRIPTION("r_aaAlpha", 0x006cae11, "Transparency anti-aliasing method");
	DVAR_PATCH_DESCRIPTION("r_aaSamples", 0x006cae29, "Anti-aliasing sample count; 1 disables anti-aliasing");
	DVAR_PATCH_DESCRIPTION("r_aspectRatio", 0x006ce1d3, "Screen aspect ratio. Most widescreen monitors are 16:10 instead of 16:9.");
	DVAR_PATCH_DESCRIPTION("r_backBufferSize", 0x006cb9e6, "Size of Back Buffer");
	DVAR_PATCH_DESCRIPTION("r_backBufferSizeY", 0x006cba0b, "Size of Back Buffer Y");
	DVAR_PATCH_DESCRIPTION("r_bloomBlurRadius", 0x006cd58d, "bloom blur radius");
	DVAR_PATCH_DESCRIPTION("r_bloomColorScale", 0x006cd60b, "color scale RGB, desaturation start");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveBreakpoint", 0x006cd689, "lo hi curve breakpoint RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveHiBlack", 0x006cd7f6, "curve hi black point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveHiGamma", 0x006cd82f, "curve hi gamma ramp RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveHiRemapBlack", 0x006cd8a9, "curve hi output black point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveHiRemapWhite", 0x006cd8e3, "curve hi output white point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveHiWhite", 0x006cd86f, "curve hi white point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveLoBlack", 0x006cd6c5, "curve lo black point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveLoGamma", 0x006cd703, "curve lo gamma ramp RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveLoRemapBlack", 0x006cd77d, "curve lo output black point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveLoRemapWhite", 0x006cd7b7, "curve lo output white point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomCurveLoWhite", 0x006cd743, "curve lo white point RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomExpansionControl", 0x006cd91d, "expansion amount x&y and expansion target x&y ");
	DVAR_PATCH_DESCRIPTION("r_bloomExpansionSource", 0x006cd992, "bloom expansion source point");
	DVAR_PATCH_DESCRIPTION("r_bloomExpansionWeights", 0x006cd95d, "amount of expansion to lerp in RGBT");
	DVAR_PATCH_DESCRIPTION("r_bloomPersistence", 0x006cd9b6, "amount of bloom feedback");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakXInnerTint", 0x006cda70, "streak inner tint");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakXLevels0", 0x006cd9e8, "level weights RGB, level gamma");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakXLevels1", 0x006cda30, "level in black white, out black white");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakXOuterTint", 0x006cdaa6, "streak outer tint");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakXTint", 0x006cdb26, "streak tint");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakXTintControl", 0x006cdadc, "streak saturation weights, saturation");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakYInnerTint", 0x006cdbe8, "streak inner tint");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakYLevels0", 0x006cdb60, "level weights RGB, level gamma");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakYLevels1", 0x006cdba6, "level in black white, out black white");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakYOuterTint", 0x006cdc1e, "streak outer tint");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakYTint", 0x006cdc9e, "streak tint");
	DVAR_PATCH_DESCRIPTION("r_bloomStreakYTintControl", 0x006cdc54, "streak saturation weights, saturation");
	DVAR_PATCH_DESCRIPTION("r_bloomTintScale", 0x006cd649, "tint scale RGB, desaturation end");
	DVAR_PATCH_DESCRIPTION("r_bloomTintWeights", 0x006cd5c1, "tint weights RGB, desaturation amount");
	DVAR_PATCH_DESCRIPTION("r_blur", 0x006cbd09, "Dev tweak to blur the screen");
	DVAR_PATCH_DESCRIPTION("r_brightness", 0x006cbebb, "Brightness adjustment");
	DVAR_PATCH_DESCRIPTION("r_brushLimit", 0x006cafbf, "Maximum number of brushes drawn simultaneously");
	DVAR_PATCH_DESCRIPTION("r_burnedDestructibleColor", 0x006ce4cd, "color of burned destructibles");
	DVAR_PATCH_DESCRIPTION("r_clear", 0x006cae5d, "Controls how the color buffer is cleared");
	DVAR_PATCH_DESCRIPTION("r_clearColor", 0x006cae7f, "Color to clear the screen to when clearing the frame buffer");
	DVAR_PATCH_DESCRIPTION("r_clearColor2", 0x006caeac, "Color to clear every second frame to (for use during development)");
	DVAR_PATCH_DESCRIPTION("r_clipCodec", 0x006ca1e3, "Codec used when rendering clips.");
	DVAR_PATCH_DESCRIPTION("r_clipFPS", 0x006ca220, "Render clip FPS.");
	DVAR_PATCH_DESCRIPTION("r_clipSize", 0x006ca200, "Render clip size.");
	DVAR_PATCH_DESCRIPTION("r_colorMap", 0x006ca791, "Replace all color maps with pure black or pure white");
	DVAR_PATCH_DESCRIPTION("r_contrast", 0x006cbe8b, "Contrast adjustment");
	DVAR_PATCH_DESCRIPTION("r_convergence", 0x006ce28f, "Stereo convergence.");
	DVAR_PATCH_DESCRIPTION("r_customMode", 0x006ce1f0, "Special resolution mode for the remote debugger");
	DVAR_PATCH_DESCRIPTION("r_debugHDRdlight", 0x006cdf5d, "debug dlights mode");
	DVAR_PATCH_DESCRIPTION("r_debugHDRdlight_color", 0x006ce023, "dlights debug color");
	DVAR_PATCH_DESCRIPTION("r_debugHDRdlight_distance", 0x006cdfb7, "distance dlights appear around camera");
	DVAR_PATCH_DESCRIPTION("r_debugHDRdlight_radius", 0x006cdfef, "dlights falloff radius");
	DVAR_PATCH_DESCRIPTION("r_debugHDRdlight_scale", 0x006cdf7f, "dlights color scale");
	DVAR_PATCH_DESCRIPTION("r_debugLineWidth", 0x006ca8f3, "Width of server side debug lines");
	DVAR_PATCH_DESCRIPTION("r_debugShader", 0x006ca3f1, "Enable shader debugging information");
	DVAR_PATCH_DESCRIPTION("r_desaturation", 0x006cbef3, "Desaturation adjustment");
	DVAR_PATCH_DESCRIPTION("r_diffuseColorScale", 0x006ca82b, "Globally scale the diffuse color of all point lights");
	DVAR_PATCH_DESCRIPTION("r_displayRefresh", 0x006b74ed, "Refresh rate");
	DVAR_PATCH_DESCRIPTION("r_dlightLimit", 0x006caeec, "Maximum number of dynamic lights drawn simultaneously");
	DVAR_PATCH_DESCRIPTION("r_dlightMaxFullScreenRadius", 0x006caf11, "Maximum radius to limit dlights to in fullscreen.");
	DVAR_PATCH_DESCRIPTION("r_dlightMaxNonFullScreenRadius", 0x006caf45, "Maximum radius to limit dlights to when not fullscreen");
	DVAR_PATCH_DESCRIPTION("r_dobjLimit", 0x006caf72, "Maximum number of DObjs drawn simultaneously");
	DVAR_PATCH_DESCRIPTION("r_dof_bias", 0x006cc8a1, "Depth of field bias as a power function (like gamma); less than 1 is sharper");
	DVAR_PATCH_DESCRIPTION("r_dof_farBlur", 0x006cc719, "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480");
	DVAR_PATCH_DESCRIPTION("r_dof_farEnd", 0x006cc869, "Depth of field far end distance, in inches");
	DVAR_PATCH_DESCRIPTION("r_dof_farStart", 0x006cc82b, "Depth of field far start distance, in inches");
	DVAR_PATCH_DESCRIPTION("r_dof_nearBlur", 0x006cc6dd, "Sets the radius of the gaussian blur used by depth of field, in pixels at 640x480");
	DVAR_PATCH_DESCRIPTION("r_dof_nearEnd", 0x006cc7f9, "Depth of field near end distance, in inches");
	DVAR_PATCH_DESCRIPTION("r_dof_nearStart", 0x006cc7c1, "Depth of field near start distance, in inches");
	DVAR_PATCH_DESCRIPTION("r_dof_viewModelEnd", 0x006cc789, "Depth of field viewmodel end distance, in inches");
	DVAR_PATCH_DESCRIPTION("r_dof_viewModelStart", 0x006cc751, "Depth of field viewmodel start distance, in inches");
	DVAR_PATCH_DESCRIPTION("r_enableFlashlight", 0x006cbe45, "Enable Player Flashlight.");
	DVAR_PATCH_DESCRIPTION("r_envMapExponent", 0x006cabe6, "Reflection exponent.");
	DVAR_PATCH_DESCRIPTION("r_envMapMaxIntensity", 0x006cabad, "Max reflection intensity based on glancing angle.");
	DVAR_PATCH_DESCRIPTION("r_envMapMinIntensity", 0x006cab78, "Min reflection intensity based on glancing angle.");
	DVAR_PATCH_DESCRIPTION("r_envMapSunIntensity", 0x006cac24, "Max sun specular intensity intensity with env map materials.");
	DVAR_PATCH_DESCRIPTION("r_exposureValue", 0x006cd53e, "exposure");
	DVAR_PATCH_DESCRIPTION("r_extracam_custom_aspectratio", 0x006ce794, "custom extracam aspect ratio (width/height). Set to -1 to use default aspect ratio");
	DVAR_PATCH_DESCRIPTION("r_filmCurveSoftClip", 0x006cc465, "film curve soft clip point");
	DVAR_PATCH_DESCRIPTION("r_filmLut", 0x006cbd6b, "Film LUT Index.");
	DVAR_PATCH_DESCRIPTION("r_filmTweakBleach", 0x006cc250, "Tweak dev var; film color Bleach dark - mid - light");
	DVAR_PATCH_DESCRIPTION("r_filmTweakBrightness", 0x006cbf23, "Tweak dev var; film color brightness");
	DVAR_PATCH_DESCRIPTION("r_filmTweakColorTemp", 0x006cc05c, "Tweak dev var; film color Color Temp dark - mid - light");
	DVAR_PATCH_DESCRIPTION("r_filmTweakContrast", 0x006cc218, "Tweak dev var; film color Contrast dark - mid - light");
	DVAR_PATCH_DESCRIPTION("r_filmTweakDarkFeather", 0x006cc1b8, "Tweak dev var; film color Dark range feather amount");
	DVAR_PATCH_DESCRIPTION("r_filmTweakDarkTint", 0x006cc0a0, "Tweak dev var; film color Dark Tint");
	DVAR_PATCH_DESCRIPTION("r_filmTweakDesaturation", 0x006cbf57, "Tweak dev var; Desaturation applied after all 3D drawing");
	DVAR_PATCH_DESCRIPTION("r_filmTweakHue", 0x006cbfe0, "Tweak dev var; film color Hue dark - mid - light");
	DVAR_PATCH_DESCRIPTION("r_filmTweakLightFeather", 0x006cc1e6, "Tweak dev var; film color Light range feather amount");
	DVAR_PATCH_DESCRIPTION("r_filmTweakLightTint", 0x006cc118, "Tweak dev var; film color Light Tint");
	DVAR_PATCH_DESCRIPTION("r_filmTweakLut", 0x006cbd95, "Tweak Film LUT Index.");
	DVAR_PATCH_DESCRIPTION("r_filmTweakMidEnd", 0x006cc184, "Tweak dev var; film color Mid End");
	DVAR_PATCH_DESCRIPTION("r_filmTweakMidStart", 0x006cc150, "Tweak dev var; film color Mid Start");
	DVAR_PATCH_DESCRIPTION("r_filmTweakMidTint", 0x006cc0dc, "Tweak dev var; film color Mid Tint");
	DVAR_PATCH_DESCRIPTION("r_filmTweakSaturation", 0x006cc020, "Tweak dev var; film color Saturation dark - mid - light");
	DVAR_PATCH_DESCRIPTION("r_finalShiftX", 0x006cdcd8, "r,g,b channel shift x");
	DVAR_PATCH_DESCRIPTION("r_finalShiftY", 0x006cdd18, "r,g,b channel shift y");
	DVAR_PATCH_DESCRIPTION("r_flameFX_FPS", 0x006ccad1, "fire frames per sec");
	DVAR_PATCH_DESCRIPTION("r_flameFX_distortionScaleFactor", 0x006cca60, "Distortion uv scales (Default to 1)");
	DVAR_PATCH_DESCRIPTION("r_flameFX_fadeDuration", 0x006ccaf9, "Sets fade duration in seconds");
	DVAR_PATCH_DESCRIPTION("r_flameFX_magnitude", 0x006ccaa2, "Distortion magnitude");
	DVAR_PATCH_DESCRIPTION("r_flashLightBobAmount", 0x006cb2c9, "Flashlight Movement Amount.");
	DVAR_PATCH_DESCRIPTION("r_flashLightBobRate", 0x006cb303, "Flashlight Movement Rate.");
	DVAR_PATCH_DESCRIPTION("r_flashLightBrightness", 0x006cb1db, "Brightness scale for flash light.");
	DVAR_PATCH_DESCRIPTION("r_flashLightColor", 0x006cb28f, "Flashlight Color.");
	DVAR_PATCH_DESCRIPTION("r_flashLightEndRadius", 0x006cb188, "Radius of the circle at the end of the flash light in inches.");
	DVAR_PATCH_DESCRIPTION("r_flashLightFlickerAmount", 0x006cb379, "Flashlight Flicker Amount.");
	DVAR_PATCH_DESCRIPTION("r_flashLightFlickerRate", 0x006cb3ab, "Flashlight Flicker Rate (Times per second).");
	DVAR_PATCH_DESCRIPTION("r_flashLightFovInnerFraction", 0x006cb11e, "Relative Inner FOV angle for the dynamic flash light. 0 is full fade 0.99 is almost no fade.");
	DVAR_PATCH_DESCRIPTION("r_flashLightOffset", 0x006cb213, "Relative position of the Flashlight.");
	DVAR_PATCH_DESCRIPTION("r_flashLightRange", 0x006cb25b, "Distance of the flash light in inches.");
	DVAR_PATCH_DESCRIPTION("r_flashLightSpecularScale", 0x006cb349, "Flashlight Specular Scale.");
	DVAR_PATCH_DESCRIPTION("r_flashLightStartRadius", 0x006cb156, "Radius of the circle at the start of the flash light in inches.");
	DVAR_PATCH_DESCRIPTION("r_flimCurveBlack", 0x006cc3fc, "film curve black point");
	DVAR_PATCH_DESCRIPTION("r_flimCurveWhite", 0x006cc42e, "film curve white point");
	DVAR_PATCH_DESCRIPTION("r_forceLod", 0x006cb69d, "Force all level of detail to this level");
	DVAR_PATCH_DESCRIPTION("r_fovScaleThresholdRigid", 0x006ca5cd, "Threshold FOV LOD scaling must pass before taking effect for rigid models");
	DVAR_PATCH_DESCRIPTION("r_fovScaleThresholdSkinned", 0x006ca598, "Threshold FOV LOD scaling must pass before taking effect for skinned models");
	DVAR_PATCH_DESCRIPTION("r_fullHDRrendering", 0x006cd09b, "enable full HDR rendering");
	DVAR_PATCH_DESCRIPTION("r_gamma", 0x006ca2bc, "Gamma value");
	DVAR_PATCH_DESCRIPTION("r_gpuSync", 0x006ca42f, "GPU synchronization type (used to improve mouse responsiveness)");
	DVAR_PATCH_DESCRIPTION("r_grassBurn", 0x006ce389, "test");
	DVAR_PATCH_DESCRIPTION("r_heroLightColorTemp", 0x006cdebc, "hero diffuse light temp");
	DVAR_PATCH_DESCRIPTION("r_heroLightSaturation", 0x006cde8a, "hero diffuse light saturation");
	DVAR_PATCH_DESCRIPTION("r_heroLightScale", 0x006cdf18, "hero diffuse light scale");
	DVAR_PATCH_DESCRIPTION("r_highLodDist", 0x006cb5ce, "Distance for high level of detail");
	DVAR_PATCH_DESCRIPTION("r_ignore", 0x006ca1c6, "used for debugging anything");
	DVAR_PATCH_DESCRIPTION("r_lightGridContrast", 0x006cde41, "Adjust the contrast of light color from the light grid");
	DVAR_PATCH_DESCRIPTION("r_lightGridIntensity", 0x006cde0e, "Adjust the intensity of light color from the light grid");
	DVAR_PATCH_DESCRIPTION("r_lightMap", 0x006ca771, "Replace all lightmaps with pure black or pure white");
	DVAR_PATCH_DESCRIPTION("r_lightTweakAmbient", 0x006ca9e6, "Ambient light strength");
	DVAR_PATCH_DESCRIPTION("r_lightTweakAmbientColor", 0x006caa82, "Light ambient color");
	DVAR_PATCH_DESCRIPTION("r_lightTweakDiffuseFraction", 0x006caa1a, "diffuse light fraction");
	DVAR_PATCH_DESCRIPTION("r_lightTweakSunColor", 0x006caab4, "Sun color");
	DVAR_PATCH_DESCRIPTION("r_lightTweakSunDiffuseColor", 0x006caaea, "Sun diffuse color");
	DVAR_PATCH_DESCRIPTION("r_lightTweakSunDirection", 0x006cab20, "Sun direction in degrees");
	DVAR_PATCH_DESCRIPTION("r_lightTweakSunLight", 0x006caa52, "Sunlight strength");
	DVAR_PATCH_DESCRIPTION("r_lodBiasRigid", 0x006ca4fe, "Bias the level of detail distance for rigid models (negative increases detail)");
	DVAR_PATCH_DESCRIPTION("r_lodBiasSkinned", 0x006ca562, "Bias the level of detail distance for skinned models (negative increases detail)");
	DVAR_PATCH_DESCRIPTION("r_lodScaleRigid", 0x006ca4d0, "Scale the level of detail distance for rigid models (larger reduces detail)");
	DVAR_PATCH_DESCRIPTION("r_lodScaleSkinned", 0x006ca534, "Scale the level of detail distance for skinned models (larger reduces detail)");
	DVAR_PATCH_DESCRIPTION("r_logFile", 0x006cace2, "Write all graphics hardware calls for this many frames to a logfile");
	DVAR_PATCH_DESCRIPTION("r_lowLodDist", 0x006cb63a, "Distance for low level of detail");
	DVAR_PATCH_DESCRIPTION("r_lowestLodDist", 0x006cb670, "Distance for lowest level of detail");
	DVAR_PATCH_DESCRIPTION("r_lutvar_0", 0x006cd0c3, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_1", 0x006cd109, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_10", 0x006cd37f, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_11", 0x006cd3c5, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_12", 0x006cd405, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_13", 0x006cd451, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_14", 0x006cd497, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_15", 0x006cd4dd, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_2", 0x006cd14f, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_3", 0x006cd195, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_4", 0x006cd1db, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_5", 0x006cd221, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_6", 0x006cd267, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_7", 0x006cd2ad, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_8", 0x006cd2f3, "lut data");
	DVAR_PATCH_DESCRIPTION("r_lutvar_9", 0x006cd339, "lut data");
	DVAR_PATCH_DESCRIPTION("r_materialXYZ", 0x006cac8a, "material color checker XYZ d65 coords");
	DVAR_PATCH_DESCRIPTION("r_mediumLodDist", 0x006cb604, "Distance for medium level of detail");
	DVAR_PATCH_DESCRIPTION("r_missile_cam_debug_display", 0x006ce76c, "Show missile camera debug overlay");
	DVAR_PATCH_DESCRIPTION("r_mode", 0x006b746b, "Direct X resolution mode");
	DVAR_PATCH_DESCRIPTION("r_modelLimit", 0x006caf97, "Maximum number of models drawn simultaneously");
	DVAR_PATCH_DESCRIPTION("r_monitor", 0x006ce1b4, "Index of the monitor to use in a multi monitor system; 0 picks automatically.");
	DVAR_PATCH_DESCRIPTION("r_motionblur_blurOrigin", 0x006cc95c, "Tweak dev var; origin of blur");
	DVAR_PATCH_DESCRIPTION("r_motionblur_directionFactor", 0x006cc9a2, "Tweak dev var; blur magnitude due to direction change");
	DVAR_PATCH_DESCRIPTION("r_motionblur_maxblur", 0x006cca14, "Caps the number of pixels sampled for blur");
	DVAR_PATCH_DESCRIPTION("r_motionblur_numberOfSamples", 0x006cc92e, "Tweak dev var; sets the number of pixels sampled");
	DVAR_PATCH_DESCRIPTION("r_motionblur_positionFactor", 0x006cc9d8, "Tweak dev var; blur magnitude due to position change");
	DVAR_PATCH_DESCRIPTION("r_normalMap", 0x006ca7b1, "Replace all normal maps with a flat normal map");
	DVAR_PATCH_DESCRIPTION("r_num_viewports", 0x006ce060, "number of viewports to expect to render");
	DVAR_PATCH_DESCRIPTION("r_offscreenCasterLodScale", 0x006ce9cc, "Off-screen shadow casters LOD distance scale");
	DVAR_PATCH_DESCRIPTION("r_outdoorAwayBias", 0x006ce085, "Affects the height map lookup for making sure snow doesn't go indoors");
	DVAR_PATCH_DESCRIPTION("r_outdoorDownBias", 0x006ce0c1, "Affects the height map lookup for making sure snow doesn't go indoors");
	DVAR_PATCH_DESCRIPTION("r_outdoorFeather", 0x006ce0f9, "Outdoor z-feathering value");
	DVAR_PATCH_DESCRIPTION("r_picmip", 0x006ca6e3, "Picmip level of color maps. If r_picmip_manual is 0, this is read-only.");
	DVAR_PATCH_DESCRIPTION("r_picmip_bump", 0x006ca702, "Picmip level of normal maps. If r_picmip_manual is 0, this is read-only.");
	DVAR_PATCH_DESCRIPTION("r_picmip_spec", 0x006ca71e, "Picmip level of specular maps. If r_picmip_manual is 0, this is read-only.");
	DVAR_PATCH_DESCRIPTION("r_picmip_water", 0x006ca73a, "Picmip level of water maps.");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_blurMax", 0x006cd05a, "blur max");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_blurMin", 0x006cd008, "blur min");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_debug_amount", 0x006cce7e, "Poison effect amount");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_dvisionA", 0x006ccf60, "double vision angle");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_dvisionX", 0x006ccf98, "amount of double vision x");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_dvisionY", 0x006ccfd0, "amount of double vision y");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_pulse", 0x006cceb0, "pulse rate for distortion");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_warpX", 0x006ccee8, "amount of distortion in x");
	DVAR_PATCH_DESCRIPTION("r_poisonFX_warpY", 0x006ccf24, "amount of distortion in y");
	DVAR_PATCH_DESCRIPTION("r_polygonOffsetBias", 0x006ca69b, "Offset bias for decal polygons; bigger values z-fight less but poke through walls more");
	DVAR_PATCH_DESCRIPTION("r_polygonOffsetScale", 0x006ca666, "Offset scale for decal polygons; bigger values z-fight less but poke through walls more");
	DVAR_PATCH_DESCRIPTION("r_portalBevels", 0x006cb42e, "Helps cull geometry by angles of portals that are acute when projected onto the screen, value is the cosine of the angle");
	DVAR_PATCH_DESCRIPTION("r_portalMinClipArea", 0x006cb4cf, "Don't clip child portals by a parent portal smaller than this fraction of the screen area.");
	DVAR_PATCH_DESCRIPTION("r_portalMinRecurseDepth", 0x006cb4fb, "Ignore r_portalMinClipArea for portals with fewer than this many parent portals.");
	DVAR_PATCH_DESCRIPTION("r_portalWalkLimit", 0x006cb4b0, "Stop portal recursion after this many iterations. Useful for debugging portal errors.");
	DVAR_PATCH_DESCRIPTION("r_primaryLightTweakDiffuseStrength", 0x006cdd73, "Tweak the diffuse intensity for primary lights");
	DVAR_PATCH_DESCRIPTION("r_primaryLightTweakSpecularStrength", 0x006cdda7, "Tweak the specular intensity for primary lights");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_edgeAmount", 0x006ccdad, "edge effect amount");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_edgeColorTemp", 0x006ccc89, "edge color temp");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_edgeContrast", 0x006ccd35, "edge contrast adjust RGB");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_edgeMaskAdjust", 0x006ccddb, "edge mask expansion contraction");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_edgeOffset", 0x006ccd6b, "edge tv style brightness adjust RGB");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_edgeSaturation", 0x006cccc5, "edge saturation");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_edgeScale", 0x006cccf9, "edge scale (tint) adjust RGB");
	DVAR_PATCH_DESCRIPTION("r_reviveFX_fadeDuration", 0x006ccc51, "Sets fade duration in seconds");
	DVAR_PATCH_DESCRIPTION("r_sCurveEnable", 0x006cc3d4, "S-Curve On-Off");
	DVAR_PATCH_DESCRIPTION("r_sCurveLinearAngle", 0x006cc309, "S-Curve Linear Angle");
	DVAR_PATCH_DESCRIPTION("r_sCurveLinearStrength", 0x006cc2d5, "S-Curve Linear Strength");
	DVAR_PATCH_DESCRIPTION("r_sCurveShoulderStrength", 0x006cc2a1, "S-Curve Shoulder Strength");
	DVAR_PATCH_DESCRIPTION("r_sCurveToeDenominator", 0x006cc3a5, "S-Curve Toe Denominator");
	DVAR_PATCH_DESCRIPTION("r_sCurveToeNumerator", 0x006cc371, "S-Curve Toe Numerator");
	DVAR_PATCH_DESCRIPTION("r_sCurveToeStrength", 0x006cc33d, "S-Curve Toe Strength");
	DVAR_PATCH_DESCRIPTION("r_scaleViewport", 0x006cad24, "Scale 3D viewports by this fraction. Use this to see if framerate is pixel shader bound.");
	DVAR_PATCH_DESCRIPTION("r_shader_constant_set_debug_range", 0x006ce7e5, "How far to draw scs debug view");
	DVAR_PATCH_DESCRIPTION("r_showFbColorDebug", 0x006cb557, "Show front buffer color debugging information");
	DVAR_PATCH_DESCRIPTION("r_showPenetration", 0x006ca8aa, "Shows materials tagged with 'nopenetrate'");
	DVAR_PATCH_DESCRIPTION("r_showPixelCost", 0x006ca8ca, "Shows how expensive it is to draw every pixel on the screen");
	DVAR_PATCH_DESCRIPTION("r_showPortals", 0x006cb538, "Show portals for debugging");
	DVAR_PATCH_DESCRIPTION("r_skyColorTemp", 0x006ce47a, "Sky box color temp.");
	DVAR_PATCH_DESCRIPTION("r_skyTransition", 0x006ce3cb, "Sky transition blend factor.");
	DVAR_PATCH_DESCRIPTION("r_sky_intensity_angle0", 0x006ce872, "angle0 of sky intensity");
	DVAR_PATCH_DESCRIPTION("r_sky_intensity_angle1", 0x006ce8a8, "angle1 of sky intensity");
	DVAR_PATCH_DESCRIPTION("r_sky_intensity_factor0", 0x006ce8de, "angle0 of sky intensity");
	DVAR_PATCH_DESCRIPTION("r_sky_intensity_factor1", 0x006ce912, "angle1 of sky intensity");
	DVAR_PATCH_DESCRIPTION("r_smp_worker_threads", 0x006cad80, "Number of worker threads");
	DVAR_PATCH_DESCRIPTION("r_smp_worker_threads", 0x0082d1f4, "Number of worker threads");
	DVAR_PATCH_DESCRIPTION("r_specularColorScale", 0x006ca7fd, "Set greater than 1 to brighten specular highlights");
	DVAR_PATCH_DESCRIPTION("r_specularRoughnessMap", 0x006ca7d4, "Replace all specular and roughness maps");
	DVAR_PATCH_DESCRIPTION("r_spotLightBrightness", 0x006cb0e6, "Brightness scale for spot light to get overbrightness from the 0-1 particle color range.");
	DVAR_PATCH_DESCRIPTION("r_spotLightEndRadius", 0x006cb05d, "Radius of the circle at the end of the spot light in inches.");
	DVAR_PATCH_DESCRIPTION("r_spotLightFovInnerFraction", 0x006cafed, "Relative Inner FOV angle for the dynamic spot light. 0 is full fade 0.99 is almost no fade.");
	DVAR_PATCH_DESCRIPTION("r_spotLightStartRadius", 0x006cb025, "Radius of the circle at the start of the spot light in inches.");
	DVAR_PATCH_DESCRIPTION("r_stereoTurretShift", 0x006cbcc4, "3D turret shift");
	DVAR_PATCH_DESCRIPTION("r_stream", 0x006cbad3, "Stream high mip levels (1=world|2=xmodels|4=bmodels)");
	DVAR_PATCH_DESCRIPTION("r_streamFakeLagMsec", 0x006cbb43, "Number of msec to add to streaming to roughly fake DVD lag");
	DVAR_PATCH_DESCRIPTION("r_streamHiddenPush", 0x006cbc71, "Scale the distance of hidden objects by this amount");
	DVAR_PATCH_DESCRIPTION("r_streamLog", 0x006cbc49, "Enable logging of all streaming commands executed - printed to Output and console");
	DVAR_PATCH_DESCRIPTION("r_streamMaxDist", 0x006cbb6e, "Maximum distance to predictively stream from");
	DVAR_PATCH_DESCRIPTION("r_streamSize", 0x006cbbd3, "Limit size of stream buffer in KB (0 is no limit)");
	DVAR_PATCH_DESCRIPTION("r_streamTaint", 0x006cbbf8, "Corrupt loaded mips (1-2: solid roygbiv to show mip rendered; 3-5: color coded imageIndex, difference is alpha)");
	DVAR_PATCH_DESCRIPTION("r_sun_fx_position", 0x007359e4, "Position in degrees of the sun effect");
	DVAR_PATCH_DESCRIPTION("r_sunblind_fadein", 0x00735875, "time in seconds to fade blind from 0% to 100%");
	DVAR_PATCH_DESCRIPTION("r_sunblind_fadeout", 0x007358aa, "time in seconds to fade blind from 100% to 0%");
	DVAR_PATCH_DESCRIPTION("r_sunblind_max_angle", 0x0073580f, "angle from sun in degrees inside which blinding is max");
	DVAR_PATCH_DESCRIPTION("r_sunblind_max_darken", 0x00735840, "0-1 fraction for how black the world is at max blind");
	DVAR_PATCH_DESCRIPTION("r_sunblind_min_angle", 0x007357da, "angle from sun in degrees outside which blinding is 0");
	DVAR_PATCH_DESCRIPTION("r_sunflare_fadein", 0x00735778, "time in seconds to fade alpha from 0% to 100%");
	DVAR_PATCH_DESCRIPTION("r_sunflare_fadeout", 0x007357a9, "time in seconds to fade alpha from 100% to 0%");
	DVAR_PATCH_DESCRIPTION("r_sunflare_max_alpha", 0x00735749, "0-1 vertex color and alpha of sun at max effect");
	DVAR_PATCH_DESCRIPTION("r_sunflare_max_angle", 0x00735718, "angle from sun in degrees inside which effect is max");
	DVAR_PATCH_DESCRIPTION("r_sunflare_max_size", 0x007356e3, "largest size of flare effect in pixels at 640x480");
	DVAR_PATCH_DESCRIPTION("r_sunflare_min_angle", 0x007356ae, "angle from sun in degrees outside which effect is 0");
	DVAR_PATCH_DESCRIPTION("r_sunflare_min_size", 0x0073567f, "smallest size of flare effect in pixels at 640x480");
	DVAR_PATCH_DESCRIPTION("r_sunflare_shader", 0x0073565b, "name for flare effect; can be any material");
	DVAR_PATCH_DESCRIPTION("r_sunglare_fadein", 0x0073597a, "time in seconds to fade glare from 0% to 100%");
	DVAR_PATCH_DESCRIPTION("r_sunglare_fadeout", 0x007359af, "time in seconds to fade glare from 100% to 0%");
	DVAR_PATCH_DESCRIPTION("r_sunglare_max_angle", 0x00735914, "angle from sun in degrees inside which glare is minimum");
	DVAR_PATCH_DESCRIPTION("r_sunglare_max_lighten", 0x00735945, "0-1 fraction for how white the world is at max glare");
	DVAR_PATCH_DESCRIPTION("r_sunglare_min_angle", 0x007358df, "angle from sun in degrees inside which glare is maximum");
	DVAR_PATCH_DESCRIPTION("r_sunsprite_shader", 0x00735610, "name for static sprite; can be any material");
	DVAR_PATCH_DESCRIPTION("r_sunsprite_size", 0x0073562f, "diameter in pixels at 640x480 and 80 fov");
	DVAR_PATCH_DESCRIPTION("r_swrk_override_characterCharredAmount", 0x006ce516, "overrides the __characterCharredAmount Shaderworks tweak");
	DVAR_PATCH_DESCRIPTION("r_swrk_override_characterDissolveColor", 0x006ce548, "overrides the __characterDissolveColor Shaderworks tweak");
	DVAR_PATCH_DESCRIPTION("r_swrk_override_wetness", 0x006ce582, "Overrides the character wetness.");
	DVAR_PATCH_DESCRIPTION("r_testScale", 0x006ce451, "Specular Scale.");
	DVAR_PATCH_DESCRIPTION("r_texFilterAnisoMax", 0x006ca32b, "Maximum anisotropy to use for texture filtering");
	DVAR_PATCH_DESCRIPTION("r_texFilterAnisoMin", 0x006ca362, "Minimum anisotropy to use for texture filtering (overridden by max)");
	DVAR_PATCH_DESCRIPTION("r_texFilterMipBias", 0x006ca3a7, "Change the mipmap bias");
	DVAR_PATCH_DESCRIPTION("r_texFilterMipMode", 0x006ca381, "Forces all mipmaps to use a particular blend between levels (or disables mipping.)");
	DVAR_PATCH_DESCRIPTION("r_treeScale", 0x006ce412, "Envmap Scale.");
	DVAR_PATCH_DESCRIPTION("r_ui3d_h", 0x006ce743, "ui3d texture window height");
	DVAR_PATCH_DESCRIPTION("r_ui3d_use_debug_values", 0x006ce695, "Use UI debug values");
	DVAR_PATCH_DESCRIPTION("r_ui3d_w", 0x006ce715, "ui3d texture window width");
	DVAR_PATCH_DESCRIPTION("r_ui3d_x", 0x006ce6b9, "ui3d texture window x");
	DVAR_PATCH_DESCRIPTION("r_ui3d_y", 0x006ce6e7, "ui3d texture window y");
	DVAR_PATCH_DESCRIPTION("r_vc_makelog", 0x006ca91b, "Enable logging of light grid points for the vis cache. 1 starts from scratch, 2 appends.");
	DVAR_PATCH_DESCRIPTION("r_vc_showlog", 0x006ca937, "Show this many rows of light grid points for the vis cache");
	DVAR_PATCH_DESCRIPTION("r_warningRepeatDelay", 0x006ce2f8, "Number of seconds after displaying a \"per - frame\" warning before it will display again");
	DVAR_PATCH_DESCRIPTION("r_waterSheetingFX_distortionScaleFactor", 0x006ccb5d, "Distortion uv scales (Default to 1)");
	DVAR_PATCH_DESCRIPTION("r_waterSheetingFX_fadeDuration", 0x006ccc04, "Sets fade duration in seconds");
	DVAR_PATCH_DESCRIPTION("r_waterSheetingFX_magnitude", 0x006ccb9a, "Distortion magnitude");
	DVAR_PATCH_DESCRIPTION("r_waterSheetingFX_radius", 0x006ccbcf, "Tweak dev var; Glow radius in pixels at 640x480");
	DVAR_PATCH_DESCRIPTION("r_waterWaveAmplitude", 0x006cc55e, "water wave amplitude");
	DVAR_PATCH_DESCRIPTION("r_waterWaveAngle", 0x006cc4b4, "water wave angle");
	DVAR_PATCH_DESCRIPTION("r_waterWavePhase", 0x006cc59b, "water wave phase");
	DVAR_PATCH_DESCRIPTION("r_waterWaveSpeed", 0x006cc659, "water wave speed");
	DVAR_PATCH_DESCRIPTION("r_waterWaveSteepness", 0x006cc604, "water wave steepness");
	DVAR_PATCH_DESCRIPTION("r_waterWaveWavelength", 0x006cc509, "water wave wavelength");
	DVAR_PATCH_DESCRIPTION("r_watersim_curlAmount", 0x006dc9ce, "Amount of curl applied");
	DVAR_PATCH_DESCRIPTION("r_watersim_curlMax", 0x006dca06, "Maximum curl limit");
	DVAR_PATCH_DESCRIPTION("r_watersim_curlReduce", 0x006dca3a, "Amount curl gets reduced by when over limit");
	DVAR_PATCH_DESCRIPTION("r_watersim_foamAppear", 0x006dcaae, "Rate foam appears at");
	DVAR_PATCH_DESCRIPTION("r_watersim_foamDisappear", 0x006dcadc, "Rate foam disappears at");
	DVAR_PATCH_DESCRIPTION("r_watersim_minShoreHeight", 0x006dca72, "Allows water to lap over the shoreline edge");
	DVAR_PATCH_DESCRIPTION("r_watersim_particleGravity", 0x006dcbbc, "Particle gravity");
	DVAR_PATCH_DESCRIPTION("r_watersim_particleLength", 0x006dcc2c, "Length of each particle");
	DVAR_PATCH_DESCRIPTION("r_watersim_particleLimit", 0x006dcbf9, "Limit at which particles get spawned");
	DVAR_PATCH_DESCRIPTION("r_watersim_particleWidth", 0x006dcc64, "Width of each particle");
	DVAR_PATCH_DESCRIPTION("r_watersim_scroll", 0x006dcc9c, "XY coords to scroll water in");
	DVAR_PATCH_DESCRIPTION("r_watersim_waveSeedDelay", 0x006dc99a, "Time between seeding a new wave (ms)");
	DVAR_PATCH_DESCRIPTION("r_watersim_windAmount", 0x006dcb14, "Amount of wind applied");
	DVAR_PATCH_DESCRIPTION("r_watersim_windDir", 0x006dcb4c, "Wind direction (degrees)");
	DVAR_PATCH_DESCRIPTION("r_watersim_windMax", 0x006dcb84, "Maximum wind limit");
	DVAR_PATCH_DESCRIPTION("r_zfar", 0x006ca61d, "Change the distance at which culling fog reaches 100% opacity; 0 is off");
	DVAR_PATCH_DESCRIPTION("ragdoll_baselerp_time", 0x00621788, "Default time ragdoll baselerp bones take to reach the base pose");
	DVAR_PATCH_DESCRIPTION("ragdoll_bullet_force", 0x00621721, "Bullet force applied to ragdolls");
	DVAR_PATCH_DESCRIPTION("ragdoll_bullet_upbias", 0x00621753, "Upward bias applied to ragdoll bullet effects");
	DVAR_PATCH_DESCRIPTION("ragdoll_debug", 0x00621623, "Draw ragdoll debug info (bitflags)");
	DVAR_PATCH_DESCRIPTION("ragdoll_explode_force", 0x006216b1, "Explosive force applied to ragdolls");
	DVAR_PATCH_DESCRIPTION("ragdoll_explode_upbias", 0x006216e9, "Upwards bias applied to ragdoll explosion effects");
	DVAR_PATCH_DESCRIPTION("ragdoll_fps", 0x00621645, "Ragdoll update frames per second");
	DVAR_PATCH_DESCRIPTION("ragdoll_jitter_scale", 0x0062180f, "Scale up or down the effect of physics jitter on ragdolls");
	DVAR_PATCH_DESCRIPTION("ragdoll_jointlerp_time", 0x006217ad, "Default time taken to lerp down ragdoll joint friction");
	DVAR_PATCH_DESCRIPTION("ragdoll_max_life", 0x00621667, "Max lifetime of a ragdoll system in msec");
	DVAR_PATCH_DESCRIPTION("ragdoll_max_simulating", 0x0062168c, "Max number of simultaneous active ragdolls");
	DVAR_PATCH_DESCRIPTION("ragdoll_reactivation_cutoff", 0x00661045, "Ragdoll reactivation distance cutoff");
	DVAR_PATCH_DESCRIPTION("ragdoll_rotvel_scale", 0x006217db, "Ragdoll rotational velocity estimate scale");
	DVAR_PATCH_DESCRIPTION("ragdoll_self_collision_scale", 0x00621843, "Scale the size of the collision capsules used to prevent ragdoll limbs from interpenetrating");
	DVAR_PATCH_DESCRIPTION("rate", 0x0059144a, "Player's preferred baud rate");
	DVAR_PATCH_DESCRIPTION("redactionDisplayTime", 0x0056bda3, "Time that it should be displayed for. ");
	DVAR_PATCH_DESCRIPTION("redactionFadeDuration", 0x0056bdc8, "Fade duration time. ");
	DVAR_PATCH_DESCRIPTION("redactionStartStrokeTime", 0x0056bded, "Time before the stroke starts. ");
	DVAR_PATCH_DESCRIPTION("redactionStrokeTime", 0x0056be12, "Time it takes to complete the redaction stroke. ");
	DVAR_PATCH_DESCRIPTION("reliableResendTime", 0x005bf170, "Amount of time (in ms) to wait before resending an unack'd reliable message");
	DVAR_PATCH_DESCRIPTION("reliableTimeoutTime", 0x005bf18d, "Amount of time (in ms) to wait before timing out a client for not ack'ing a message");
	DVAR_PATCH_DESCRIPTION("render_actor_collision", 0x00475d7f, "render actor collision");
	DVAR_PATCH_DESCRIPTION("render_bpi_env_collision", 0x00475d97, "render bpi_env collision");
	DVAR_PATCH_DESCRIPTION("render_player_collision", 0x00475d64, "render player collision");
	DVAR_PATCH_DESCRIPTION("revive_time_taken", 0x0065f7c9, "The time it takes to revive a player in last stand.");
	DVAR_PATCH_DESCRIPTION("scr_codpointsmatchscale", 0x0082cf63, "");
	DVAR_PATCH_DESCRIPTION("scr_codpointsperchallenge", 0x0082cf94, "");
	DVAR_PATCH_DESCRIPTION("scr_codpointsxpscale", 0x0082cf32, "");
	DVAR_PATCH_DESCRIPTION("scr_xpscale", 0x0082cf0c, "");
	DVAR_PATCH_DESCRIPTION("sd_xa2_device_guid", 0x008b1967, "prefered audio device");
	DVAR_PATCH_DESCRIPTION("sd_xa2_device_name", 0x008b1992, "Available Sound devices");
	DVAR_PATCH_DESCRIPTION("sd_xa2_num_devices", 0x008b19de, "Number of xaudio2 devices");
	DVAR_PATCH_DESCRIPTION("selectedFriendClanTag", 0x008361f5, "The clan tag of the currently selected friend.");
	DVAR_PATCH_DESCRIPTION("selectedFriendIndex", 0x0083622b, "Currently selected friend index.");
	DVAR_PATCH_DESCRIPTION("selectedFriendName", 0x008361da, "The name of the currently selected friend.");
	DVAR_PATCH_DESCRIPTION("selectedGroupIndex", 0x00836272, "Currently selected group index");
	DVAR_PATCH_DESCRIPTION("selectedMenuItemIndex", 0x008362b2, "Current selected event index.");
	DVAR_PATCH_DESCRIPTION("selectedPlayerClanName", 0x00836210, "The name of the selected player clan name");
	DVAR_PATCH_DESCRIPTION("selectedPlayerXuid", 0x00836294, "Currently selected player xuid.");
	DVAR_PATCH_DESCRIPTION("selectedStoreItemIndex", 0x00836250, "Currently selected in-game store item index");
	DVAR_PATCH_DESCRIPTION("sensitivity", 0x0059104e, "Mouse sensitivity");
	DVAR_PATCH_DESCRIPTION("server1", 0x00835e3c, "Server display");
	DVAR_PATCH_DESCRIPTION("server10", 0x00835f08, "Server display");
	DVAR_PATCH_DESCRIPTION("server11", 0x00835f1e, "Server display");
	DVAR_PATCH_DESCRIPTION("server12", 0x00835f34, "Server display");
	DVAR_PATCH_DESCRIPTION("server13", 0x00835f4d, "Server display");
	DVAR_PATCH_DESCRIPTION("server14", 0x00835f63, "Server display");
	DVAR_PATCH_DESCRIPTION("server15", 0x00835f79, "Server display");
	DVAR_PATCH_DESCRIPTION("server16", 0x00835f8f, "Server display");
	DVAR_PATCH_DESCRIPTION("server2", 0x00835e52, "Server display");
	DVAR_PATCH_DESCRIPTION("server3", 0x00835e68, "Server display");
	DVAR_PATCH_DESCRIPTION("server4", 0x00835e7e, "Server display");
	DVAR_PATCH_DESCRIPTION("server5", 0x00835e97, "Server display");
	DVAR_PATCH_DESCRIPTION("server6", 0x00835ead, "Server display");
	DVAR_PATCH_DESCRIPTION("server7", 0x00835ec3, "Server display");
	DVAR_PATCH_DESCRIPTION("server8", 0x00835ed9, "Server display");
	DVAR_PATCH_DESCRIPTION("server9", 0x00835ef2, "Server display");
	DVAR_PATCH_DESCRIPTION("shardEdgeSize", 0x0055b88f, "Range of the new shard edge length as a fraction of the total shard edges lengths");
	DVAR_PATCH_DESCRIPTION("shardShatterSizeLimitScale", 0x0055b777, "Scale of maxShardSize & minShardSize when shattering a shard.");
	DVAR_PATCH_DESCRIPTION("shardSplitDir", 0x0055b815, "Angle range of the first edge of the shard");
	DVAR_PATCH_DESCRIPTION("shardSplitDir2", 0x0055b852, "Angle range of the next edges of the shard");
	DVAR_PATCH_DESCRIPTION("shatterFxMaxDist", 0x0055ba88, "Distance between FX spawning points along the window edges");
	DVAR_PATCH_DESCRIPTION("shatterFxMinEdgeLength", 0x0055babb, "Minimum length that the window edge has to be to have a shatter fx spawned on it.");
	DVAR_PATCH_DESCRIPTION("shortversion", 0x0082d102, "Short game version");
	DVAR_PATCH_DESCRIPTION("showVisionSetDebugInfo", 0x0048c3fe, "Enables visionset debug info");
	DVAR_PATCH_DESCRIPTION("showpackets", 0x004e5950, "Show packets");
	DVAR_PATCH_DESCRIPTION("skills", 0x005485f0, "SP character skill levels");
	DVAR_PATCH_DESCRIPTION("sm_lightScore_eyeProjectDist", 0x006cb783, "When picking shadows for primary lights, measure distance from a point this far in front of the camera.");
	DVAR_PATCH_DESCRIPTION("sm_lightScore_spotProjectFrac", 0x006cb7b4, "When picking shadows for primary lights, measure distance to a point this fraction of the light's radius along it's shadow direction.");
	DVAR_PATCH_DESCRIPTION("sm_maxLights", 0x006cb729, "Limits how many primary lights can have shadow maps");
	DVAR_PATCH_DESCRIPTION("sm_polygonOffsetBias", 0x006cb839, "Shadow map offset bias");
	DVAR_PATCH_DESCRIPTION("sm_polygonOffsetScale", 0x006cb804, "Shadow map offset scale");
	DVAR_PATCH_DESCRIPTION("sm_spotShadowFadeTime", 0x006cb748, "How many seconds it takes for a primary light shadow map to fade in or out");
	DVAR_PATCH_DESCRIPTION("sm_spotShadowLargeRadiusScale", 0x006cba39, "Radius scaler for large spot shadow switch over");
	DVAR_PATCH_DESCRIPTION("sm_sunSampleSizeNear", 0x006cb871, "Shadow sample size");
	DVAR_PATCH_DESCRIPTION("sm_sunShadowCenter", 0x006cb8b2, "Sun shadow center, 0 0 0 means don't override");
	DVAR_PATCH_DESCRIPTION("sm_sunShadowScale", 0x006cb8e9, "Sun shadow scale optimization");
	DVAR_PATCH_DESCRIPTION("snaps", 0x0059146f, "Snapshot rate");
	DVAR_PATCH_DESCRIPTION("snd_assert_on_enqueue", 0x004936ca, "assert if played alias is put into q");
	DVAR_PATCH_DESCRIPTION("snd_assert_on_play", 0x0049368e, "assert if played alias");
	DVAR_PATCH_DESCRIPTION("snd_assert_on_stop", 0x004936ac, "assert if stopped alias");
	DVAR_PATCH_DESCRIPTION("snd_auto_random", 0x0049406c, "amt to randomize 3p apparent fire rates");
	DVAR_PATCH_DESCRIPTION("snd_boat_current_rpm", 0x00493784, "scalar value for boat engine");
	DVAR_PATCH_DESCRIPTION("snd_boat_engine_off", 0x00493843, "value for boat engine low/idle");
	DVAR_PATCH_DESCRIPTION("snd_boat_lerp_rpm", 0x0049380f, "scalar value for boat rpm");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_high_max", 0x00493d0f, "boat pitch high max");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_high_min", 0x00493cd7, "boat pitch high min");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_idle_max", 0x00493bbf, "boat pitch low min");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_idle_min", 0x00493b87, "boat pitch low min");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_low_max", 0x00493c2f, "boat pitch low min");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_low_min", 0x00493bf7, "boat pitch low min");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_med_max", 0x00493c9f, "boat pitch med max");
	DVAR_PATCH_DESCRIPTION("snd_boat_pitch_med_min", 0x00493c67, "boat pitch med min");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_high_fin_end", 0x00493b4f, "rpm point where engine_high fade in begins");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_high_start", 0x00493b17, "rpm point where engine_high start");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_idle_end", 0x0049391f, "rpm point where engine_idle ends");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_idle_fout_start", 0x004938e1, "rpm point where engine_idle begins to fade out");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_low_end", 0x004939ff, "rpm point where engine_low ends");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_low_fin_end", 0x0049398f, "rpm point where engine_low fade in ends");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_low_fout_start", 0x004939c7, "rpm point where engine_low fade out begins");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_low_start", 0x00493957, "rpm point where engine_low start");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_med_end", 0x00493adf, "rpm point where engine_medium ends");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_med_fin_end", 0x00493a6f, "rpm point where engine_med fade in ends");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_med_fout_start", 0x00493aa7, "rpm point where engine_med fade out begins");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_med_start", 0x00493a37, "rpm point where engine_medium start");
	DVAR_PATCH_DESCRIPTION("snd_boat_rpm_scalar", 0x004937bc, "scalar value for boat rpm");
	DVAR_PATCH_DESCRIPTION("snd_boat_water_fast_min", 0x00493db1, "boat pitch high max");
	DVAR_PATCH_DESCRIPTION("snd_boat_water_idle_max", 0x00493d79, "boat pitch high max");
	DVAR_PATCH_DESCRIPTION("snd_boat_water_pitch_max", 0x00493e21, "boat pitch high max");
	DVAR_PATCH_DESCRIPTION("snd_boat_water_slow_max", 0x00493de9, "boat pitch high max");
	DVAR_PATCH_DESCRIPTION("snd_boat_water_slow_min", 0x00493d47, "boat pitch high max");
	DVAR_PATCH_DESCRIPTION("snd_debugAlias", 0x00493706, "Print out tracking information about a particular alias");
	DVAR_PATCH_DESCRIPTION("snd_debug_snapshot", 0x0049375d, "enable debug snapshot");
	DVAR_PATCH_DESCRIPTION("snd_dlpf_attenuation", 0x00492ca8, "attenuation for distance lpf");
	DVAR_PATCH_DESCRIPTION("snd_dlpf_max_distance", 0x00492c34, "max distance for distance lpf");
	DVAR_PATCH_DESCRIPTION("snd_dlpf_min_distance", 0x00492c70, "min distance for distance lpf");
	DVAR_PATCH_DESCRIPTION("snd_dopplerRate", 0x00492b91, "global doppler lerp rate");
	DVAR_PATCH_DESCRIPTION("snd_dopplerScale", 0x00492b50, "global doppler ratio");
	DVAR_PATCH_DESCRIPTION("snd_draw3D", 0x00492a31, "Draw the position and info of world sounds");
	DVAR_PATCH_DESCRIPTION("snd_drawInfo", 0x004a3dd8, "Draw debugging information for sounds");
	DVAR_PATCH_DESCRIPTION("snd_drawSort", 0x004a3df5, "Sort debugging information for sounds");
	DVAR_PATCH_DESCRIPTION("snd_dry_scale", 0x00493579, "scalar value for dry signal path");
	DVAR_PATCH_DESCRIPTION("snd_dsp_drc_ratio", 0x004934f6, "ratio for master limiter");
	DVAR_PATCH_DESCRIPTION("snd_dsp_drc_threshold", 0x004934ba, "threshold for master limiter");
	DVAR_PATCH_DESCRIPTION("snd_flux_separation", 0x00492bc4, "separation of L/R flux elements, 0 none, 1 180 deg, not linear in angle");
	DVAR_PATCH_DESCRIPTION("snd_futz", 0x0049322e, "futz");
	DVAR_PATCH_DESCRIPTION("snd_futz_blend", 0x004940eb, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_bpf_f", 0x0049411c, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_bpf_q", 0x00494159, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_clip_post", 0x00494395, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_clip_pre", 0x0049435d, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_distortion", 0x00494245, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_force", 0x004943c9, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_ls_f", 0x004941d1, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_ls_g", 0x00494195, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_ls_q", 0x0049420d, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_min", 0x00493260, "futz min");
	DVAR_PATCH_DESCRIPTION("snd_futz_postg", 0x004942b5, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_preg", 0x0049427d, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_tg", 0x00494325, "");
	DVAR_PATCH_DESCRIPTION("snd_futz_th", 0x004942e9, "");
	DVAR_PATCH_DESCRIPTION("snd_global_pitch", 0x004931e3, "global pitch");
	DVAR_PATCH_DESCRIPTION("snd_hdr_channel_threshold", 0x0049338b, "percent of channels active when hdr kicks in");
	DVAR_PATCH_DESCRIPTION("snd_hdr_maximum_priority", 0x004933fb, "sounds more than this are at normal volume");
	DVAR_PATCH_DESCRIPTION("snd_hdr_minimum_level", 0x0049331d, "hdr minimum attenuation");
	DVAR_PATCH_DESCRIPTION("snd_hdr_minimum_priority", 0x004933c3, "sounds less than this are silent");
	DVAR_PATCH_DESCRIPTION("snd_hdr_rate", 0x0049334f, "hdr lerp rate");
	DVAR_PATCH_DESCRIPTION("snd_isbig_distance", 0x004932ce, "distance where isbig doesn't make a difference in occlusion");
	DVAR_PATCH_DESCRIPTION("snd_levelFadeTime", 0x00492abc, "The amount of time in milliseconds for all audio to fade in at the start of a level");
	DVAR_PATCH_DESCRIPTION("snd_master_override", 0x00493670, "overide current master");
	DVAR_PATCH_DESCRIPTION("snd_menu_center_channel", 0x00493127, "options menu center channel");
	DVAR_PATCH_DESCRIPTION("snd_menu_cinematic", 0x0049305f, "Scales the volume of Bink videos.");
	DVAR_PATCH_DESCRIPTION("snd_menu_left_channel", 0x004930cb, "options menu left channel");
	DVAR_PATCH_DESCRIPTION("snd_menu_left_surround", 0x00493155, "options menu left surround");
	DVAR_PATCH_DESCRIPTION("snd_menu_lfe", 0x004931b1, "options menu lfe");
	DVAR_PATCH_DESCRIPTION("snd_menu_listen_level", 0x004930a7, "options menu listening level");
	DVAR_PATCH_DESCRIPTION("snd_menu_master", 0x00493031, "options menu master");
	DVAR_PATCH_DESCRIPTION("snd_menu_music", 0x00492fd5, "options menu music");
	DVAR_PATCH_DESCRIPTION("snd_menu_right_channel", 0x004930f9, "options menu right channel");
	DVAR_PATCH_DESCRIPTION("snd_menu_right_surround", 0x00493183, "options menu right surround");
	DVAR_PATCH_DESCRIPTION("snd_menu_sfx", 0x00493003, "options menu sfx");
	DVAR_PATCH_DESCRIPTION("snd_menu_speaker_setup", 0x00493088, "options menu speaker setup");
	DVAR_PATCH_DESCRIPTION("snd_menu_voice", 0x00492fa5, "options menu voice");
	DVAR_PATCH_DESCRIPTION("snd_minigun_loop_start", 0x00493e95, "spin time elapse until loop sound starts playing");
	DVAR_PATCH_DESCRIPTION("snd_minigun_pitch_end", 0x00493f05, "pitch where the loop ends");
	DVAR_PATCH_DESCRIPTION("snd_minigun_pitch_start", 0x00493ecd, "pitch where the loop starts");
	DVAR_PATCH_DESCRIPTION("snd_mute_alias_substring", 0x00493e72, "mute alias with not matching substring");
	DVAR_PATCH_DESCRIPTION("snd_occlusion_attenuation", 0x00492d20, "maximum occlusion attenuation");
	DVAR_PATCH_DESCRIPTION("snd_occlusion_cull_distance", 0x00492d98, "distance at which we don't do occlusion at start");
	DVAR_PATCH_DESCRIPTION("snd_occlusion_rate", 0x00492d5c, "snd occlusion rate");
	DVAR_PATCH_DESCRIPTION("snd_omnidirectionalPercentage", 0x00492b1e, "Percentage of sound volume that is 'directionless'");
	DVAR_PATCH_DESCRIPTION("snd_pan_filter", 0x00494416, "");
	DVAR_PATCH_DESCRIPTION("snd_pitch_timescale", 0x00492f73, "pitch scalar by timescale");
	DVAR_PATCH_DESCRIPTION("snd_playing_priority_boost", 0x00492bfc, "priority penalty for new sounds");
	DVAR_PATCH_DESCRIPTION("snd_priority_rate", 0x0049346b, "interpolation rate for minimum priority");
	DVAR_PATCH_DESCRIPTION("snd_priority_window", 0x00493433, "width of priority window for sounds to play");
	DVAR_PATCH_DESCRIPTION("snd_proximity_filter", 0x00494034, "");
	DVAR_PATCH_DESCRIPTION("snd_proximity_max_dist", 0x00493fc7, "");
	DVAR_PATCH_DESCRIPTION("snd_proximity_max_late_cut", 0x00493ffc, "");
	DVAR_PATCH_DESCRIPTION("snd_proximity_min_dist", 0x00493f90, "");
	DVAR_PATCH_DESCRIPTION("snd_ps3_vol_occlusion_attenuation_dry", 0x00494444, "maximum dry volume occlusion attenuation for PS3");
	DVAR_PATCH_DESCRIPTION("snd_ps3_vol_occlusion_attenuation_wet", 0x0049447c, "maximum wet volume occlusion attenuation for PS3");
	DVAR_PATCH_DESCRIPTION("snd_radverb_matrix", 0x00493630, "radverb delay matrix selection");
	DVAR_PATCH_DESCRIPTION("snd_realDelay", 0x00492aea, "turn on 'realistic' sound delay");
	DVAR_PATCH_DESCRIPTION("snd_reverb_override", 0x0049364f, "overide current verb");
	DVAR_PATCH_DESCRIPTION("snd_reverb_proximity_distance", 0x00493607, "max dist for reverb proximity effect");
	DVAR_PATCH_DESCRIPTION("snd_slaveFadeInTime", 0x00492a55, "the time in seconds for slave fade in");
	DVAR_PATCH_DESCRIPTION("snd_slaveFadeOutTime", 0x00492a8d, "the time in seconds for slave fade out");
	DVAR_PATCH_DESCRIPTION("snd_solo_alias_substring", 0x00493e54, "mute alias with matching substring");
	DVAR_PATCH_DESCRIPTION("snd_speakerConfiguration", 0x004944e3, "Speaker configuration");
	DVAR_PATCH_DESCRIPTION("snd_start_alias", 0x00493f30, "start sound");
	DVAR_PATCH_DESCRIPTION("snd_stop_alias", 0x00493f4e, "stop sound");
	DVAR_PATCH_DESCRIPTION("snd_test_verb", 0x004935d5, "test verb wetdry");
	DVAR_PATCH_DESCRIPTION("snd_throttle_reduce_vol", 0x004938af, "ammount to reduce engine vol");
	DVAR_PATCH_DESCRIPTION("snd_throttle_time_held_down", 0x0049387b, "how long (ms) throttle is held before engine vol begins to decrease");
	DVAR_PATCH_DESCRIPTION("snd_timescale_filter", 0x00493545, "filter coef for timescale fade");
	DVAR_PATCH_DESCRIPTION("snd_water_occlusion_attenuation", 0x00492dcc, "in water attenuation");
	DVAR_PATCH_DESCRIPTION("snd_water_occlusion_distance", 0x00492e08, "max distance from surface for water occlusion");
	DVAR_PATCH_DESCRIPTION("snd_water_occlusion_minimum", 0x00492e40, "min distance from surface for water occlusion");
	DVAR_PATCH_DESCRIPTION("snd_water_omni_amount", 0x00492f20, "omni amount at max distance underwater");
	DVAR_PATCH_DESCRIPTION("snd_water_omni_distance", 0x00492eec, "max distance for undewater omni");
	DVAR_PATCH_DESCRIPTION("snd_water_pitch_amount", 0x00492eb4, "pitch amount at max distance underwater");
	DVAR_PATCH_DESCRIPTION("snd_water_pitch_distance", 0x00492e7c, "max distance for underwater pitch changes");
	DVAR_PATCH_DESCRIPTION("snd_wet_scale", 0x004935a7, "scalar value for wet signal path");
	DVAR_PATCH_DESCRIPTION("splitscreen_lobbyPlayerCount", 0x00836328, "Splitscreen lobby player count string.");
	DVAR_PATCH_DESCRIPTION("splitscreen_partyPlayerCount", 0x00836343, "Splitscreen lobby party player count string.");
	DVAR_PATCH_DESCRIPTION("stat_version", 0x004e1578, "Stats version number");
	DVAR_PATCH_DESCRIPTION("statusinfo_onEscArg", 0x00836679, "UI Statusinfo EscArg");
	DVAR_PATCH_DESCRIPTION("steamid", 0x0046cbdb, "Player's SteamID");
	DVAR_PATCH_DESCRIPTION("stopspeed", 0x0065ec3f, "The player deceleration");
	DVAR_PATCH_DESCRIPTION("sv_FFCheckSums", 0x006988a2, "Fast File server checksums");
	DVAR_PATCH_DESCRIPTION("sv_FFNames", 0x006988bd, "Names of Fast Files used by the server");
	DVAR_PATCH_DESCRIPTION("sv_allowedClan1", 0x00698a60, "Allow this clan to join the server");
	DVAR_PATCH_DESCRIPTION("sv_allowedClan2", 0x00698a7b, "Allow this clan to join the server");
	DVAR_PATCH_DESCRIPTION("sv_connectTimeout", 0x006989bf, "seconds without any message when a client is loading");
	DVAR_PATCH_DESCRIPTION("sv_fps", 0x00698981, "Server frames per second");
	DVAR_PATCH_DESCRIPTION("sv_hostname", 0x006984ef, "Host name of the server");
	DVAR_PATCH_DESCRIPTION("sv_iwdNames", 0x0069884e, "Names of IWD files used by the server");
	DVAR_PATCH_DESCRIPTION("sv_iwds", 0x00698833, "IWD server checksums");
	DVAR_PATCH_DESCRIPTION("sv_keywords", 0x006983ac, "Server keywords");
	DVAR_PATCH_DESCRIPTION("sv_kickBanTime", 0x00698aea, "Time in seconds for a player to be banned from the server after being kicked");
	DVAR_PATCH_DESCRIPTION("sv_mapRotation", 0x00698b2e, "List of maps for the server to play");
	DVAR_PATCH_DESCRIPTION("sv_mapRotationCurrent", 0x00698b49, "Current map in the map rotation");
	DVAR_PATCH_DESCRIPTION("sv_mapname", 0x007e0c19, "The current map name");
	DVAR_PATCH_DESCRIPTION("sv_maxPing", 0x00698771, "Maximum ping allowed on the server");
	DVAR_PATCH_DESCRIPTION("sv_maxRate", 0x006986ca, "Maximum bit rate");
	DVAR_PATCH_DESCRIPTION("sv_minPing", 0x0069874f, "Minimum ping allowed on the server");
	DVAR_PATCH_DESCRIPTION("sv_network_fps", 0x00698be8, "Number of times per second the server checks for net messages");
	DVAR_PATCH_DESCRIPTION("sv_noname", 0x0069850f, "Player name assigned to players that fail name validation");
	DVAR_PATCH_DESCRIPTION("sv_padPackets", 0x00698a46, "add nop bytes to messages");
	DVAR_PATCH_DESCRIPTION("sv_paused", 0x0082bfdf, "Pause the server");
	DVAR_PATCH_DESCRIPTION("sv_playlistFetchInterval", 0x0056ecc2, "Interval in seconds between playlist fetches");
	DVAR_PATCH_DESCRIPTION("sv_privateClients", 0x006984d0, "Maximum number of private clients allowed on the server");
	DVAR_PATCH_DESCRIPTION("sv_privatePassword", 0x006987fd, "password for the privateClient slots");
	DVAR_PATCH_DESCRIPTION("sv_reconnectlimit", 0x00698a1f, "minimum seconds between connect messages");
	DVAR_PATCH_DESCRIPTION("sv_referencedFFCheckSums", 0x006988d8, "Checksum of all referenced Fast Files");
	DVAR_PATCH_DESCRIPTION("sv_referencedFFNames", 0x006988f3, "Names of all referenced Fast Files");
	DVAR_PATCH_DESCRIPTION("sv_referencedIwdNames", 0x00698884, "Names of all referenced IWD files");
	DVAR_PATCH_DESCRIPTION("sv_referencedIwds", 0x00698869, "Checksum of all referenced IWD files");
	DVAR_PATCH_DESCRIPTION("sv_showPingSpam", 0x006989e4, "Turns on ping info spam.");
	DVAR_PATCH_DESCRIPTION("sv_timeout", 0x006989a0, "seconds without any message");
	DVAR_PATCH_DESCRIPTION("sv_voiceQuality", 0x0069892c, "Voice quality");
	DVAR_PATCH_DESCRIPTION("sv_zombietime", 0x00698a00, "seconds to sync messages after disconnect");
	DVAR_PATCH_DESCRIPTION("sys_configSum", 0x008679ed, "Configuration checksum");
	DVAR_PATCH_DESCRIPTION("sys_configureGHz", 0x00867986, "Normalized total CPU power, based on cpu type, count, and speed; used in autoconfigure");
	DVAR_PATCH_DESCRIPTION("sys_cpuGHz", 0x00867a3e, "Measured CPU speed");
	DVAR_PATCH_DESCRIPTION("sys_cpuName", 0x00867a6e, "CPU name description");
	DVAR_PATCH_DESCRIPTION("sys_gpu", 0x008679cf, "GPU description");
	DVAR_PATCH_DESCRIPTION("sys_sysMB", 0x008679ad, "Physical memory in the system");
	DVAR_PATCH_DESCRIPTION("team_indicator", 0x005913ba, "The team indicator modes : 0 - Full Name ; 1 - Abbreviated ; 2 - Icon Only");
	DVAR_PATCH_DESCRIPTION("tickerHeaderWidth", 0x0083635e, "The width of the ticker header text used to align the the ticker message.");
	DVAR_PATCH_DESCRIPTION("tickerStandardWidth", 0x00579cd8, "Ticker message text standard width.");
	DVAR_PATCH_DESCRIPTION("tickerWidescreenWidth", 0x00579cbb, "Ticker message text widescreen width.");
	DVAR_PATCH_DESCRIPTION("timeUntilDropRange", 0x0055ba1c, "Range of how much time a glass shard will stay on the frame before falling");
	DVAR_PATCH_DESCRIPTION("timescale", 0x0082bf1e, "Scale time of each frame");
	DVAR_PATCH_DESCRIPTION("tree_bend", 0x005da783, "bend amount of tree trunk");
	DVAR_PATCH_DESCRIPTION("tree_frequency", 0x005da7ef, "frequency of tree bend oscillation");
	DVAR_PATCH_DESCRIPTION("tree_random", 0x005da7b7, "random addition to bend amount of tree trunk");
	DVAR_PATCH_DESCRIPTION("turretPlayerAvoidScale", 0x007e19df, "Auto turrets will try to avoid the player. They will not choose a target that is within a cone around the player. The diameter of the cone is the player's height, so the cone is smaller, the farther the player is from the turret. Use this dvar to scale the cone size.");
	DVAR_PATCH_DESCRIPTION("turret_SentryTargetTime", 0x004b83a0, "Time in milliseconds that a sentry turret will stay locked on a target before verifying line of sight");
	DVAR_PATCH_DESCRIPTION("typeWriterCod7LetterFXTime", 0x0056bd5f, "Time it takes for a letter to come in. ");
	DVAR_PATCH_DESCRIPTION("ui_ammo_stock_width", 0x004df82b, "Width of the ammo stock shown on the right.");
	DVAR_PATCH_DESCRIPTION("ui_animSpeedScale", 0x00835d06, "Scales the UI animation speed.");
	DVAR_PATCH_DESCRIPTION("ui_bigFont", 0x00835ff5, "Big font scale");
	DVAR_PATCH_DESCRIPTION("ui_borderLowLightScale", 0x008365ab, "Scales the border color for the lowlight color on certain UI borders");
	DVAR_PATCH_DESCRIPTION("ui_browserFriendlyfire", 0x005f1631, "Friendly fire is active");
	DVAR_PATCH_DESCRIPTION("ui_browserGameMode", 0x005f16b5, "Game mode preferred in server browser filter.");
	DVAR_PATCH_DESCRIPTION("ui_browserKillcam", 0x005f165b, "Kill cam is active");
	DVAR_PATCH_DESCRIPTION("ui_browserMod", 0x005f15fa, "UI Mod value");
	DVAR_PATCH_DESCRIPTION("ui_browserShowPassword", 0x005f15c3, "Show servers that are password protected");
	DVAR_PATCH_DESCRIPTION("ui_browserShowPunkBuster", 0x005f17d2, "Only show PunkBuster servers?");
	DVAR_PATCH_DESCRIPTION("ui_browserToolTip", 0x005f179f, "The content of the server browser toolip");
	DVAR_PATCH_DESCRIPTION("ui_browserVoiceChat", 0x005f1678, "Voice chat is active");
	DVAR_PATCH_DESCRIPTION("ui_buildLocation", 0x00836122, "Where to draw the build number");
	DVAR_PATCH_DESCRIPTION("ui_buildSize", 0x0083615d, "Font size to use for the build number");
	DVAR_PATCH_DESCRIPTION("ui_challengeGameMode", 0x004f2353, "Game mode type for the challenge you are viewing");
	DVAR_PATCH_DESCRIPTION("ui_clanDescription", 0x00644314, "Description of player's clan.");
	DVAR_PATCH_DESCRIPTION("ui_clanName", 0x006442f9, "Name of player's clan.");
	DVAR_PATCH_DESCRIPTION("ui_clanRecommendationCount", 0x00644354, "Number of players recommended to clan");
	DVAR_PATCH_DESCRIPTION("ui_connectScreenTextGlowColor", 0x008365f4, "Glow color applied to the mode and map name strings on the connect screen.");
	DVAR_PATCH_DESCRIPTION("ui_currentMap", 0x00836021, "Current map index");
	DVAR_PATCH_DESCRIPTION("ui_currentNetMap", 0x005f1574, "Currently running map");
	DVAR_PATCH_DESCRIPTION("ui_currentRecentPlayer", 0x0083609e, "Selected recent player");
	DVAR_PATCH_DESCRIPTION("ui_customClassName", 0x00835dbb, "Custom Class name");
	DVAR_PATCH_DESCRIPTION("ui_customModeDesc", 0x00835d85, "Description for the custom game mode.");
	DVAR_PATCH_DESCRIPTION("ui_customModeEditDesc", 0x00835da0, "Description for the custom game mode while editing.");
	DVAR_PATCH_DESCRIPTION("ui_customModeEditName", 0x00835d6a, "Name to give the currently edited custom game mode when editing is complete");
	DVAR_PATCH_DESCRIPTION("ui_customModeIndex", 0x00835d30, "Custom game mode selected index into sharedUiInfo.customGameTypes");
	DVAR_PATCH_DESCRIPTION("ui_customModeName", 0x00835d4c, "Custom game mode name");
	DVAR_PATCH_DESCRIPTION("ui_dedicated", 0x005f1555, "True if this is a dedicated server");
	DVAR_PATCH_DESCRIPTION("ui_demoname", 0x00836083, "Current selected demo name");
	DVAR_PATCH_DESCRIPTION("ui_dropdownButtonOffset", 0x006444a1, "Used to calculate the Y offset of the dropdown buttons.");
	DVAR_PATCH_DESCRIPTION("ui_dropdownListMax", 0x00644438, "Number of elements in list that opened dropdown.");
	DVAR_PATCH_DESCRIPTION("ui_dropdownMax", 0x0064445a, "Number of elements in the dropdown.");
	DVAR_PATCH_DESCRIPTION("ui_dropdownOffset", 0x0064447f, "Used to calculate the Y offset of the dropdown.");
	DVAR_PATCH_DESCRIPTION("ui_friendNameNew", 0x005f16d0, "New friend name");
	DVAR_PATCH_DESCRIPTION("ui_friendPendingSelectedInd", 0x005f170d, "Currently selected pending friend index");
	DVAR_PATCH_DESCRIPTION("ui_friendSelectedInd", 0x005f16eb, "Currently selected friend index");
	DVAR_PATCH_DESCRIPTION("ui_gametype", 0x0083604a, "Current game type");
	DVAR_PATCH_DESCRIPTION("ui_incomingProposalCount", 0x00644398, "Number of incoming clan requests");
	DVAR_PATCH_DESCRIPTION("ui_inviteSelectedInd", 0x005f1732, "Currently selected invite index");
	DVAR_PATCH_DESCRIPTION("ui_joinGametype", 0x005f1520, "Game join type");
	DVAR_PATCH_DESCRIPTION("ui_listboxIndex", 0x008366a2, "Current position in a listbox. Used to position associated drop down menu.");
	DVAR_PATCH_DESCRIPTION("ui_mapname", 0x00836068, "Current map name");
	DVAR_PATCH_DESCRIPTION("ui_netGametype", 0x0052dd9d, "Game type");
	DVAR_PATCH_DESCRIPTION("ui_netGametypeName", 0x005f153a, "Displayed game type name");
	DVAR_PATCH_DESCRIPTION("ui_netSource", 0x00835fa8, R"(The network source where:
 0:Unranked
 1:Ranked
 2:Wager
		3:Favourites
 4:Friends)");
	DVAR_PATCH_DESCRIPTION("ui_numPersonalBests", 0x004f2316, "Number of personal bests to display in the AAR");
	DVAR_PATCH_DESCRIPTION("ui_onCloseArgs", 0x00836640, "Passes on close arguments to a menu.");
	DVAR_PATCH_DESCRIPTION("ui_onlineClanCount", 0x0064432f, "Number of clan members online.");
	DVAR_PATCH_DESCRIPTION("ui_right_ammo_width", 0x004df809, "Width of the ammo shown on the right.");
	DVAR_PATCH_DESCRIPTION("ui_serverStatusTimeOut", 0x008360ba, "Time in milliseconds before a server status request times out");
	DVAR_PATCH_DESCRIPTION("ui_showMenuOnly", 0x008361a1, "If set, only menus using this name will draw.");
	DVAR_PATCH_DESCRIPTION("ui_smallFont", 0x00835fc4, "Small font scale");
	DVAR_PATCH_DESCRIPTION("ui_totalClanMemberCount", 0x00644376, "Total number of players who are part of the clan.");
	DVAR_PATCH_DESCRIPTION("uiscript_debug", 0x0052de89, "spam debug info for the ui script");
	DVAR_PATCH_DESCRIPTION("vehControlMode", 0x00660d5a, "Changes the vehicle controls and camera mode");
	DVAR_PATCH_DESCRIPTION("vehGunnerSplashDamage", 0x007e1ca2, "Percentage of projectile and grenade splash damage that vehicle gunners take.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterAlwaysFaceCameraRate", 0x00409dea, "How quickly the helicopter catches up to the camera.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterDecelerationFwd", 0x00409be4, "Set the deceleration of the player helicopter (as a fraction of acceleration) in the direction the chopper is facing. So 1.0 makes it equal to the acceleration.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterDecelerationSide", 0x00409c1c, "Set the side-to-side deceleration of the player helicopter (as a fraction of acceleration). So 1.0 makes it equal to the acceleration.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterDefaultPitch", 0x00409e7d, "Set the default pitch of the helicopter.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterHoverSpeedThreshold", 0x00409ae5, "The speed below which the player helicopter begins to jitter the tilt, for hovering");
	DVAR_PATCH_DESCRIPTION("vehHelicopterJitterJerkyness", 0x00409d45, "Specifies how jerky the tilt jitter should be");
	DVAR_PATCH_DESCRIPTION("vehHelicopterLookaheadTime", 0x00409aad, "How far ahead (in seconds) the player helicopter looks ahead, to avoid hard collisions. (Like driving down the highway, you should keep 2 seconds distance between you and the vehicle in front of you)");
	DVAR_PATCH_DESCRIPTION("vehHelicopterMaxAccelVertical", 0x00409a76, "Maximum vertical acceleration of the player helicopter (in MPH per second)");
	DVAR_PATCH_DESCRIPTION("vehHelicopterMaxSpeedVertical", 0x00409f25, "Maximum vertical speed of the player helicopter (in MPH)");
	DVAR_PATCH_DESCRIPTION("vehHelicopterPathTransitionTime", 0x00409e26, "How quickly the helicopter transitions from driving path to locked path.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterRightStickDeadzone", 0x00409b1d, "Dead-zone for the axes of the right thumbstick. This helps to better control the two axes separately.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterRotDecel", 0x00409eb5, "Set the rotational deceleration or dampening for the helicopter.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterStrafeDeadzone", 0x00409b55, "Dead-zone so that you can fly straight forward easily without accidentally strafing (and thus rolling).");
	DVAR_PATCH_DESCRIPTION("vehHelicopterTiltFromControllerAxes", 0x00409ca3, "The amount of tilt caused by the desired velocity (i.e., the amount of controller stick deflection)");
	DVAR_PATCH_DESCRIPTION("vehHelicopterTiltFromFwdAndYaw", 0x00409eed, "The amount of roll caused by yawing while moving forward.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterTiltFromFwdAndYaw_VelAtMaxTilt", 0x00409cd5, "The forward speed (as a fraction of top speed) at which the tilt due to yaw reaches is maximum value.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterTiltFromViewangles", 0x00409d09, "The amount of tilt caused by the current velocity");
	DVAR_PATCH_DESCRIPTION("vehHelicopterTiltMomentum", 0x00409d96, "The amount of rotational momentum the helicopter has with regards to tilting.");
	DVAR_PATCH_DESCRIPTION("vehHelicopterYawAltitudeControls", 0x00409ba3, "Determines how to control yaw and altitude");
	DVAR_PATCH_DESCRIPTION("vehHelicopterYawOnLeftStick", 0x00409c6b, "The yaw speed created by the left stick when pushing the stick diagonally (e.g., moving forward and strafing slightly).");
	DVAR_PATCH_DESCRIPTION("vehRecenterDelay", 0x00660d76, "Specifies a delay in msec, before triggering the camera auto-centering functionality in idle mode");
	DVAR_PATCH_DESCRIPTION("vehicle_perk_boost_duration_seconds", 0x00660dda, "Vehicle perk boost duration in seconds.");
	DVAR_PATCH_DESCRIPTION("vehicle_sounds_cutoff", 0x00660fba, "Use to turn of the vehicle sounds if the distance between the camera and the vehicle is more than this value");
	DVAR_PATCH_DESCRIPTION("version", 0x0082d0de, "Game version");
	DVAR_PATCH_DESCRIPTION("vid_xpos", 0x006ca23c, "Game window horizontal position");
	DVAR_PATCH_DESCRIPTION("vid_ypos", 0x006ca25e, "game window vertical position");
	DVAR_PATCH_DESCRIPTION("wagerCategory", 0x00590c9c, "The wager category number");
	DVAR_PATCH_DESCRIPTION("wagerCategoryPlaylist", 0x00590cbb, "The wager playlist index in the category");
	DVAR_PATCH_DESCRIPTION("waitForStreamer", 0x0082c1c1, "1) wait for initial lowmips, 2) wait for full initial texture load.");
	DVAR_PATCH_DESCRIPTION("waitOnStatsTimeout", 0x004e16a4, "Time in seconds to wait for stats to be fetched while dev mapping.");
	DVAR_PATCH_DESCRIPTION("waterbrush_entity", 0x00661074, "CM_GetWaterHeight function will test against this enitty. Can be used on brushmodels to move the water level");
	DVAR_PATCH_DESCRIPTION("waypointDistFade", 0x0054a19f, "Distance to start fading waypoints when the player is ADS");
	DVAR_PATCH_DESCRIPTION("waypointDistScaleRangeMax", 0x0054a12f, "Distance from player that icon distance scaling ends.");
	DVAR_PATCH_DESCRIPTION("waypointDistScaleRangeMin", 0x0054a0f7, "Distance from player that icon distance scaling starts.");
	DVAR_PATCH_DESCRIPTION("waypointDistScaleSmallest", 0x0054a167, "Smallest scale that the distance effect uses.");
	DVAR_PATCH_DESCRIPTION("waypointIconHeight", 0x00549e38, "Height of the offscreen pointer.");
	DVAR_PATCH_DESCRIPTION("waypointIconWidth", 0x00549dfc, "Width of the offscreen pointer.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenCornerRadius", 0x0054a04f, "Size of the rounded corners.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenDistanceThresholdAlpha", 0x00549f28, "Distance from the threshold over which offscreen objective icons lerp their alpha.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenPadBottom", 0x00549ffc, "Offset from the edge.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenPadLeft", 0x00549f60, "Offset from the edge.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenPadRight", 0x00549f98, "Offset from the edge.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenPadTop", 0x00549fca, "Offset from the edge.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenPointerDistance", 0x00549eec, "Distance from the center of the offscreen objective icon to the center its arrow.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenPointerHeight", 0x00549eb0, "Height of the offscreen pointer.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenPointerWidth", 0x00549e74, "Width of the offscreen pointer.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenScaleLength", 0x0054a087, "How far the offscreen icon scale travels from full to smallest scale.");
	DVAR_PATCH_DESCRIPTION("waypointOffscreenScaleSmallest", 0x0054a0c3, "Smallest scale that the offscreen effect uses.");
	DVAR_PATCH_DESCRIPTION("waypointPlayerOffsetCrouch", 0x0054a2e0, "For waypoints pointing to players, how high to offset off of their origin when they are crouching.");
	DVAR_PATCH_DESCRIPTION("waypointPlayerOffsetProne", 0x0054a2a8, "For waypoints pointing to players, how high to offset off of their origin when they are prone.");
	DVAR_PATCH_DESCRIPTION("waypointPlayerOffsetStand", 0x0054a318, "For waypoints pointing to players, how high to offset off of their origin when they are standing.");
	DVAR_PATCH_DESCRIPTION("waypointSplitscreenScale", 0x0054a1f6, "Scale applied to waypoint icons in splitscreen views.");
	DVAR_PATCH_DESCRIPTION("waypointTimeFade", 0x0054a1ce, "Time in ms to fade waypoints the player is ADS");
	DVAR_PATCH_DESCRIPTION("waypointTweakY", 0x0054a238, "");
	DVAR_PATCH_DESCRIPTION("weaponCamoLodDist", 0x005e23f6, "Distance to stop drawing the weapon camo.");
	DVAR_PATCH_DESCRIPTION("weaponClanTagLodDist", 0x005e2463, "Distance to stop drawing the weapon clan tag.");
	DVAR_PATCH_DESCRIPTION("weaponEmblemLodDist", 0x005e242a, "Distance to stop drawing the weapon emblem.");
	DVAR_PATCH_DESCRIPTION("wind_global_hi_altitude", 0x005da544, "altitude of global hi-level wind");
	DVAR_PATCH_DESCRIPTION("wind_global_low_altitude", 0x005da50c, "altitude of global low-level wind");
	DVAR_PATCH_DESCRIPTION("wind_global_low_strength_percent", 0x005da57c, "strength of global low-level wind, expressed as a percentage of wind_global_vector");
	DVAR_PATCH_DESCRIPTION("wind_global_vector", 0x005da4ca, "global wind force in units/sec. This is also the hi-level wind");
	DVAR_PATCH_DESCRIPTION("wind_grass_gust_distance", 0x005da72a, "max distance at which to place gusts");
	DVAR_PATCH_DESCRIPTION("wind_grass_gust_radius", 0x005da6c4, "size of global wind gust effector");
	DVAR_PATCH_DESCRIPTION("wind_grass_gust_speed", 0x005da690, "speed multiplier for gusts");
	DVAR_PATCH_DESCRIPTION("wind_grass_gust_strength", 0x005da6f8, "percentage to bump the wind in a gust");
	DVAR_PATCH_DESCRIPTION("wind_grass_gustinterval", 0x005da5f1, "global wind force gust interval");
	DVAR_PATCH_DESCRIPTION("wind_grass_scale", 0x005da624, "global wind force scaler");
	DVAR_PATCH_DESCRIPTION("wind_grass_tension", 0x005da658, "global wind grass tension (stiffness)");
	DVAR_PATCH_DESCRIPTION("wind_leaf_scale", 0x005da5b4, "global wind grass tension (stiffness)");
	DVAR_PATCH_DESCRIPTION("wind_local_amplitude", 0x005da86d, "localized wind amplitude");
	DVAR_PATCH_DESCRIPTION("wind_local_frequency", 0x005da8b3, "frequency of tree bend oscillation");
	DVAR_PATCH_DESCRIPTION("wind_local_gust_radius", 0x005da8f3, "size of local wind gust effector");
	DVAR_PATCH_DESCRIPTION("wind_local_gust_strength", 0x005da927, "percentage to bump the wind in a local gust");
	DVAR_PATCH_DESCRIPTION("wind_local_vector", 0x005da827, "localized wind force in units/sec");
	DVAR_PATCH_DESCRIPTION("winvoice_mic_reclevel", 0x0052a458, "Microphone recording level");
	DVAR_PATCH_DESCRIPTION("winvoice_mic_scaler", 0x0052a49f, "Microphone scaler value");
	DVAR_PATCH_DESCRIPTION("xblive_mappacks", 0x0046cf49, "0 = original maps only, 1 = new maps only, 2 = both original and new");
	DVAR_PATCH_DESCRIPTION("xenon_maxVoicePacketsPerSec", 0x0046ce47, "Max voice packets per second a client will send");
	DVAR_PATCH_DESCRIPTION("xenon_maxVoicePacketsPerSecForServer", 0x0046ce64, "Max voice packets per second the server will send");

#undef DVAR_PATCH_DESCRIPTION
}